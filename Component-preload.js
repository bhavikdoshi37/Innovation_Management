/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "colpal/ppm/projectmgmt/Component-preload",
	"modules": {
		"colpal/ppm/projectmgmt/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/GroupHeaderListItem\"\r\n], function(BaseObject, GroupHeaderListItem) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"colpal.ppm.projectmgmt.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias colpal.ppm.projectmgmt.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {colpal.ppm.projectmgmt.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {colpal.ppm.projectmgmt.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the next valid list item from the master list after the current.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindNextItem: function(sCurrentPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tvar iItemsCount = aItems.length;\r\n\t\t\tif (iItemsCount === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (iItemsCount > 0) {\r\n\t\t\t\tvar bFound = false;\r\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\r\n\t\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\r\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\r\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\r\n\t\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\r\n\t\t\t\t\t\t\t\treturn aItems[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFound) {\r\n\t\t\t\t\treturn null; //not valid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the list item from a path.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindListItem: function(sPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\r\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\r\n\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\treturn oItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the first list item\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindFirstItem: function() {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tif (aItems && aItems.length > 0) {\r\n\t\t\t\treturn aItems[0];\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t}\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"colpal/ppm/projectmgmt/model/formatter\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"colpal/ppm/projectmgmt/model/GroupSortState\",\r\n\t\"colpal/ppm/projectmgmt/util/IPMUtils\"\r\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox, GroupSortState, IPMUtils) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"colpal.ppm.projectmgmt.controller.Master\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Control state model\r\n\t\t\t// var oList = this.byId(\"list\");\r\n\t\t\tvar oViewModel = this._createViewModel();\r\n\t\t\t\r\n\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t// taken care of by the master list itself.\r\n\t\t\t// iOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\t\t\t// this._oListSelector = this.getOwnerComponent().oListSelector;\r\n\t\t\t// this._oGroupSortState = new GroupSortState(oViewModel);\r\n\t\t\t\r\n\t\t\t// this._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\t// this._oListFilterState = {\r\n\t\t\t// \taFilter: [],\r\n\t\t\t// \taSearch: []\r\n\t\t\t// };\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\t// oList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\t// oViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t// });\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\t// this._oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar oModel = IPMUtils.getPPMModel(this);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\toData.GlobalFilter = IPMUtils.getGlobalFilter();\r\n\t\t\t\r\n\t\t\tthis.getView().setModel (oModel, \"PPMData\");\r\n\t\t\t// IPMUtils.getStaticData(this);   \r\n\r\n\t\t\t// this.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\t// this.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\t// this._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\t\r\n\t\t\t// this.getStaticData();\r\n\t\t\t// this.getInitiatives();\r\n\t\t\t\r\n\t\t\t// this.getModel(\"appView\").getData().settings.mode = \"HideMode\";\r\n\t\t\t// this.getModel(\"appView\").refresh(false);\r\n\t\t},\r\n\t\tonFilterChange: function(oEvent){\r\n\t\t\tvar sSource = oEvent.getSource().getId();\r\n\t\t\tvar oBaseModel = IPMUtils.getBaseModel(this);\r\n\t\t\tvar ppmData = IPMUtils.getPPMModel(this).getData();\r\n\t\t\t\r\n\t\t\tif (sSource.includes(\"SubCategory\"))\r\n\t\t\t{\r\n\t\t\t\tppmData.GlobalFilter.SubcategoryKeyText = oEvent.getSource().getValue();\r\n\t\t\t}\r\n\t\t\telse if (sSource.includes(\"Category\"))\r\n\t\t\t{\r\n\t\t\t\t// get SubCategories\r\n\t\t\t\tppmData.GlobalFilter.CategoryKeyText = oEvent.getSource().getValue();\r\n\t\t\t\t// if (ppmData.GlobalFilter.CategoryKey === \"\")\r\n\t\t\t\t// {\r\n\t\t\t\t\tppmData.GlobalFilter.SubcategoryKey = \"\";\r\n\t\t\t\t\tppmData.GlobalFilter.SubcategoryKeyText = \"\";\r\n\t\t\t\t\t// ppmData.GlobalFilter.CategoryKeyText = \"\";\r\n\t\t\t\t\tif (ppmData.VHSubCategories && ppmData.VHSubCategories.CurrentGF)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tppmData.VHSubCategories.CurrentGF = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t// }\r\n\t\t\t\t// else\r\n\t\t\t\t// {\r\n\t\t\t\t\tvar oFilters = [];\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"Category\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.CategoryKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tvar sPath = \"/VHSubcategories\";\r\n\t\t\t\t\tvar oExclude = {};\r\n\t\t\t\t\tIPMUtils.readStaticData(oBaseModel, sPath, oExclude, oFilters, \"VHSubcategoriesGF\");\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\telse if (sSource.includes(\"Division\"))\r\n\t\t\t{\r\n\t\t\t\tif (ppmData.GlobalFilter.DivisionKey === \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tppmData.GlobalFilter.HubKey = \"\";\r\n\t\t\t\t\tppmData.GlobalFilter.HubKeyText = \"\";\r\n\t\t\t\t\tppmData.GlobalFilter.DivisionKeyText = \"\";\r\n\t\t\t\t\tif (ppmData.VHHubs && ppmData.VHHubs.CurrentGF)\r\n\t\t\t\t\t\tppmData.VHHubs.CurrentGF = [];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tppmData.GlobalFilter.DivisionKeyText = oEvent.getSource().getValue();\r\n\t\t\t\t\tppmData.GlobalFilter.HubKey = \"\";\r\n\t\t\t\t\t// get Hubs\r\n\t\t\t\t\tvar oFilters = [];\r\n\t\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"DivisionKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.DivisionKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tvar sPath = \"/VHHubs\";\r\n\t\t\t\t\tIPMUtils.readStaticData(oBaseModel, sPath, oExclude, oFilters, \"VHHubsGF\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (sSource.includes(\"Hub\"))\r\n\t\t\t{\r\n\t\t\t\tppmData.GlobalFilter.HubKeyText = oEvent.getSource().getValue();\r\n\t\t\t}\r\n\t\t\telse if (sSource.includes(\"ProjectType\"))\r\n\t\t\t{\r\n\t\t\t\tppmData.GlobalFilter.InnovationKeyText = oEvent.getSource().getValue();\r\n\t\t\t}\r\n\t\t\telse if (sSource.includes(\"Phase\"))\r\n\t\t\t{\r\n\t\t\t\tppmData.GlobalFilter.PhaseKeyText = oEvent.getSource().getValue();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"VariantChanged\", {});\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"setFooterText\", {});\r\n\t\t\t\r\n\t\t},\r\n\t\tgetBaseModel: function(){\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tif (!oBaseModel)\r\n\t\t\t{\r\n\t\t\t\tvar sServiceUrl = this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oServiceUrls/mainService\");\r\n\t\t\t\toBaseModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl);\r\n\t\t\t\toBaseModel.setSizeLimit(5000);\r\n\t\t\t\toBaseModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);\r\n\t\t\t\tsap.ui.getCore().setModel(oBaseModel, \"PPM\");\r\n\t\t\t}\r\n\t\t\treturn oBaseModel;\r\n\t\t},\r\n\t\t// move this to a util class\r\n\t\tgetPPMModel: function(oContext) {\r\n\t\t\t// Set up the initial selections\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tif (!oModel) {\r\n\t\t\t\tvar oData = {};\r\n\t\t\t\toData.Initiatives = {};\r\n\t\t\t\t// create other placeholders for other data\r\n\t\t\t\tvar oModel = new sap.ui.model.json.JSONModel(oData);\r\n\t\t\t\toModel.setSizeLimit(5000);\r\n\t\t\t\tsap.ui.getCore().setModel(oModel, \"PPMData\");\r\n\t\t\t}\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\t// move to util class\r\n\t\tgetStaticData: function (){\r\n\t\t\tvar oBaseModel = this.getBaseModel();\r\n\t\t\tvar sPath = \"/VHCategories\";\r\n\t\t\tvar oExclude = {};\r\n\t\t\tvar filters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHCategories\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHDivisions\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHDivisions\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHISubCategories\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHISubCategories\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHIRegions\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHIRegions\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHICategories\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHICategories\");\r\n\t\t\t\r\n\t\t\t// Todo: once VHConsumerDiffs fixed uncomment this code\r\n\t\t\t// sPath = \"/VHConsumerDiffs\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHConsumerDiffs\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHInnovationTypes\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHInnovationTypes\");\r\n\t\t\t\t\r\n\t\t},\r\n\t\treadStaticData: function(oModel, sPath, oExclude, oFilters, entityName){\r\n\t\t\tvar that = this;\r\n\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + entityName );\r\n\t\t\t\t\t\tthat.setData(that, oDataIn, entityName);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + entityName + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t\t\r\n\t\t},\r\n\t\tsetData: function(oContext, oDataIn, entityName){\r\n\t\t\tvar oModel = oContext.getPPMModel (oContext);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tif (entityName === \"VHHubs\")\r\n\t\t\t{\r\n\t\t\t\toData.VHHubs = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHBrands\")\r\n\t\t\t{\r\n\t\t\t\toData.VHBrands = oDataIn.results;\r\n\t\t\t} \r\n\t\t\telse if (entityName === \"VHSubBrands\")\r\n\t\t\t{\r\n\t\t\t\toData.VHSubBrands = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHPhases\")\r\n\t\t\t{\r\n\t\t\t\toData.VHPhases = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHStatus\")\r\n\t\t\t{\r\n\t\t\t\toData.VHStatus = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHICategories\")\r\n\t\t\t{\r\n\t\t\t\toData.VHICategories = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHIRegions\")\r\n\t\t\t{\r\n\t\t\t\toData.VHIRegions = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHISubCategories\")\r\n\t\t\t{\r\n\t\t\t\toData.VHISubCategories = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHInnovationTypes\")\r\n\t\t\t{\r\n\t\t\t\toData.VHInnovationTypes = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHConsumerDiffs\")\r\n\t\t\t{\r\n\t\t\t\toData.VHConsumerDiffs = oDataIn.results;\r\n\t\t\t}\r\n\t\t\toContext.getView().setModel (oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\t\r\n\t\tsetCategories: function(oContext, oDataIn){\r\n\t\t\tvar oModel = oContext.getPPMModel (oContext);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\toData.VHCategories = oDataIn.results;\r\n\t\t\toContext.getView().setModel (oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tsetSubCategories: function(oContext, oDataIn){\r\n\t\t\tvar oModel = oContext.getPPMModel (oContext);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\toData.VHSubCategories = oDataIn.results;\r\n\t\t\tconsole.log (\"Number of SubCategories:\" + oData.VHSubCategories.length);\r\n\t\t\toContext.getView().setModel (oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tsetDivisions: function(oContext, oDataIn){\r\n\t\t\tvar oModel = this.getPPMModel (oContext);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\toData.VHDivisions = oDataIn.results;\r\n\t\t\toContext.getView().setModel (oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetInitiatives: function (){\r\n\t\t\tvar oBaseModel = this.getBaseModel();\r\n\t\t\tvar sPath = \"/Initiatives\";\r\n\t\t\tvar oExclude = {};\r\n\t\t\tvar filters = [];\r\n\t\t\t// if (oData.PlanningYear && oData.PlanningYear !== \"\") {\r\n\t\t\t// \tfilters.push(new sap.ui.model.Filter(\"PlanningYear\", sap.ui.model.FilterOperator.EQ,\r\n\t\t\t// \t\toData.PlanningYear));\r\n\t\t\t// } else {\r\n\t\t\t// \tfilters.push(new sap.ui.model.Filter(\"PlanningYear\", sap.ui.model.FilterOperator.EQ,\r\n\t\t\t// \t\tthis.getOwnerComponent().getModel(\r\n\t\t\t// \t\t\t\"ASMConfig\").getData().Properties.PlanningYear));\r\n\t\t\t// \t}\r\n\t\t\t\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: filters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading Initiaitives\");\r\n\t\t\t\t\t\t// that.getModel ()\r\n\t\t\t\t\t\tthat.setInitiatives(that, oDataIn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in geting Initiaitives:\" + oError);\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tsetInitiatives: function (oContext, oDataIn)\r\n\t\t{\r\n\t\t\tvar oModel = this.getPPMModel (oContext);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\toData.Initiatives = oDataIn.results;\r\n\t\t\tconsole.log (\"Number of Initiatives:\" + oData.Initiatives.length);\r\n\t\t\toContext.getView().setModel (oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\t\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonListAll: function (oEvent) {\r\n\t\t\t//psutram: TODO: ensure this navigation is to a full page\r\n\t\t\tthis.getRouter().navTo(\"initiativeList\");\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t\tthis._findItem();\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"InitiativeName\", FilterOperator.Contains, sQuery)];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the sorter selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSort: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey();\r\n\t\t\t// aSorters = this._oGroupSortState.sort(sKey);\r\n\t\t\t// this._applyGroupSort(aSorters);\r\n\t\t\tvar aSorter = [];\r\n\t\t\tvar oBinding = this._oList.getBinding(\"items\");\r\n\t\t\tvar currentSorter ;\r\n\t\t\tvar sortKey = sKey;\r\n\t        var bDescending = true;\r\n\t        var bGroup = false;\r\n\t        var aSorter = [];\r\n\t\t\tif (oBinding && oBinding.aSorters)\r\n\t\t\t{\r\n\t\t\t\tcurrentSorter = oBinding.aSorters;\r\n\t\t\t\tif (currentSorter[0].sPath === sKey)\r\n\t\t\t\t{\r\n\t\t\t\t\tbDescending = !currentSorter[0].bDescending;\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t        aSorter.push(new sap.ui.model.Sorter(sortKey, bDescending, bGroup));\r\n\t        oBinding.sort(aSorter);\r\n\r\n\t\t},\r\n\r\n\t\tonOpenViewSettings: function() {\r\n\t\t\tif (!this._oViewSettingsDialog) {\r\n\t\t\t\t\r\n\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"colpal.ppm.projectmgmt.view.ViewSettingsDialog\", this);\r\n\t\t\t\tvar oModel = this.getPPMModel (this);\r\n\t\t\t\tvar filterData = oModel.getData();\r\n\t\t\t\tif (!filterData.MasterFilter)\r\n\t\t\t\t{\r\n\t\t\t\t\tfilterData.MasterFilter = {\"Division\": \"\"};\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewSettingsDialog.setModel (oModel, \"PPMData\");\r\n\t\t\t\t// this.setModel (oModel, \"PPMData\");\r\n\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\r\n\t\t\t\t// forward compact/cozy style into Dialog\r\n\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t}\r\n\t\t\tthis._oViewSettingsDialog.open();\r\n\t\t},\r\n\t\tonConfirmViewSettingsDialog: function(oEvent){\r\n\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\r\n\t\t\t\taFilters = [],\r\n\t\t\t\taCaptions = [];\r\n\r\n\t\t\tvar oModel = this.getPPMModel(this);\r\n\t\t\tvar filterData = oModel.getData().MasterFilter;\r\n\t\t\t\r\n\t\t\t// var oFilter = new sap.ui.model.Filter(\"Name\",sap.ui.model.FilterOperator.EQ, \"CCCC\");\r\n\t\t\t// var oFilter1 = new sap.ui.model.Filter(\"Id\",sap.ui.model.FilterOperator.Contains, \"CCCC\");\r\n\t\t\t// var comFil = new sap.ui.model.Filter([oFilter,oFilter1]);\r\n\t\t\t\r\n\t\t\tif (filterData.Division !== \"\")\r\n\t\t\t{\r\n\t\t\t\tvar oFilter = new sap.ui.model.Filter(\"RegionKey\",sap.ui.model.FilterOperator.EQ, filterData.Division);\r\n\t\t\t\taFilters.push(oFilter);\r\n\t\t\t}\r\n\r\n\t\t\t// // update filter state:\r\n\t\t\t// // combine the filter array and the filter string\r\n\t\t\t// aFilterItems.forEach(function(oItem) {\r\n\t\t\t// \tswitch (oItem.getKey()) {\r\n\t\t\t// \t\tcase \"Filter1\":\r\n\t\t\t// \t\t\taFilters.push(new Filter(\"GrossAmount\", FilterOperator.LE, 100));\r\n\t\t\t// \t\t\tbreak;\r\n\t\t\t// \t\tcase \"Filter2\":\r\n\t\t\t// \t\t\taFilters.push(new Filter(\"GrossAmount\", FilterOperator.GT, 100));\r\n\t\t\t// \t\t\tbreak;\r\n\t\t\t// \t\tdefault:\r\n\t\t\t// \t\t\tbreak;\r\n\t\t\t// \t}\r\n\t\t\t// \taCaptions.push(oItem.getText());\r\n\t\t\t// });\r\n\r\n\t\t\tthis._oListFilterState.aFilter = aFilters;\r\n\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\r\n\t\t\tthis._applyFilterSearch();\r\n\t\t\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar fnLeave = function() {\r\n\t\t\t\tthat._oODataModel.resetChanges();\r\n\t\t\t\tthat._showDetail(oItem);\r\n\t\t\t};\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis._leaveEditPage(fnLeave);\r\n\t\t\t} else {\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t\t// that.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t * @override\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonAdd: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"create\");\r\n\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Creates the model for the view\r\n\t\t * @private\r\n\t\t */\r\n\t\t_createViewModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitle\"),\r\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\tsortBy: \"InitiativeName\",\r\n\t\t\t\tgroupBy: \"None\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\r\n\t\t * @param {object} fnLeave - handles discard changes\r\n\t\t * @param {object} fnLeaveCancelled - handles cancel\r\n\t\t * @private\r\n\t\t */\r\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\r\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\r\n\r\n\t\t\tMessageBox.show(sQuestion, {\r\n\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: sTitle,\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnLeave();\r\n\t\t\t\t\t} else if (fnLeaveCancelled) {\r\n\t\t\t\t\t\tfnLeaveCancelled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\r\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\t\tID: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"ID\"))\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tconsole.log(\"Master Controller: Show Detail: RPMGuid:\" + oItem.getBindingContext(\"PPMData\").getProperty(\"RpmGuid\"));\r\n\t\t\tvar sPath = oItem.getBindingContext(\"PPMData\").sPath;\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t// ID: encodeURIComponent(oItem.getBindingContext().getProperty(\"IID\"))\r\n\t\t\t\tcontextPath : encodeURIComponent(sPath)\r\n\t\t\t\t// RpmGuid : oItem.getBindingContext(\"PPMData\").getProperty(\"RpmGuid\"),\r\n\t\t\t\t// IniGuid : oItem.getBindingContext(\"PPMData\").getProperty(\"IniGuid\")\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\t// var aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter);\r\n\t\t\t// var oViewModel = this.getModel(\"masterView\");\r\n\t\t\t// var oModel = this.getPPMModel(this);\r\n\t\t\t// var ppmData = oModel.getData();\r\n\t\t\t\r\n\t\t\t// this._oList.getBinding(\"items\").filter(aFilters, sap.ui.model.FilterType.Application);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar oFilter = new sap.ui.model.Filter(\"RegionKey\",sap.ui.model.FilterOperator.EQ, \"2\");\r\n\t\t\t// var oFilter1 = new sap.ui.model.Filter(\"Id\",sap.ui.model.FilterOperator.Contains, \"CCCC\");\r\n\t\t\tvar comFil = new sap.ui.model.Filter(this._oListFilterState.aFilter);\r\n\t\t\t// var oList = sap.ui.getCore().byId(\"dealerList\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(oFilter, sap.ui.model.FilterType.Application);\r\n\r\n\t\t\t\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\t// if (aFilters.length !== 0) {\r\n\t\t\t// \toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t// } else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t// \t// only reset the no data text to default when no new search was triggered\r\n\t\t\t// \toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t// }\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that adds \"/\" to the item's path \r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnGetPathWithSlash: function(sPath) {\r\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \r\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_findItem: function() {\r\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\r\n\t\t\tif (itemToSelect) {\r\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\r\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\r\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\r\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\r\n\t\t\t\t\tif (oItem) {\r\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oListSelector.selectAListItem(sPath);\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});",
		"colpal/ppm/projectmgmt/controller/ProjectsList.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"colpal.ppm.projectmgmt.controller.ProjectsList\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf colpal.ppm.projectmgmt.view.ProjectsList\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf colpal.ppm.projectmgmt.view.ProjectsList\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf colpal.ppm.projectmgmt.view.ProjectsList\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf colpal.ppm.projectmgmt.view.ProjectsList\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/InitiativeList.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"colpal.ppm.projectmgmt.controller.InitiativeList\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\t\tvar ppmModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\t\tthis._oTable = this.byId(\"InListTable\");\r\n\t\t\t\tthis.getView().setModel (ppmModel, \"PPMData\");\r\n\r\n\t\t\t},\r\n\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(UI5Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"colpal.ppm.projectmgmt.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias colpal.ppm.projectmgmt.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails.responseText,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"colpal/ppm/projectmgmt/model/formatter\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"colpal/ppm/projectmgmt/util/IPMUtils\",\r\n\t\"colpal/ppm/projectmgmt/util/ColumnCatalog\",\r\n\t\"colpal/ppm/projectmgmt/util/PersonalizationUtils\",\r\n\t\"colpal/ppm/projectmgmt/util/DateUtils\",\r\n\t'sap/ui/model/Filter',\r\n\t'sap/ui/model/Sorter',\r\n\t'sap/ui/core/util/Export',\r\n\t'sap/ui/core/util/ExportTypeCSV'\r\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast, IPMUtils, ColumnCatalog,\r\n\tPersonalizationUtils, DateUtils, Filter, Sorter, Export, ExportTypeCSV) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"colpal.ppm.projectmgmt.controller.Detail\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\"),\r\n\t\t\t\tcreateProjectVisible: false\r\n\t\t\t});\r\n\r\n\t\t\tvar ppmModel = IPMUtils.getPPMModel(this);\r\n\r\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\t\t\t// this.getRouter().getTargets().getTarget(\"object\").attachDisplay(null, this._onObjectMatched, this);\r\n\t\t\toViewModel.setSizeLimit(5000);\r\n\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\r\n\t\t\t// this.setModel(oViewModel, \"projectView\");\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\tthis.clearFilterEvent = false;\r\n\t\t\tvar oEventBus = sap.ui.getCore().getEventBus();\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"initCompleted\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tconsole.log(\"Event initCompleted\");\r\n\t\t\t\t\tthis.initPersonalize();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"getStaticData\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tconsole.log(\"Event getStaticData\");\r\n\t\t\t\t\tthis.getStaticData(this);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"refresh\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tconsole.log(\"Event refresh\");\r\n\t\t\t\t\tthis.getProjects();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t// \r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"VariantChanged\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"setFooterText\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tthis.setFooterText();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t// oEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"AppNotBusy\",\r\n\t\t\t// \tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t// \t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/busy\", false); // Stop Spinner\r\n\t\t\t// \t\tthis.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\r\n\t\t\t// \t}, this);\r\n\r\n\t\t\t// oEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"AppBusy\",\r\n\t\t\t// \tfunction(sChannelId, sEventId, oData) {\r\n\t\t\t// \t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/busy\", true); // Stop Spinner\r\n\t\t\t// \t\tthis.getOwnerComponent().getModel(\"masterShared\").refresh(true);\r\n\r\n\t\t\t// \t}, this);\r\n\r\n\t\t\t// this.getStaticData(this);\r\n\r\n\t\t\t// this.getProjects();\r\n\t\t\t// this.initPersonalize();\r\n\r\n\t\t\t// sap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"initCompleted\", {});\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.detail\", \"InitializationComplete\", function(sChannelId, sEventId, oData) {\r\n\t\t\t\t// Update table personalization\r\n\t\t\t\tif (this.getOwnerComponent().getModel(\"masterShared\") && this.getOwnerComponent().getModel(\"masterShared\").getData()) {\r\n\t\t\t\t\tif (!this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oInternalEvents/activityPersonalizedInitialized\")) {\r\n\t\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oInternalEvents/activityPersonalizationInitialized\", true);\r\n\t\t\t\t\t\tthis.initPersonalize();\r\n\t\t\t\t\t\tthis._setUpInitialVariant();\r\n\t\t\t\t\t\tthis.getProjects();\r\n\t\t\t\t\t\tIPMUtils.getStaticData(this);\r\n\t\t\t\t\t\t// this._onRefresh();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// this._confirmHeaderVisibilitySettings();\r\n\t\t\t}, this);\r\n\r\n\t\t\tvar dateType = new sap.ui.model.type.Date({\r\n\t\t\t\tsource: {\r\n\t\t\t\t\tpattern: \"MMM dd, yyyy\"\r\n\t\t\t\t},\r\n\t\t\t\tpattern: \"MMM dd, yyyy\"\r\n\t\t\t});\r\n\t\t\tthis._dateType = dateType;\r\n\r\n\t\t\t/*\r\n\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\t\tvar aColumns = oTable.getColumns();\r\n\t\t\t\r\n\t\t\t\t// console.log(\"Number of Columns:\" + aColumns.length);\r\n\t\t\t\tfor (var i = 0; i < aColumns.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (aColumns[i].getSortProperty().includes(\"Date\"))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taColumns[i].setFilterType(dateType);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\tthis.addDateFilters();\r\n\t\t\t// required for accessing elements in a fragment\r\n\t\t\t// var prefix = this.getView().createId(\"\").replace(\"--\", \"\");\r\n\t\t\t// var fragment = sap.ui.xmlfragment(prefix, \"colpal.ppm.projectmgmt.fragment.ProjectList\", this);\r\n\t\t},\r\n\r\n\t\taddDateFilters: function() {\r\n\t\t\tvar dateType = new sap.ui.model.type.Date({\r\n\t\t\t\tsource: {\r\n\t\t\t\t\tpattern: \"MMM dd, yyyy\"\r\n\t\t\t\t},\r\n\t\t\t\tpattern: \"MMM dd, yyyy\"\r\n\t\t\t});\r\n\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\r\n\t\t\t// console.log(\"Number of Columns:\" + aColumns.length);\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\tif (aColumns[i].getSortProperty().includes(\"Date\")) {\r\n\t\t\t\t\taColumns[i].setFilterType(dateType);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareEmailPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\tnull,\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t);\r\n\t\t},\r\n\t\tgetBaseModel: function(oContext) {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tif (!oBaseModel) {\r\n\t\t\t\tvar sServiceUrl = this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oServiceUrls/mainService\");\r\n\t\t\t\toBaseModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl);\r\n\t\t\t\toBaseModel.setSizeLimit(5000);\r\n\t\t\t\toBaseModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);\r\n\t\t\t\tsap.ui.getCore().setModel(oBaseModel, \"PPM\");\r\n\t\t\t}\r\n\t\t\treturn oBaseModel;\r\n\t\t},\r\n\t\tonShareInJamPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tobject: {\r\n\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\toShareDialog.open();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates the item count within the line item table's header\r\n\t\t * @param {object} oEvent an event containing the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\tonListUpdateFinished: function(oEvent) {\r\n\t\t\tvar sTitle,\r\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tif (iTotalItems) {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\r\n\t\t\t\t}\r\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonDelete: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\r\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/InitiativeName\"),\r\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\r\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\r\n\r\n\t\t\tvar fnMyAfterDeleted = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\r\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\r\n\t\t\t};\r\n\t\t\tthis._confirmDeletionByUser({\r\n\t\t\t\tquestion: sQuestion\r\n\t\t\t}, [sPath], fnMyAfterDeleted);\r\n\t\t},\r\n\r\n\t\tonRowSelectionChange: function(oEvent) {\r\n\t\t\t// this.onEdit();\r\n\t\t\tvar params = oEvent.getParameters();\r\n\t\t\tvar sObjectPath;\r\n\t\t\tvar selectedRow = params.rowIndex;\r\n\t\t\tif (selectedRow > -1) {\r\n\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\t\t// sObjectPath = projectTable.getSelectedItem().getBindingContextPath();\r\n\t\t\t\tsObjectPath = params.rowContext.sPath;\r\n\t\t\t\tthis.getRouter().getTargets().display(\"create\", {\r\n\t\t\t\t\tmode: \"Display\",\r\n\t\t\t\t\tobjectPath: sObjectPath\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonEdit: function() {\r\n\t\t\t// psutram: ToDo modify to include selected row and call the router to open edit screen\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tvar sObjectPath;\r\n\t\t\tvar projectTable = this.byId(\"lineItemsList\");\r\n\t\t\t// var selectedRow = projectTable.indexOfItem(projectTable.getSelectedItem())\r\n\t\t\tvar selectedRow = projectTable.getSelectedIndex();\r\n\t\t\tif (selectedRow > -1) {\r\n\t\t\t\t// sObjectPath = projectTable.getSelectedItem().getBindingContextPath();\r\n\t\t\t\tsObjectPath = projectTable.getContextByIndex(4).sPath;\r\n\t\t\t\tthis.getRouter().getTargets().display(\"create\", {\r\n\t\t\t\t\tmode: \"update\",\r\n\t\t\t\t\tobjectPath: sObjectPath\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonAdd: function(oEvent) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\r\n\t\t\t\tmode: \"Create\",\r\n\t\t\t\tobjectPath: oData.MasterContext\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\tvar oParameter = oEvent.getParameters();\r\n\t\t\t// for (var value in oParameter) {\r\n\t\t\t// \toParameter[value] = decodeURIComponent(oParameter[value]);\r\n\t\t\t// }\r\n\t\t\t// this.getModel().metadataLoaded().then(function() {\r\n\t\t\t// \tvar sObjectPath = this.getModel().createKey(\"Initiatives\", \"4FC608791B7E3650E1008000A7E414BB\");\r\n\r\n\t\t\t// \tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t// }.bind(this));\r\n\r\n\t\t\tvar sPath = decodeURIComponent(oParameter.arguments.contextPath);\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\r\n\t\t\tif (oModel) {\r\n\t\t\t\tvar oData = oModel.getData();\r\n\t\t\t\toData.MasterContext = sPath;\r\n\t\t\t\tvar oObject = oModel.getObject(sPath);\r\n\r\n\t\t\t\tvar rpmGuid = oObject.RpmGuidC;\r\n\t\t\t\tvar iniGuid = oObject.IniGuidC;\r\n\t\t\t\tconsole.log(\"Object Selected:\" + oObject.Id);\r\n\t\t\t\t// this.getProjectsByInitiative (rpmGuid,iniGuid);\t\r\n\t\t\t\tthis.getProjects();\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tgetProjects: function() {\r\n\t\t\t// var oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oBaseModel = this.getBaseModel();\r\n\t\t\tvar ppmData = IPMUtils.getPPMModel().getData();\r\n\r\n\t\t\t// var sPath = \"/Initiatives(binary'\" + iniGuid + \"')/ItemSet\";\r\n\t\t\tvar sPath = \"/ItemsList\";\r\n\t\t\tconsole.log(\"getProjectsByInitiaitive:URL:\" + sPath);\r\n\r\n\t\t\tvar oExclude = {};\r\n\t\t\tvar oFilters = [];\r\n\r\n\t\t\tif (ppmData.GlobalFilter) {\r\n\t\t\t\tif (ppmData.GlobalFilter.DivisionKey !== \"\") {\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"DivisionKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.DivisionKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ppmData.GlobalFilter.HubKey !== \"\") {\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"HubKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.HubKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ppmData.GlobalFilter.CategoryKey !== \"\") {\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"CategoryKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.CategoryKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ppmData.GlobalFilter.SubcategoryKey !== \"\") {\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"SubcategoryKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.SubcategoryKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ppmData.GlobalFilter.InnovationKey !== \"\") {\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"InnovationKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.InnovationKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ppmData.GlobalFilter.PhaseKey !== \"\") {\r\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"PhaseKey\",\r\n\t\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t\tvalue1: ppmData.GlobalFilter.PhaseKey\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t// for now only Innovation Management projects are being displayed\r\n\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"ItemtypeKey\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: \"9109\"\r\n\t\t\t}));\r\n\r\n\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/busy\", true); // Stop Spinner\r\n\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tconsole.log(\"Success in reading ItemListSet:\" + oDataIn.results.length);\r\n\t\t\t\t\t// that.setProjectsByInitiatives(that, oDataIn, iniGuid);\r\n\t\t\t\t\tthat.setProjects(that, oDataIn);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tconsole.error(\"Error in geting Initiaitives:\" + oError);\r\n\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetProjectsByInitiative: function(rpmGuid, iniGuid) {\r\n\t\t\t// var oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oBaseModel = this.getBaseModel();\r\n\t\t\tvar sPath = \"/Initiatives(binary'\" + iniGuid + \"')/ItemSet\";\r\n\t\t\t// sPath = \"/Initiatives(RpmGuid=binary\\'5314016ACE3A2EB0E1008000A7E414BB\\',IniGuid=binary\\'5314015DCE3A2EB0E1008000A7E414BB\\')/ItemSet\";\r\n\t\t\t// Initiatives(RpmGuid=binary'5314016ACE3A2EB0E1008000A7E414BB',IniGuid=binary'5314015DCE3A2EB0E1008000A7E414BB')/ItemListSet\r\n\t\t\tsPath = \"/Initiatives(RpmGuid=binary\\'\" + rpmGuid + \"\\',IniGuid=binary\\'\" + iniGuid + \"\\')/ItemListSet\";\r\n\t\t\tconsole.log(\"getProjectsByInitiaitive:URL:\" + sPath);\r\n\r\n\t\t\tvar oExclude = {};\r\n\t\t\tvar filters = [];\r\n\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: filters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tconsole.log(\"Success in reading ItemListSet:\" + oDataIn.results.length);\r\n\t\t\t\t\tthat.setProjectsByInitiatives(that, oDataIn, iniGuid);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tconsole.error(\"Error in geting Initiaitives:\" + oError);\r\n\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetProjects: function(oContext, oData) {\r\n\t\t\tvar oModel = IPMUtils.getPPMModel(oContext);\r\n\t\t\tvar ppmData = oModel.getData();\r\n\r\n\t\t\tif (!ppmData.Items) {\r\n\t\t\t\tppmData.Items = {};\r\n\t\t\t}\r\n\t\t\tppmData.Items.Current = oData.results;\r\n\t\t\tfor (var i = 0; i < ppmData.Items.Current.length; i++) {\r\n\t\t\t\tppmData.Items.Current[i].LaunchDate = new Date(DateUtils.getSystemAdjISODate_fromDate(ppmData.Items.Current[i].LaunchDate));\r\n\r\n\t\t\t\t// psutram: temp code remove\r\n\t\t\t\t// if (ppmData.Items.Current[i].ZimGrid !== \"\")\r\n\t\t\t\t// {\r\n\t\t\t\t// \t\tconsole.log(\"+++++ZimGrid not empty:\" + ppmData.Items.Current[i].ItemId + \":\" + ppmData.Items.Current[i].ZimGrid);\r\n\t\t\t\t// }\r\n\t\t\t\tif (ppmData.Items.Current[i].ItemId.includes(\"289\")) {\r\n\t\t\t\t\tconsole.log(\"Marketing Objective:\" + ppmData.Items.Current[i].MarkobjeKey + \":\" + ppmData.Items.Current[i].MarkobjeDesc);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t// ppmData.Items[iniGuid] = oData.results;\r\n\r\n\t\t\toContext.getView().setModel(oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t\t// this.setFooterText();\r\n\r\n\t\t\tthis._applySort();\r\n\t\t\tthis._applyFilter();\r\n\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/busy\", false); // Stop Spinner\r\n\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t},\r\n\t\tsetProjectsByInitiatives: function(oContext, oData, iniGuid) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\r\n\t\t\tif (!ppmData.Items) {\r\n\t\t\t\tppmData.Items = {};\r\n\t\t\t}\r\n\t\t\tppmData.Items.Current = oData.results;\r\n\t\t\tppmData.Items[iniGuid] = oData.results;\r\n\r\n\t\t\toContext.getView().setModel(oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path. Makes sure that detail view displays\r\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\r\n\t\t * @function\r\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false); // originally true\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for binding change event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\t// this.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// // if object could not be found, the selection in the master list\r\n\t\t\t\t// // does not make sense anymore.\r\n\t\t\t\t// this.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\r\n\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\tsObjectId = oObject.ID,\r\n\t\t\t\tsObjectName = oObject.InitiativeName;\r\n\r\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\r\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\r\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\r\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\r\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for metadata loaded event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onMetadataLoaded: function() {\r\n\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tvar oLineItemTable = this.byId(\"lineItemsList\");\r\n\t\t\t// ToDo: check this code\r\n\t\t\t// var iOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\r\n\r\n\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t// detail view is displayed for the first time\r\n\t\t\t// oViewModel.setProperty(\"/delay\", 0);\r\n\t\t\t// oViewModel.setProperty(\"/lineItemTableDelay\", 0);\r\n\r\n\t\t\t// oLineItemTable.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t// \t// Restore original busy indicator delay for line item table\r\n\t\t\t// \toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\r\n\t\t\t// });\r\n\t\t\t// end of changes psutram\r\n\r\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\toViewModel.setProperty(\"/busy\", false); // originally true\r\n\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\r\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\r\n\t\t * title (optional) may be a string defining the title of the popup.\r\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \r\n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\r\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\r\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\r\n\t\t\t/* eslint-enable */\r\n\t\t\t// Callback function for when the user decides to perform the deletion\r\n\t\t\tvar fnDelete = function() {\r\n\t\t\t\t// Calls the oData Delete service\r\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\r\n\t\t\t}.bind(this);\r\n\r\n\t\t\t// Opens the confirmation dialog\r\n\t\t\tMessageBox.show(oConfirmation.question, {\r\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnDelete();\r\n\t\t\t\t\t} else if (fnDeleteCanceled) {\r\n\t\t\t\t\t\tfnDeleteCanceled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Performs the deletion of a list of entities.\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \r\n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\tvar fnFailed = function() {\r\n\t\t\t\tthis._oODataModel.setUseBatch(true);\r\n\t\t\t}.bind(this);\r\n\t\t\tvar fnSuccess = function() {\r\n\t\t\t\tif (fnAfterDeleted) {\r\n\t\t\t\t\tfnAfterDeleted();\r\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\r\n\t\t\t\t}\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t}.bind(this);\r\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Deletes the entity from the odata model\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\r\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\r\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\tthis._oODataModel.setUseBatch(false);\r\n\t\t\t\tthis._oODataModel.remove(sPath, {\r\n\t\t\t\t\tsuccess: fnResolve,\r\n\t\t\t\t\terror: fnReject,\r\n\t\t\t\t\tasync: true\r\n\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t\toPromise.then(fnSuccess, fnFailed);\r\n\t\t\treturn oPromise;\r\n\t\t},\r\n\t\tonListAll: function(oEvent) {\r\n\t\t\t//psutram: TODO: ensure this navigation is to a full page\r\n\t\t\tthis.getRouter().navTo(\"projectList\");\r\n\r\n\t\t},\r\n\t\tgetStaticData: function() {\r\n\t\t\tvar oBaseModel = this.getBaseModel();\r\n\t\t\tvar sPath = \"/VHCategories\";\r\n\t\t\tvar oExclude = {};\r\n\t\t\tvar filters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHCategories\");\r\n\r\n\t\t\tsPath = \"/VHDivisions\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHDivisions\");\r\n\r\n\t\t\t// sPath = \"/VHISubCategories\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHISubCategories\");\r\n\r\n\t\t\t// sPath = \"/VHIRegions\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHIRegions\");\r\n\r\n\t\t\t// sPath = \"/VHICategories\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHICategories\");\r\n\r\n\t\t\t// Todo: once VHConsumerDiffs fixed uncomment this code\r\n\t\t\tsPath = \"/VHConsumerDiffs\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHConsumerDiffs\");\r\n\r\n\t\t\tsPath = \"/VHStrategicFocus\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHStrategicFocus\");\r\n\r\n\t\t\tsPath = \"/VHCurrencies\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHCurrencies\");\r\n\r\n\t\t\tsPath = \"/VHProjectTypes\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHProjectTypes\");\r\n\r\n\t\t\tsPath = \"/UserInfoSet\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"UserInfoSet\");\r\n\r\n\t\t},\r\n\t\treadStaticData: function(oModel, sPath, oExclude, oFilters, entityName) {\r\n\t\t\tvar that = this;\r\n\t\t\toModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tconsole.log(\"Success in reading\" + entityName);\r\n\t\t\t\t\tthat.setData(that, oDataIn, entityName);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tconsole.error(\"Error in reading:\" + entityName + \": + oError\");\r\n\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\tsetData: function(oContext, oDataIn, entityName) {\r\n\t\t\tvar oModel = IPMUtils.getPPMModel(oContext);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tif (entityName === \"VHHubs\") {\r\n\t\t\t\toData.VHHubs = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHBrands\") {\r\n\t\t\t\toData.VHBrands = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHSubBrands\") {\r\n\t\t\t\toData.VHSubBrands = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHPhases\") {\r\n\t\t\t\toData.VHPhases = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHStatus\") {\r\n\t\t\t\toData.VHStatus = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHICategories\") {\r\n\t\t\t\toData.VHICategories = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHIRegions\") {\r\n\t\t\t\toData.VHIRegions = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHISubCategories\") {\r\n\t\t\t\toData.VHISubCategories = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHInnovationTypes\") {\r\n\t\t\t\toData.VHInnovationTypes = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHConsumerDiffs\") {\r\n\t\t\t\toData.VHConsumerDiffs = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHStrategicFocus\") {\r\n\t\t\t\toData.VHStrategicFocus = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHCurrencies\") {\r\n\t\t\t\toData.VHCurrency = oDataIn.results;\r\n\t\t\t} else if (entityName === \"VHProjectTypes\") {\r\n\t\t\t\toData.VHProjectTypes = oDataIn.results;\r\n\t\t\t} else if (entityName === \"UserInfoSet\") {\r\n\t\t\t\toData.UserInfoSet = oDataIn.results;\r\n\t\t\t\tif (oDataIn.results[0].Config === '{\"Access\":{\"Create\":\"X\"}}') {\r\n\t\t\t\t\tthis.getModel(\"detailView\").getData().createProjectVisible = true;\r\n\t\t\t\t\tthis.getModel(\"detailView\").refresh(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getModel(\"detailView\").getData().createProjectVisible = false;\r\n\t\t\t\t\tthis.getModel(\"detailView\").refresh(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toContext.getView().setModel(oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tonClearAllSettings: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\t\t\tthis.clearFilterEvent = true;\r\n\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\toTable.filter(aColumns[i], null);\r\n\t\t\t}\r\n\t\t\tvar p13nData = this.getModel(\"P13n\").getData();\r\n\t\t\tvar count = p13nData.FilterItems.length;\r\n\t\t\tfor (var i = p13nData.FilterItems.length; i > 0; i--) {\r\n\t\t\t\tp13nData.FilterItems.pop(p13nData.FilterItems[i - 1]);\r\n\t\t\t}\r\n\t\t\t// psutram24\r\n\r\n\t\t\tvar oItemData = {\r\n\t\t\t\tcolumnKey: \"PPMData>ItemtypeDesc\",\r\n\t\t\t\toperation: \"Contains\",\r\n\t\t\t\tvalue1: \"Innovation Management\",\r\n\t\t\t\tvalue2: \"\",\r\n\t\t\t\texclude: false\r\n\t\t\t};\r\n\t\t\tp13nData.FilterItems.push(oItemData);\r\n\r\n\t\t\tthis.getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.clearFilterEvent = false;\r\n\r\n\t\t\tvar oModel = IPMUtils.getPPMModel(this);\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\toData.GlobalFilter = IPMUtils.getGlobalFilter();\r\n\t\t\toModel.refresh(false);\r\n\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"setFooterText\", {});\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\t\t},\r\n\t\tonExport: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\r\n\t\t\toTable.exportData({\r\n\t\t\t\t\texportType: new sap.ui.core.util.ExportTypeCSV()\r\n\t\t\t\t})\r\n\t\t\t\t.saveFile()\r\n\t\t\t\t.always(function() {\r\n\t\t\t\t\tthis.destroy();\r\n\t\t\t\t});\r\n\r\n\t\t\t/*\r\n\t\t\tThe following code exports all the columns in the table\r\n\t\t\r\n\t\t\tvar oColumns = ColumnCatalog.getColumnCatalog(this);\r\n\t\t\tvar includeColumns = [];\r\n\t\t\tfor (var i = 0; i < oColumns.ColumnCollection.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (oColumns.ColumnCollection[i].visible)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar addColumn = {\r\n\t\t\t\t\tname : oColumns.ColumnCollection[i].text,\r\n\t\t\t\t\ttemplate : {\r\n\t\t\t\t\t\tcontent : oColumns.ColumnCollection[i].path\r\n\t\t\t\t\t}};\r\n\t\t\t\t\tincludeColumns.push(addColumn);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar oExport = new Export({\r\n \t\t\t\t// Type that will be used to generate the content. Own ExportType's can be created to support other formats\r\n\t\t\t\texportType : new ExportTypeCSV({\r\n\t\t\t\t\tseparatorChar : \";\"\r\n\t\t\t\t}),\r\n \t\t\t\tmodels : this.getModel(\"PPMData\"),\r\n\t\t\t\trows : { path : \"PPMData>/Items/Current\"},\r\n \t\t\t\tcolumns : includeColumns\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\toExport.saveFile().catch(function(oError) {\r\n\t\t\t\tMessageToast.show(\"Error when downloading data. Browser might not be supported!\\n\\n\" + oError);\r\n\t\t\t}).then(function() {\r\n\t\t\t\toExport.destroy();\r\n\t\t\t});\r\n\t\t\t\t*/\r\n\t\t},\r\n\t\tonPressRefresh: function(oEvent) {\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\t\t},\r\n\t\tonPersonalizeSettings: function(oEvent) {\r\n\t\t\tif (this.oPersonalizationDialog) {\r\n\t\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t\t\tthis.oPersonalizationDialog.destroy();\r\n\t\t\t\tthis.oPersonalizationDialog = null;\r\n\t\t\t}\r\n\t\t\tthis.openPersonalizationDialog();\r\n\t\t},\r\n\t\topenPersonalizationDialog: function() {\r\n\t\t\t// associate controller with the fragment\r\n\t\t\tif (!this.oPersonalizationDialog) {\r\n\t\t\t\t//colpal.ppm.projectmgmt.fragment.ProjectFinInfo\r\n\t\t\t\tthis.oPersonalizationDialog = sap.ui.xmlfragment(\"colpal.ppm.projectmgmt.fragment.ProjectListPersonalization\", this);\r\n\t\t\t\tthis.getView().addDependent(this.oPersonalizationDialog);\r\n\t\t\t\tvar oP13nFilterPanel = sap.ui.getCore().byId(\"oP13nProjectFilterPanel\");\r\n\t\t\t\toP13nFilterPanel.setIncludeOperations([\r\n\t\t\t\t\tsap.m.P13nConditionOperation.EQ,\r\n\t\t\t\t\tsap.m.P13nConditionOperation.Contains,\r\n\t\t\t\t\tsap.m.P13nConditionOperation.StartsWith,\r\n\t\t\t\t\tsap.m.P13nConditionOperation.EndsWith\r\n\t\t\t\t]);\r\n\t\t\t\toP13nFilterPanel.setExcludeOperations([\r\n\t\t\t\t\tsap.m.P13nConditionOperation.EQ\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"P13n\").refresh(false);\r\n\t\t\t// toggle compact style\r\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this.oPersonalizationDialog);\r\n\t\t\tthis.oPersonalizationDialog.open();\r\n\t\t},\r\n\t\tinitPersonalize: function() {\r\n\t\t\tvar oColumns = ColumnCatalog.getColumnCatalog(this);\r\n\t\t\tvar oActivitiesConfig = {\r\n\t\t\t\tMaxTableRows: 10\r\n\t\t\t};\r\n\t\t\tvar iMaxTableRows = this.getOwnerComponent().getModel(\"P13n_Configuration\").getProperty(\"/ActivitiesConfig/MaxTableRows\");\r\n\r\n\t\t\tif (iMaxTableRows > 0) {\r\n\t\t\t\toActivitiesConfig.MaxTableRows = iMaxTableRows;\r\n\t\t\t}\r\n\r\n\t\t\tvar oDefaultModel = new sap.ui.model.json.JSONModel(oColumns);\r\n\t\t\toDefaultModel.setSizeLimit(5000);\r\n\t\t\tthis.getOwnerComponent().setModel(oDefaultModel, \"P13n_default\");\r\n\t\t\toDefaultModel = new sap.ui.model.json.JSONModel(oActivitiesConfig);\r\n\t\t\toDefaultModel.setSizeLimit(5000);\r\n\t\t\tthis.getOwnerComponent().setModel(oDefaultModel, \"P13n_ActivitiesConfig\");\r\n\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oVariants = sap.ui.core.Fragment.byId(fragmentId, \"Variant\");\r\n\t\t\tvar sSelectionKey = oVariants.getSelectionKey();\r\n\t\t\tif (sSelectionKey && sSelectionKey.substring(0, 7) === \"Variant\") {\r\n\t\t\t\tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\t\tvar iIndex = sSelectionKey.replace(\"Variant\", \"\");\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(JSON.stringify(aVariants[iIndex])));\r\n\t\t\t\tthis._syncConfigAndTable();\r\n\t\t\t} else {\r\n\t\t\t\tvar oModel = new sap.ui.model.json.JSONModel(JSON.parse(JSON.stringify(oColumns)));\r\n\t\t\t\tthis.getOwnerComponent().setModel(oModel, \"P13n\");\r\n\t\t\t}\r\n\t\t\tvar oModel = new sap.ui.model.json.JSONModel(JSON.parse(JSON.stringify(oColumns)));\r\n\t\t\tthis.getOwnerComponent().setModel(oModel, \"P13n\");\r\n\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"getStaticData\", {});\r\n\r\n\t\t},\r\n\t\tonP13nAddColumnsItem: function(oEvent) {\r\n\t\t\tvar sColumn = oEvent.getParameter(\"newItem\").getProperty(\"columnKey\");\r\n\t\t\tif (sColumn === \"PPMData>Name\") {\r\n\t\t\t\toEvent.getParameter(\"newItem\").setProperty(\"index\", 0);\r\n\t\t\t\toEvent.getParameter(\"newItem\").setProperty(\"visible\", true);\r\n\t\t\t} else if (oEvent.getParameter(\"newItem\").getProperty(\"index\") === 0) {\r\n\t\t\t\toEvent.getParameter(\"newItem\").setProperty(\"index\", 1);\r\n\t\t\t}\r\n\t\t\tvar sColumn = oEvent.getParameter(\"newItem\").getProperty(\"columnKey\");\r\n\t\t\tif (oEvent.getParameter(\"newItem\").mProperties.hasOwnProperty(\"visible\")) {\r\n\t\t\t\tvar bVisible = oEvent.getParameters().newItem.mProperties.visible;\r\n\t\t\t\tvar oData = this.getOwnerComponent().getModel(\"P13n\").getData();\r\n\t\t\t\tfor (var i = 0; i < oData.ColumnCollection.length; i++) {\r\n\t\t\t\t\tvar oColumn = oData.ColumnCollection[i];\r\n\t\t\t\t\tvar oFixedColumn = oData.FixedColumnConfig[oColumn.columnIndex];\r\n\t\t\t\t\tif (oColumn.path === sColumn) {\r\n\t\t\t\t\t\toColumn.visible = bVisible;\r\n\t\t\t\t\t\toFixedColumn.visible = bVisible;\r\n\t\t\t\t\t\ti = oData.ColumnCollection.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\t}\r\n\t\t\tthis.addDateFilters();\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\r\n\t\tonP13nChangeColumnsItem: function(oEvent) {\r\n\t\t\tvar aItems = oEvent.getParameter(\"items\");\r\n\t\t\tvar oModel = this.getModel(\"P13n\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar flag = \"\";\r\n\r\n\t\t\tfor (var j = 0; j < aItems.length; j++) {\r\n\t\t\t\tfor (var i = 0; i < oData.FixedColumnConfig.length; i++) {\r\n\t\t\t\t\tif (aItems[j].columnKey === oData.FixedColumnConfig[i].path) {\r\n\t\t\t\t\t\toData.FixedColumnConfig[i].visible = aItems[j].visible;\r\n\t\t\t\t\t\toData.FixedColumnConfig[i].columnIndex = aItems[j].index;\r\n\r\n\t\t\t\t\t\toData.ColumnCollection[i].visible = aItems[j].visible;\r\n\t\t\t\t\t\tif (aItems[j].visible === true) {\r\n\t\t\t\t\t\t\tflag = \"X\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (flag !== \"X\") {\r\n\t\t\t\toData.FixedColumnConfig[0].visible = true;\r\n\t\t\t\toData.FixedColumnConfig[0].columnIndex = 0;\r\n\r\n\t\t\t\toData.ColumnCollection[0].visible = true;\r\n\t\t\t}\r\n\r\n\t\t\toModel.refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\t\tonP13nHandleCancel: function(oEvent) {\r\n\t\t\t// Go back to the values that were showing\r\n\t\t\t// var oVariants = this.byId(\"Variant\");\r\n\t\t\t// var sSelectionKey = oVariants.getSelectionKey();\r\n\t\t\t// if (sSelectionKey && sSelectionKey.substring(0, 7) === \"Variant\") {\r\n\t\t\t// \tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\t// \tvar iIndex = sSelectionKey.replace(\"Variant\", \"\");\r\n\t\t\t// \tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(aVariants[iIndex].PersData));\r\n\t\t\t// } else {\r\n\t\t\t// \t// This is the default variant.\r\n\t\t\t// \tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(JSON.stringify(this.getOwnerComponent().getModel(\"P13n_default\").getData(\r\n\t\t\t// \t\t\"\"))));\r\n\t\t\t// }\r\n\t\t\tconsole.log(\"onP13nHandleCancel event\");\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t\tif (this.oPersonalizationDialog) {\r\n\t\t\t\tthis.oPersonalizationDialog.destroy();\r\n\t\t\t\tthis.oPersonalizationDialog = null;\r\n\t\t\t}\r\n\t\t\tthis.__removeVariantChangedIndicator();\r\n\t\t},\r\n\t\tonP13nHandleClose: function(oEvent) {\r\n\t\t\t// Check if MaxTableRows has changed.\r\n\t\t\t//ToDo: psutram\r\n\t\t\tif (this.getOwnerComponent().getModel(\"P13n_ActivitiesConfig\").getProperty(\"/MaxTableRows\") !== this.getOwnerComponent().getModel(\r\n\t\t\t\t\t\"P13n_default\").getProperty(\r\n\t\t\t\t\t\"/OtherConfig/MaxTableRows\") &&\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n_ActivitiesConfig\").getProperty(\"/MaxTableRows\") !== this.getOwnerComponent().getModel(\r\n\t\t\t\t\t\"P13n_Configuration\").getProperty(\r\n\t\t\t\t\t\"/ActivitiesConfig/MaxTableRows\")) {\r\n\t\t\t\t//TODO:psutram\r\n\t\t\t\tPersonalizationUtils.p13nSave2(this, this.getOwnerComponent().getModel(\"P13n_ActivitiesConfig\").getData(),\r\n\t\t\t\t\t\"InnovationConfig\",\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"CP_rowsSaved\"));\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n_Configuration\").setProperty(\"/InnovationConfig\",\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"P13n_ActivitiesConfig\").getData());\r\n\t\t\t\t// Set the Visible Row Count\r\n\t\t\t\tvar iTableRowCount = this.byId(\"lineItemsList\").getBinding(\"rows\").getLength();\r\n\t\t\t\tif (this.getOwnerComponent().getModel(\"P13n\")) {\r\n\t\t\t\t\tvar iMaxTableRows = parseInt(this.getOwnerComponent().getModel(\"P13n_ActivitiesConfig\").getData().MaxTableRows);\r\n\t\t\t\t\tif (iTableRowCount > iMaxTableRows) {\r\n\t\t\t\t\t\tiTableRowCount = iMaxTableRows;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this.getModel(\"PPMData\").getData().oTableControl.visibleRowCount = iTableRowCount;\r\n\t\t\t\t}\r\n\t\t\t\tthis.getModel(\"PPMData\").refresh(false);\r\n\t\t\t}\r\n\t\t\t// Now we must sort the columns in the table based on configuration\r\n\t\t\tthis._syncConfigAndTable();\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t\tthis.oPersonalizationDialog.destroy();\r\n\t\t\tthis.oPersonalizationDialog = null;\r\n\t\t},\r\n\t\tonP13nHandleReset: function(oEvent) {\r\n\t\t\tvar oDefaultModel = this.getOwnerComponent().getModel(\"P13n_default\");\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(JSON.stringify(oDefaultModel.getData())));\r\n\t\t\tthis._syncConfigAndTable();\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.oPersonalizationDialog.close();\r\n\t\t\t// this.__removeVariantChangedIndicator();\r\n\t\t},\r\n\t\tonP13nAddSortItem: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar oBinding = oTable.getBinding(\"rows\");\r\n\t\t\tPersonalizationUtils.p13nAddSortItem(oEvent.getParameter(\"sortItemData\"),\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").getData().SortItems, oBinding);\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\r\n\t\t},\r\n\t\toP13nProjectSortPanel: function(oEvent) {\r\n\t\t\tconsole.log(\"oP13nProjectSortPanel????\");\r\n\t\t},\r\n\t\tonP13nRemoveSortItem: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar oBinding = oTable.getBinding(\"rows\");\r\n\t\t\tPersonalizationUtils.p13nRemoveSortItem(oEvent.getParameter(\"sortItemData\"),\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").getData().SortItems,\r\n\t\t\t\toEvent.getParameter(\"index\"), oBinding);\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\t\tonP13nUpdateSortItem: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar oBinding = oTable.getBinding(\"rows\");\r\n\t\t\tPersonalizationUtils.p13nUpdateSortItem(oEvent.getParameter(\"sortItemData\"),\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").getData().SortItems,\r\n\t\t\t\toEvent.getParameter(\"index\"), oBinding);\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\t\tonP13nAddFilterItem: function(oEvent) {\r\n\t\t\tPersonalizationUtils.p13nAddFilterItem(oEvent.getParameter(\"filterItemData\"), this.getOwnerComponent().getModel(\"P13n\").getData().FilterItems);\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\t\toP13nProjectFilterPanel: function(oEvent) {\r\n\t\t\tconsole.log(\"oP13nProjectFilterPanel????\");\r\n\t\t},\r\n\t\tonP13nRemoveFilterItem: function(oEvent) {\r\n\t\t\tPersonalizationUtils.p13nRemoveFilterItem(oEvent.getParameter(\"filterItemData\"), this.getOwnerComponent().getModel(\"P13n\").getData()\r\n\t\t\t\t.FilterItems,\r\n\t\t\t\toEvent.getParameter(\r\n\t\t\t\t\t\"index\"));\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\t\tonP13nUpdateFilterItem: function(oEvent) {\r\n\t\t\tPersonalizationUtils.p13nUpdateFilterItem(oEvent.getParameter(\"filterItemData\"), this.getOwnerComponent().getModel(\"P13n\").getData()\r\n\t\t\t\t.FilterItems,\r\n\t\t\t\toEvent.getParameter(\r\n\t\t\t\t\t\"index\"));\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t},\r\n\t\tonColumnSort: function(oEvent) {\r\n\t\t\tif (!this.clearFilterEvent) {\r\n\t\t\t\tvar params = oEvent.getParameters();\r\n\t\t\t\tvar columnName = params.column.getProperty(\"sortProperty\");\r\n\t\t\t\tvar sortOrder = params.sortOrder;\r\n\t\t\t\tvar oItemData = {\r\n\t\t\t\t\tcolumnKey: \"PPMData>\" + columnName,\r\n\t\t\t\t\toperation: sortOrder\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar p13nData = this.getModel(\"P13n\").getData();\r\n\t\t\t\tp13nData.SortItems.splice(0, p13nData.SortItems.length);\r\n\t\t\t\tp13nData.SortItems.push(oItemData);\r\n\t\t\t\t// var bSortExists = false;\r\n\t\t\t\t// for (var i = 0; i < p13nData.SortItems.length; i++)\r\n\t\t\t\t// {\r\n\t\t\t\t// \tif (p13nData.SortItems[i].columnKey === oItemData.columnKey)\r\n\t\t\t\t// \t{\r\n\t\t\t\t// \t\tbSortExists = true;\r\n\t\t\t\t// \t\tp13nData.SortItems[i].operation = oItemData.operation;\r\n\t\t\t\t// \t\ti = p13nData.SortItems.length;\r\n\t\t\t\t// \t}\r\n\t\t\t\t// }\r\n\t\t\t\t// if (!bSortExists)\r\n\t\t\t\t// {\r\n\t\t\t\t// \tp13nData.SortItems.push(oItemData);\r\n\t\t\t\t// }\r\n\t\t\t\tthis.getModel(\"P13n\").refresh(false);\r\n\t\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t\t}\r\n\t\t},\r\n\t\tcustomDateFilter: function(oEvent) {\r\n\t\t\t// psutram7\r\n\t\t\t// if (!this.clearFilterEvent)\r\n\t\t\t// {\t\r\n\t\t\t// \tvar params = oEvent.getParameters();\r\n\t\t\t// \tvar columnName = params.column.getProperty(\"filterProperty\");\r\n\t\t\t// \tvar filterValue = params.value;\r\n\t\t\t// \tvar oDate = (oDate instanceof Date) ? oDate : new Date(oDate);\r\n\r\n\t\t\t// \treturn oDate;\r\n\t\t\t// }\t\r\n\t\t},\r\n\t\tonColumnFilter: function(oEvent) {\r\n\t\t\tif (!this.clearFilterEvent) {\r\n\t\t\t\tvar params = oEvent.getParameters();\r\n\t\t\t\tvar columnName = params.column.getProperty(\"filterProperty\");\r\n\t\t\t\tvar filterValue = params.value;\r\n\t\t\t\tvar operation = \"Contains\";\r\n\t\t\t\tif (columnName.includes(\"Date\")) {\r\n\t\t\t\t\tconsole.log(\"column name includes Date\");\r\n\t\t\t\t\toperation = \"GT\";\r\n\t\t\t\t}\r\n\t\t\t\tvar oItemData = {\r\n\t\t\t\t\tcolumnKey: \"PPMData>\" + columnName,\r\n\t\t\t\t\toperation: operation,\r\n\t\t\t\t\tvalue1: filterValue,\r\n\t\t\t\t\tvalue2: \"\",\r\n\t\t\t\t\texclude: false\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar p13nData = this.getModel(\"P13n\").getData();\r\n\t\t\t\tvar bfilterExists = false;\r\n\t\t\t\tfor (var i = 0; i < p13nData.FilterItems.length; i++) {\r\n\t\t\t\t\tif (p13nData.FilterItems[i].columnKey === oItemData.columnKey) {\r\n\t\t\t\t\t\tif (oItemData.value1 === \"\") {\r\n\t\t\t\t\t\t\tp13nData.FilterItems.splice(i, 1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tp13nData.FilterItems[i].value1 = oItemData.value1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbfilterExists = true;\r\n\t\t\t\t\t\ti = p13nData.FilterItems.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bfilterExists) {\r\n\t\t\t\t\tp13nData.FilterItems.push(oItemData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (columnName.includes(\"Date\")) {\r\n\t\t\t\t\tvar valueModified = filterValue;\r\n\t\t\t\t\t//Todo: Apply modifications to filter value. valueModified = <<modifications>>;\r\n\t\t\t\t\tvar oFilter1 = new sap.ui.model.Filter(columnName,\r\n\t\t\t\t\t\tsap.ui.model.FilterOperator.GT, valueModified);\r\n\t\t\t\t\toEvent.getSource().getBinding(\"rows\").filter([oFilter1], sap.ui.model.FilterType.Application);\r\n\r\n\t\t\t\t\tthis.getModel(\"P13n\").refresh(false);\r\n\t\t\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"setFooterText\", {});\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getModel(\"P13n\").refresh(false);\r\n\t\t\t\tthis.__setVariantChangedIndicator();\r\n\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"setFooterText\", {});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonColumnMove: function(oEvent) {\r\n\t\t\tvar oConfig = this.getOwnerComponent().getModel(\"P13n\").getData();\r\n\t\t\tvar aColumnData = oConfig.ColumnCollection;\r\n\t\t\tvar sMovedColumn = oEvent.getParameter(\"column\").getLabel().getText();\r\n\t\t\tvar iNewIndex = oEvent.getParameter(\"newPos\");\r\n\t\t\t// Figure out where the column was before\r\n\t\t\tfor (var i = 0; i < aColumnData.length; i++) {\r\n\t\t\t\tif (aColumnData[i].text === sMovedColumn) {\r\n\t\t\t\t\tvar oHoldEntry = aColumnData[i];\r\n\t\t\t\t\tif (iNewIndex > i) {\r\n\t\t\t\t\t\t// Moving Down\r\n\t\t\t\t\t\tfor (var j = i; j < iNewIndex; j++) {\r\n\t\t\t\t\t\t\taColumnData[j] = aColumnData[j + 1];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Moving Up\r\n\t\t\t\t\t\tfor (var j = i; j > iNewIndex; j--) {\r\n\t\t\t\t\t\t\taColumnData[j] = aColumnData[j - 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\taColumnData[iNewIndex] = oHoldEntry;\r\n\t\t\t\t\ti = aColumnData.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").refresh(false);\r\n\t\t\tthis.__setVariantChangedIndicator();\r\n\r\n\t\t},\r\n\t\t_syncConfigAndTable: function() {\r\n\t\t\t//TODO:psutram\r\n\t\t\tvar oConfig = this.getOwnerComponent().getModel(\"P13n\").getData();\r\n\t\t\tvar oProjectView = this.getModel(\"detailView\").getData();\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\r\n\t\t\t// var oTable = this.byId(\"lineItemsList\");\r\n\t\t\tvar aColumns = oTable.removeAllColumns();\r\n\t\t\tif (!oProjectView.aRenderedColumnSet && aColumns.length > 0) {\r\n\t\t\t\toProjectView.aRenderedColumnSet = aColumns;\r\n\t\t\t}\r\n\t\t\tif (oProjectView.aRenderedColumnSet) {\r\n\t\t\t\taColumns = oProjectView.aRenderedColumnSet;\r\n\t\t\t}\r\n\t\t\tvar aColumnData = oConfig.ColumnCollection;\r\n\t\t\tfor (var i = 0; i < aColumnData.length; i++) {\r\n\t\t\t\tfor (var j = 0; j < aColumns.length; j++) {\r\n\t\t\t\t\tif (aColumnData[i].text === aColumns[j].getLabel().getText()) {\r\n\t\t\t\t\t\t// if (aColumn[j].S)\r\n\t\t\t\t\t\tif (aColumns[j].getFilterProperty().includes(\"Date\")) {\r\n\t\t\t\t\t\t\tconsole.log(\"setting filter type for column:\" + aColumns[j].getFilterProperty());\r\n\t\t\t\t\t\t\taColumns[j].setFilterType(this._dateType);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toTable.addColumn(aColumns[j]);\r\n\t\t\t\t\t\tj = aColumns.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//TODO: psutram\r\n\t\t\tthis._applySort();\r\n\t\t\tthis._applyFilter();\r\n\t\t},\r\n\t\t_applySort: function() {\r\n\t\t\tvar aConfig = this.getOwnerComponent().getModel(\"P13n\").getData().SortItems;\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar oTableBinding = oTable.getBinding(\"rows\");\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\t\t\tvar sorters = [];\r\n\t\t\tfor (var i = 0; i < aConfig.length; i++) {\r\n\t\t\t\tvar bDescending = (aConfig[i].operation === \"Descending\") ? true : false;\r\n\t\t\t\tvar sorter = new Sorter(aConfig[i].columnKey, bDescending);\r\n\t\t\t\tsorters.push(sorter);\r\n\t\t\t}\r\n\t\t\t// if (sorters.l)\r\n\t\t\tif (oTableBinding) {\r\n\t\t\t\toTableBinding.sort(sorters);\r\n\t\t\t}\r\n\t\t\t// Turn off the sort indicator\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\taColumns[i].setSorted(false);\r\n\t\t\t}\r\n\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\tvar bSorted = false;\r\n\t\t\t\tvar sortOperator = \"\";\r\n\t\t\t\tfor (var j = 0; j < aConfig.length; j++) {\r\n\t\t\t\t\tif (aConfig[j].columnKey.substring(aConfig[j].columnKey.lastIndexOf(\">\") + 1) === aColumns[i].mProperties.sortProperty) {\r\n\t\t\t\t\t\tbSorted = true;\r\n\t\t\t\t\t\tsortOperator = aConfig[j].operation;\r\n\t\t\t\t\t\tj = aConfig.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\taColumns[i].setSorted(bSorted);\r\n\t\t\t\tif (bSorted) {\r\n\t\t\t\t\taColumns[i].setSortOrder(sortOperator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_applyFilter: function() {\r\n\t\t\tconsole.log(\"_applyFilter: msg\");\r\n\t\t\tvar aConfig = this.getOwnerComponent().getModel(\"P13n\").getData().FilterItems;\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar oTableBinding = oTable.getBinding(\"rows\");\r\n\t\t\t// var oTableBinding = this.byId(\"Table\").getBinding(\"rows\");\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\t\t\tvar filters = [];\r\n\t\t\tfor (var i = 0; i < aConfig.length; i++) {\r\n\t\t\t\tvar filterType = aConfig[i].operation;\r\n\t\t\t\tif (aConfig[i].hasOwnProperty(\"exclude\") && aConfig[i].exclude) {\r\n\t\t\t\t\tfilterType = \"NE\";\r\n\t\t\t\t}\r\n\t\t\t\tvar value1 = \"\";\r\n\t\t\t\tvar value2 = \"\";\r\n\t\t\t\tif (aConfig[i].hasOwnProperty(\"value1\")) {\r\n\t\t\t\t\tvalue1 = aConfig[i].value1;\r\n\t\t\t\t}\r\n\t\t\t\tif (aConfig[i].hasOwnProperty(\"value2\")) {\r\n\t\t\t\t\tvalue2 = aConfig[i].value2;\r\n\t\t\t\t}\r\n\t\t\t\tvar filter = new Filter(aConfig[i].columnKey.substring(aConfig[i].columnKey.lastIndexOf(\">\") + 1), filterType, value1,\r\n\t\t\t\t\tvalue2);\r\n\t\t\t\tfilters.push(filter);\r\n\t\t\t}\r\n\t\t\tif (oTableBinding) {\r\n\t\t\t\toTableBinding.filter(filters);\r\n\t\t\t}\r\n\t\t\t// Turn adjust filter indicator\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\tvar bFiltered = false;\r\n\t\t\t\tvar filterValue = \"\";\r\n\t\t\t\tvar filterOperator = \"\";\r\n\t\t\t\tfor (var j = 0; j < aConfig.length; j++) {\r\n\t\t\t\t\tif (aConfig[j].columnKey.substring(aConfig[j].columnKey.lastIndexOf(\">\") + 1) === aColumns[i].mProperties.filterProperty) {\r\n\t\t\t\t\t\tbFiltered = true;\r\n\t\t\t\t\t\tfilterValue = aConfig[j].value1;\r\n\t\t\t\t\t\tfilterOperator = aConfig[j].operation;\r\n\t\t\t\t\t\tj = aConfig.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\taColumns[i].setFiltered(bFiltered);\r\n\t\t\t\taColumns[i].setFilterValue(filterValue);\r\n\t\t\t\t// aColumns[i].setFiltered(bFiltered);\r\n\t\t\t}\r\n\t\t\t// this.setFooterText();\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"setFooterText\", {});\r\n\t\t\t// PSW Start change to Page Title to add filters from personalisation\r\n\t\t\t// this._setStyleMode(this.getOwnerComponent().getModel(\"masterShared\").getData().oInternalEvents.currentMode);\r\n\t\t\t// PSW End change to Page Title to add filters from personalisation\r\n\t\t},\r\n\t\tonVariantSelect: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getParameters().key;\r\n\t\t\tvar iIndex = sKey.replace(\"Variant\", \"\");\r\n\t\t\tthis._variantSwap(iIndex);\r\n\t\t\tthis.__removeVariantChangedIndicator();\r\n\t\t\tif (this.oPersonalizationDialog) {\r\n\t\t\t\tthis.oPersonalizationDialog.destroy();\r\n\t\t\t\tthis.oPersonalizationDialog = null;\r\n\t\t\t}\r\n\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").getData().oInternalEvents.lastVariant = iIndex;\r\n\t\t},\r\n\t\tonVariantManage: function(oEvent) {\r\n\t\t\tvar aRenamed = oEvent.getParameters().renamed;\r\n\t\t\tvar aDeleted = oEvent.getParameters().deleted;\r\n\t\t\tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\tvar aDeletedIndicies = [];\r\n\t\t\tfor (var i = 0; i < aDeleted.length; i++) {\r\n\t\t\t\tvar iIndex = aDeleted[i].replace(\"Variant\", \"\");\r\n\t\t\t\taDeletedIndicies.push(iIndex);\r\n\t\t\t\tPersonalizationUtils.p13nVariantDelete(this, aVariants[iIndex].PersData, \"InnovationVariants\", aVariants[iIndex].Guid, aVariants[\r\n\t\t\t\t\tiIndex].Description, aVariants[iIndex].__metadata.uri.substring(aVariants[iIndex].__metadata.uri.indexOf(\"/Variants\")));\r\n\t\t\t}\r\n\t\t\taDeletedIndicies.sort(function(a, b) {\r\n\t\t\t\treturn b - a;\r\n\t\t\t});\r\n\t\t\tfor (var k = 0; k < aDeletedIndicies.length; k++) {\r\n\t\t\t\taVariants.splice(aDeletedIndicies[k], 1);\r\n\t\t\t}\r\n\t\t\tfor (var j = 0; j < aRenamed.length; j++) {\r\n\t\t\t\tvar iIndex = aRenamed[j].key.replace(\"Variant\", \"\");\r\n\t\t\t\taVariants[iIndex].Description = aRenamed[j].name;\r\n\t\t\t\tPersonalizationUtils.p13nVariantSave(this, JSON.parse(aVariants[iIndex].PersData), \"InnovationVariants\", aVariants[iIndex].Guid,\r\n\t\t\t\t\taVariants[iIndex]\r\n\t\t\t\t\t.DefaultVar, aRenamed[j].name, true);\r\n\t\t\t}\r\n\t\t\tif (oEvent.getParameters().def !== this.getOwnerComponent().getModel(\"P13n_Variants\").getData().DefaultVariant) {\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n_Variants\").getData().DefaultVariant = oEvent.getParameters().def;\r\n\t\t\t\tif (oEvent.getParameters().def !== \"*standard*\") {\r\n\t\t\t\t\tvar iIndex = oEvent.getParameters().def.replace(\"Variant\", \"\");\r\n\t\t\t\t\taVariants[iIndex].DefaultVar = 'X';\r\n\t\t\t\t\tPersonalizationUtils.p13nVariantSave(this, JSON.parse(aVariants[iIndex].PersData), \"InnovationVariants\", aVariants[iIndex].Guid,\r\n\t\t\t\t\t\taVariants[iIndex]\r\n\t\t\t\t\t\t.DefaultVar, aVariants[iIndex].Description, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonP13nSave: function(oEvent) {\r\n\t\t\tthis._updateP13nConfigForColumnWidth();\r\n\t\t\tvar oData = this.getOwnerComponent().getModel(\"P13n\").getData();\r\n\t\t\tvar sGuid = \"\";\r\n\t\t\tif (oEvent.getParameters().overwrite) {\r\n\t\t\t\tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\t\tvar iIndex = oEvent.getParameters().key.replace(\"Variant\", \"\");\r\n\t\t\t\tsGuid = aVariants[iIndex].Guid;\r\n\t\t\t}\r\n\t\t\tvar sDefaultVar = \" \";\r\n\t\t\tif (oEvent.getParameters().def) {\r\n\t\t\t\tsDefaultVar = \"X\";\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"+++++++++++++++Not the default Variant\");\r\n\t\t\t}\r\n\t\t\tvar sDescription = oEvent.getParameters().name;\r\n\t\t\tPersonalizationUtils.p13nVariantSave(this, oData, \"InnovationVariants\", sGuid, sDefaultVar, sDescription, oEvent.getParameters().overwrite);\r\n\t\t\tthis.__removeVariantChangedIndicator();\r\n\t\t},\r\n\t\t_updateP13nConfigForColumnWidth: function() {\r\n\t\t\tvar oConfig = this.getOwnerComponent().getModel(\"P13n\").getData();\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\t\t\tvar aColumnData = oConfig.FixedColumnConfig;\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\tfor (var j = 0; j < aColumnData.length; j++) {\r\n\t\t\t\t\tif (aColumnData[j].text === aColumns[i].getLabel().getText()) {\r\n\t\t\t\t\t\tvar sWidth = aColumns[i].getWidth();\r\n\t\t\t\t\t\tif (sWidth && sWidth !== \"\") {\r\n\t\t\t\t\t\t\taColumnData[j].width = sWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tj = aColumnData.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_variantSwap: function(iIndex) {\r\n\t\t\tvar ppmModel = IPMUtils.getPPMModel(this);\r\n\t\t\tvar ppmData = ppmModel.getData();\r\n\t\t\tif (iIndex === \"*standard*\") {\r\n\t\t\t\tvar o = JSON.parse(JSON.stringify(this.getOwnerComponent().getModel(\"P13n_default\").getData()));\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(JSON.stringify(this.getOwnerComponent().getModel(\"P13n_default\").getData())));\r\n\t\t\t\tppmData.GlobalFilter = IPMUtils.getGlobalFilter();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\r\n\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(aVariants[iIndex].PersData));\r\n\t\t\t\tvar persData = JSON.parse(aVariants[iIndex].PersData);\r\n\t\t\t\tppmData.GlobalFilter = persData.GlobalFilter;\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"PPMData\").setData(\"GlobalFilter\", \r\n\t\t\t\t// \t\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").getData() );\r\n\r\n\t\t\t}\r\n\t\t\tppmModel.refresh(false);\r\n\t\t\tthis._syncConfigAndTable();\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\t\t\t// this._applyFilter();\r\n\t\t\t// this._applySort();\r\n\t\t},\r\n\r\n\t\t_setUpInitialVariant: function() {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oVariants = sap.ui.core.Fragment.byId(fragmentId, \"Variant\");\r\n\t\t\t// var oVariants = this.byId(\"Variant\");\r\n\t\t\t// this.byId(\"Variant-popover-popover\").attachBeforeOpen({}, function(oEvent) {\r\n\t\t\t/*\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"Variant-popover-popover\").attachBeforeOpen({}, function(oEvent) {\r\n\t\t\t\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\t\t\t\tvar oVariants = sap.ui.core.Fragment.byId(fragmentId, \"Variant\");\r\n\t\t\t\t\t\t\tvar oSelectionKey = oVariants.getSelectionKey();\r\n\t\t\t\t\t\t\tif (!oSelectionKey || oSelectionKey === \"*standard*\") {\r\n\t\t\t\t\t\t\t\t// this.byId(\"Variant-mainsave\").setEnabled(false);\r\n\t\t\t\t\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"Variant-mainsave\").setEnabled(false);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar iIndex = oSelectionKey.replace(\"Variant\", \"\");\r\n\t\t\t\t\t\t\t\tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\t\t\t\t\t\tif (aVariants[iIndex].AccessOptions === \"R\") {\r\n\t\t\t\t\t\t\t\t\t// this.byId(\"Variant-mainsave\").setEnabled(false);\r\n\t\t\t\t\t\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"Variant-mainsave\").setEnabled(false);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// this.byId(\"Variant-mainsave\").setEnabled(true);\r\n\t\t\t\t\t\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"Variant-mainsave\").setEnabled(true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);*/\r\n\t\t\tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(JSON.stringify(this.getOwnerComponent().getModel(\"P13n_default\").getData())));\r\n\t\t\toVariants.setStandardItemText(this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"A_default\"));\r\n\t\t\tvar sLabelId = oVariants.getIdForLabel();\r\n\t\t\tvar oLabel = this.byId(sLabelId);\r\n\t\t\toLabel.oVariantText.setText(this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"A_default\"));\r\n\t\t\tvar aVariants = this.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\tfor (var i = 0; i < aVariants.length; i++) {\r\n\t\t\t\tvar bReadOnly = false;\r\n\t\t\t\tif (aVariants[i].AccessOptions === \"R\") {\r\n\t\t\t\t\tbReadOnly = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar oVariant = new sap.ui.comp.variants.VariantItem(\"Variant\" + i, {\r\n\t\t\t\t\tglobal: false,\r\n\t\t\t\t\tlabelReadOnly: bReadOnly,\r\n\t\t\t\t\treadOnly: bReadOnly,\r\n\t\t\t\t\ttext: aVariants[i].Description,\r\n\t\t\t\t\tkey: \"Variant\" + i\r\n\t\t\t\t});\r\n\t\t\t\toVariants.addVariantItem(oVariant);\r\n\t\t\t\tif (aVariants[i].DefaultVar === \"X\") {\r\n\t\t\t\t\toVariants.setInitialSelectionKey(\"Variant\" + i);\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"P13n\").setData(JSON.parse(aVariants[i].PersData));\r\n\t\t\t\t\tvar ppmModel = IPMUtils.getPPMModel(this);\r\n\t\t\t\t\tvar ppmData = ppmModel.getData();\r\n\t\t\t\t\tvar persData = JSON.parse(aVariants[i].PersData);\r\n\t\t\t\t\tif (persData.GlobalFilter) {\r\n\t\t\t\t\t\tppmData.GlobalFilter = persData.GlobalFilter;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this.byId(\"Variant-mainsave\").setEnabled(!bReadOnly);\r\n\t\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"Variant-mainsave\").setEnabled(!bReadOnly);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._syncConfigAndTable();\r\n\r\n\t\t},\r\n\t\t__setVariantChangedIndicator: function() {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\r\n\t\t\tvar oLabel = this.byId(sap.ui.core.Fragment.byId(fragmentId, \"Variant\").getIdForLabel());\r\n\t\t\t//\t\t\tvar oLabel = this.byId(this.byId(\"Variant\").getIdForLabel());\r\n\t\t\tvar sText = oLabel.oVariantText.getText();\r\n\t\t\tif (sText.substring(sText.length - 1) !== \"*\") {\r\n\t\t\t\toLabel.oVariantText.setText(oLabel.oVariantText.getText() + \"*\");\r\n\t\t\t} else {\r\n\t\t\t\toLabel.oVariantText.setText(oLabel.oVariantText.getText());\r\n\t\t\t}\r\n\t\t},\r\n\t\t__removeVariantChangedIndicator: function() {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oLabel = this.byId(sap.ui.core.Fragment.byId(fragmentId, \"Variant\").getIdForLabel());\r\n\t\t\t// var oLabel = this.byId(this.byId(\"Variant\").getIdForLabel());\r\n\t\t\tvar sText = oLabel.oVariantText.getText();\r\n\t\t\tif (sText.substring(sText.length - 1) === \"*\") {\r\n\t\t\t\toLabel.oVariantText.setText(oLabel.oVariantText.getText().substring(0, sText.length - 1));\r\n\t\t\t} else {\r\n\t\t\t\toLabel.oVariantText.setText(oLabel.oVariantText.getText());\r\n\t\t\t}\r\n\t\t\t// PSW End Change to Text on View Label May 16th\r\n\t\t},\r\n\t\tsetFooterText: function() {\r\n\t\t\tvar ppmModel = this.getModel(\"PPMData\");\r\n\t\t\tif (ppmModel) {\r\n\t\t\t\tvar ppmData = ppmModel.getData();\r\n\t\t\t\tvar currentFilter = \"Current Filter: \";\r\n\t\t\t\t// var fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\t// var oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\t\t// var oTableBinding = oTable.getBinding(\"rows\");\r\n\t\t\t\t// var aColumns = oTable.getColumns();\r\n\t\t\t\tvar firstValue = \"\";\r\n\t\t\t\tvar excludeList = \"Exclude: \";\r\n\t\t\t\tvar firstExcludeValue = \"\";\r\n\r\n\t\t\t\tvar p13nData = this.getModel(\"P13n\").getData();\r\n\t\t\t\tvar filterList = p13nData.FilterItems;\r\n\r\n\t\t\t\t// if (filterItem.columnKey.includes(\"Division\"))\r\n\t\t\t\t// \t{\r\n\t\t\t\tif (ppmData.GlobalFilter.DivisionKey !== \"\") {\r\n\t\t\t\t\tcurrentFilter += firstValue + ppmData.GlobalFilter.DivisionKeyText;\r\n\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t}\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (filterItem.columnKey.includes(\"Hub\"))\r\n\t\t\t\t// {\r\n\t\t\t\tif (ppmData.GlobalFilter.HubKey !== \"\") {\r\n\t\t\t\t\tcurrentFilter += firstValue + ppmData.GlobalFilter.HubKeyText;\r\n\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t}\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (filterItem.columnKey.includes(\"Category\"))\r\n\t\t\t\t// {\r\n\t\t\t\tif (ppmData.GlobalFilter.CategoryKey !== \"\") {\r\n\t\t\t\t\tcurrentFilter += firstValue + ppmData.GlobalFilter.CategoryKeyText;\r\n\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t}\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (filterItem.columnKey.includes(\"Subcategory\"))\r\n\t\t\t\t// {\r\n\t\t\t\t// if (ppmData.GlobalFilter.SubcategoryKey !== \"\")\r\n\t\t\t\t// {\r\n\t\t\t\t// \tcurrentFilter += firstValue + ppmData.GlobalFilter.SubcategoryKeyText;\r\n\t\t\t\t// \tfirstValue = \", \";\r\n\t\t\t\t// }\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (filterItem.columnKey.includes(\"Subcategory\"))\r\n\t\t\t\t// {\r\n\t\t\t\tif (ppmData.GlobalFilter.SubcategoryKey !== \"\") {\r\n\t\t\t\t\tcurrentFilter += firstValue + ppmData.GlobalFilter.SubcategoryKeyText;\r\n\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t}\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (filterItem.columnKey.includes(\"Innovation\"))\r\n\t\t\t\t// {\r\n\t\t\t\tif (ppmData.GlobalFilter.InnovationKey !== \"\") {\r\n\t\t\t\t\tcurrentFilter += firstValue + ppmData.GlobalFilter.InnovationKeyText;\r\n\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t}\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (filterItem.columnKey.includes(\"Phase\"))\r\n\t\t\t\t// {\r\n\t\t\t\tif (ppmData.GlobalFilter.PhaseKey !== \"\") {\r\n\t\t\t\t\tcurrentFilter += firstValue + ppmData.GlobalFilter.PhaseKeyText;\r\n\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t}\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tfor (var i = 0; i < filterList.length; i++) {\r\n\t\t\t\t\tvar filterItem = filterList[i];\r\n\r\n\t\t\t\t\tif (!filterItem.exclude) {\r\n\r\n\t\t\t\t\t\tif (!currentFilter.includes(filterItem.value1)) {\r\n\t\t\t\t\t\t\tcurrentFilter += firstValue + filterItem.value1;\r\n\t\t\t\t\t\t\tfirstValue = \", \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texcludeList += firstExcludeValue + filterItem.value1;\r\n\t\t\t\t\t\tfirstExcludeValue = \", \";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tppmData.ProjectListFooterText = currentFilter;\r\n\t\t\t\tif (excludeList !== \"Exclude: \") {\r\n\t\t\t\t\tppmData.ProjectListFooterText2 = excludeList;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tppmData.ProjectListFooterText2 = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tppmModel.refresh(false);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});",
		"colpal/ppm/projectmgmt/controller/App.controller.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"colpal.ppm.projectmgmt.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\titemToSelect: null,\r\n\t\t\t\taddEnabled: false\r\n\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\r\n\t\t\t\t.then(fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t\r\n\t\t\t// Initialize main models\r\n\t\t\tthis._createSharedModel();\r\n\t\t\t\r\n\t\t\t//Setup User Info    TODO: complete this\r\n\t\t\tthis._setupUserInfo();\r\n\r\n\t\t\t//Initialize App data TODO: complete this\r\n\t\t\t// this._initializeAppData();\r\n\t\t\t\r\n\t\t\tvar oEventBus = sap.ui.getCore().getEventBus();\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.personalization\", \"VariantsSet\", function(sChannelId, sEventId, oData) {\r\n\t\t\t\t// Update table personalization\r\n\t\t\t\tthis._performRoleOverlay(oData);\r\n\t\t\t}, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.userDataLoaded\", \"UserDataLoaded\", function(sChannelId, sEventId, oData) {\r\n\t\t\t\t// Update table personalization\r\n\t\t\t\tthis._performRoleOverlay(oData);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// var oEventBus = sap.ui.getCore().getEventBus();\r\n\t\t\t// oEventBus.subscribe(\"colgate.ppm.projectmgmt.app.spinner\", \"StopSpinner\", function(sChannelId, sEventId, oData) {\r\n\t\t\t// \tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t// \tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oMasterBusy/busy\", false); // Stop Spinner\r\n\t\t\t// \tthis.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t// }, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", function(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/busy\", false); // Stop Spinner\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oMasterBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", function(sChannelId, sEventId, oData) {\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/busy\", true); // Stop Spinner\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oMasterBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t}, this);\r\n\r\n\t\t},\r\n\r\n\t\t_setupUserInfo: function(){\r\n\t\t\tvar sServiceUrl = this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oServiceUrls/userService\");\r\n\t\t\tvar oModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl, false);\r\n\t\t\toModel.setSizeLimit(5000);\r\n\t\t\tthis.getOwnerComponent().setModel(oModel, \"User\");\r\n\t\t\t\r\n\t\t\tvar oResultModel = new sap.ui.model.json.JSONModel({});\r\n\t\t\toResultModel.setSizeLimit(5000);\r\n\t\t\tthis.getOwnerComponent().setModel(oResultModel, \"P13n_Configuration\");\r\n\t\t\t\r\n\t\t\toResultModel = new sap.ui.model.json.JSONModel({});\r\n\t\t\toResultModel.setSizeLimit(5000);\r\n\t\t\tthis.getOwnerComponent().setModel(oResultModel, \"P13n_Variants\");\r\n\t\t\t\r\n\t\t\tvar sUser = sap.ushell.Container.getService(\"UserInfo\").getId().toUpperCase();\r\n\t\t\tvar sPath = \"/Personalizations\";\r\n\t\t\tvar that = this;\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\toModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tvar aData = oDataIn.results;\r\n\t\t\t\t\tvar oData = {};\r\n\t\t\t\t\tfor (var i = 0; i < aData.length; i++) {\r\n\t\t\t\t\t\toData[aData[i].PersKey] = JSON.parse(aData[i].PersData);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"P13n_Configuration\").setData(oData, true);\r\n\t\t\t\t\t// Check to make sure currency exists\r\n\t\t\t\t\tvar sCurrency = that.getOwnerComponent().getModel(\"P13n_Configuration\").getProperty(\"/CurrencySettings\");\r\n\t\t\t\t\t// if (!sCurrency || sCurrency === \"\") {\r\n\t\t\t\t\t\tvar oCurrency = {};\r\n\t\t\t\t\t\toCurrency.Currency = \"USD\"; // Default Currency is USD\r\n\t\t\t\t\t\tthat.getOwnerComponent().getModel(\"P13n_Configuration\").setProperty(\"/CurrencySettings\", oCurrency);\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t// Set Application Data\r\n\t\t\t\t\tif (oData.GlobalSettings) {\r\n\t\t\t\t\t\tthat.getModel(\"appView\").getData().settings = oData.GlobalSettings;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.getModel(\"appView\").refresh(false);\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.personalization\", \"Set\", oData);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"Personalization\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.master\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n// TODO: psutram\r\n\t\t\tsPath = \"/Variants\";\r\n\t\t\tvar filters = [];\r\n\t\t\tfilters.push(new sap.ui.model.Filter(\"PersKey\", sap.ui.model.FilterOperator.EQ, \"InnovationVariants\"));\r\n\t\t\toModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: filters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tvar aData = oDataIn.results;\r\n\t\t\t\t\tvar oData = {};\r\n\t\t\t\t\toData.Variants = aData;\r\n\t\t\t\t\toData.DefaultVariant = \"*standard*\";\r\n\t\t\t\t\tfor (var i = 0; i < aData.length; i++) {\r\n\t\t\t\t\t\tif (aData[i].DefaultVar === \"X\") {\r\n\t\t\t\t\t\t\toData.DefaultVariant = \"Variant\" + i;\r\n\t\t\t\t\t\t\tconsole.log(\"Default Variant:\" + aData[i].Description + \":\" + oData.DefaultVariant);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"P13n_Variants\").setData(oData, true);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").getData().oInternalEvents.variantsLoaded = true;\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.personalization\", \"VariantsSet\", oData);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"Personalization\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.master\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsPath = \"/Users('\" + sUser + \"')\";\r\n\t\t\toModel.read(sPath, {\r\n\t\t\t\tasync: false,\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\toData.oDataOrigin = \"User\";\r\n\t\t\t\t\tthat._handleODataSuccess(oData);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"User\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.master\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", true); // Start Spinner\r\n\t\t\r\n\t\t},\r\n\t\t_createSharedModel: function() {\r\n\t\t\t// Create Shared Model\r\n\t\t\tvar oSharedModel = new JSONModel({\r\n\t\t\t\taMasterButtons: [{\r\n\t\t\t\t\ticon: \"\",\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\tvisible: false,\r\n\t\t\t\t\tstartSpinner: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ticon: \"\",\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\tvisible: false,\r\n\t\t\t\t\tstartSpinner: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ticon: \"\",\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\tvisible: false,\r\n\t\t\t\t\tstartSpinner: false\r\n\t\t\t\t}],\r\n\t\t\t\toInternalEvents: {\r\n\t\t\t\t\tconfigurationLoaded: false,\r\n\t\t\t\t\tvariantsLoaded: false,\r\n\t\t\t\t\tuserDataLoaded: false,\r\n\t\t\t\t\tactivityPersonalizationInitialized: false,\r\n\t\t\t\t\troleOverlayInitialized: false,\r\n\t\t\t\t\tdisplayOnlyMode: false,\r\n\t\t\t\t\tnoAuthorizationMode: false,\r\n\t\t\t\t\tlastAction: \"\",\r\n\t\t\t\t\tlastVariant: \"*standard*\",\r\n\t\t\t\t\tcurrentMode: \"Display\"\r\n\t\t\t\t},\r\n\t\t\t\toServiceUrls: {\r\n\t\t\t\t\t//\t\t\t\t    mainService:jQuery.sap.getModulePath(\"colgate.asm.planning.base\") + this.getOwnerComponent().getMetadata().getManifestEntry(\"sap.app\").dataSources[\"mainService\"].uri,\r\n\t\t\t\t\t//\t\t\t\t    userService:jQuery.sap.getModulePath(\"colgate.asm.planning.base\") + this.getOwnerComponent().getMetadata().getManifestEntry(\"sap.app\").dataSources[\"userService\"].uri\r\n\t\t\t\t\tmainService: this.getOwnerComponent().getMetadata().getManifestEntry(\"sap.app\").dataSources[\"mainService\"].uri,\r\n\t\t\t\t\tuserService: this.getOwnerComponent().getMetadata().getManifestEntry(\"sap.app\").dataSources[\"userService\"].uri\r\n\t\t\t\t},\r\n\t\t\t\tpreviousAction: \"\",\r\n\t\t\t\toDetailBusy: {\r\n\t\t\t\t\tbusy: true,\r\n\t\t\t\t\tdelay: 0\r\n\t\t\t\t},\r\n\t\t\t\toMasterBusy: {\r\n\t\t\t\t\tbusy: true,\r\n\t\t\t\t\tdelay: 0\r\n\t\t\t\t},\r\n\t\t\t\toUser: {},\r\n\t\t\t\taAddOptions: [],\r\n\t\t\t\toMasterSelect: {},\r\n\t\t\t\toTableSelect: {},\r\n\t\t\t\toParentSelect: {},\r\n\t\t\t\toFilters: {\r\n\t\t\t\t\toExclude: {}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\toSharedModel.setSizeLimit(5000);\r\n\t\t\tthis.getOwnerComponent().setModel(oSharedModel, \"masterShared\");\r\n\t\t\t\r\n\t\t\t\r\n\t\t},\r\n\t\t_handleODataSuccess: function(oDataIn) {\r\n\t\t\tvar sOrigin = oDataIn.oDataOrigin;\r\n\t\t\tif (sOrigin === \"User\") {\r\n\t\t\t\tthis._setupHeader();\r\n\t\t\t}\r\n\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oInternalEvents/userDataLoaded\", true);\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.userDataLoaded\", \"UserDataLoaded\", {});\r\n\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t},\r\n\t\t_setupHeader: function() {\r\n\t\t\tvar oShell = sap.ui.getCore().getElementById(\"shell\").getHeader();\r\n\t\t\tvar sPath = jQuery.sap.getModulePath(\"colpal.ppm.projectmgmt\");\r\n\t\t\toShell.setLogo(sPath + \"/img/ZIM_Logo.png\");\r\n\t\t},\r\n\t\t_performRoleOverlay: function(oDataIn) {\r\n\t\t\tif (this.getOwnerComponent().getModel(\"masterShared\") && this.getOwnerComponent().getModel(\"masterShared\").getData()) {\r\n\t\t\t\t//this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oInternalEvents/configurationLoaded\") === true &&\r\n\t\t\t\tif (this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oInternalEvents/variantsLoaded\") === true &&\r\n\t\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oInternalEvents/userDataLoaded\") === true &&\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").getProperty(\"/oInternalEvents/roleOverlayInitialized\") !== true) {\r\n\t\t\t\t\t// Do any necessary role overlays\r\n\t\t\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oInternalEvents/roleOverlayInitialized\", true);\r\n\t\t\t\t\t// var oUserData = this.getOwnerComponent().getModel(\"UserData\");\r\n\t\t\t\t\t// var sRole = oUserData.getProperty(\"/Role\");\r\n\t\t\t\t\t// var oConfiguration = this.getOwnerComponent().getModel(\"ASMConfig\");\r\n\t\t\t\t\t// var aReplacements = JSON.parse(oConfiguration.getProperty(\"/Properties/RoleReplacement\")).Replacements;\r\n\t\t\t\t\t// for (var i = 0; i < aReplacements.length; i++) {\r\n\t\t\t\t\t// \tvar oReplacementRecord = aReplacements[i];\r\n\t\t\t\t\t// \tfor (var j = 0; j < oReplacementRecord.FromRoles.length; j++)\r\n\t\t\t\t\t// \t\tif (sRole === oReplacementRecord.FromRoles[j]) {\r\n\t\t\t\t\t// \t\t\toUserData.setProperty(\"/Role\", oReplacementRecord.ToRole);\r\n\t\t\t\t\t// \t\t\tsRole = oReplacementRecord.ToRole;\r\n\t\t\t\t\t// \t\t\tj = oReplacementRecord.FromRoles.length;\r\n\t\t\t\t\t// \t\t\ti = aReplacements.length;\r\n\t\t\t\t\t// \t\t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t// Check if the app is supposed to be display only\r\n\t\t\t\t\t// var aDisplayOnly = JSON.parse(oConfiguration.getProperty(\"/Properties/RoleConfiguration\")).DisplayOnly;\r\n\t\t\t\t\t// var bRoleFound = false;\r\n\t\t\t\t\t// for (var k = 0; k < aDisplayOnly.length; k++) {\r\n\t\t\t\t\t// \tif (sRole === aDisplayOnly[k]) {\r\n\t\t\t\t\t// \t\tbRoleFound = true;\r\n\t\t\t\t\t// \t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oInternalEvents/displayOnlyMode\", true);\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t// var aAdvanced = JSON.parse(oConfiguration.getProperty(\"/Properties/RoleConfiguration\")).Advanced;\r\n\t\t\t\t\t// for (var l = 0; l < aAdvanced.length; l++) {\r\n\t\t\t\t\t// \tif (sRole === aAdvanced[l]) {\r\n\t\t\t\t\t// \t\tbRoleFound = true;\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t// if (!bRoleFound) {\r\n\t\t\t\t\t\t// this.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oInternalEvents/noAuthorizationMode\", false);\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"InitializationComplete\", {});\r\n\t\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t// }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"colpal.ppm.projectmgmt.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/CopyOfCreateEntity.controller.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\"\r\n\r\n], function(BaseController, JSONModel, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"colpal.ppm.projectmgmt.controller.CreateEntity\", {\r\n\r\n\t\t_oBinding: {},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tenableCreate: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t// Register the view with the message manager\r\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\r\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\r\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\r\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSave: function() {\r\n\t\t\tvar that = this,\r\n\t\t\t\toModel = this.getModel();\r\n\r\n\t\t\t// abort if the  model has not been changed\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\tMessageBox.information(\r\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\r\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\r\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\r\n\t\t\t\t// attach to the request completed event of the batch\r\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\tif (that._checkIfBatchRequestSucceeded(oEvent)) {\r\n\t\t\t\t\t\tthat._fnUpdateSuccess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\r\n\t\t\t\t\t\tMessageBox.error(that._oResourceBundle.getText(\"updateError\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toModel.submitChanges();\r\n\t\t},\r\n\r\n\t\t_checkIfBatchRequestSucceeded: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\tvar aRequests = oEvent.getParameters().requests;\r\n\t\t\tvar oRequest;\r\n\t\t\tif (oParams.success) {\r\n\t\t\t\tif (aRequests) {\r\n\t\t\t\t\tfor (var i = 0; i < aRequests.length; i++) {\r\n\t\t\t\t\t\toRequest = oEvent.getParameters().requests[i];\r\n\t\t\t\t\t\tif (!oRequest.success) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCancel: function() {\r\n\t\t\t// check if the model has been changed\r\n\t\t\tif (this.getModel().hasPendingChanges()) {\r\n\t\t\t\t// get user confirmation first\r\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t} else {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t// cancel without confirmation\r\n\t\t\t\tthis._navBack();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal functions\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Details page\r\n\t\t * @private\r\n\t\t */\r\n\t\t_navBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent(),\r\n\t\t\t\toModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\toModel.resetChanges();\r\n\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for editing the selected object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onEdit: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\r\n\t\t\t\toView = this.getView();\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\r\n\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: oData.objectPath\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for creating new object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onCreate: function(oEvent) {\r\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t\tthis.getView().unbindObject();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"initiativesSet\", {\r\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\r\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\r\n\t\t\t});\r\n\t\t\tthis.getView().setBindingContext(oContext);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if the save button can be enabled\r\n\t\t * @private\r\n\t\t */\r\n\t\t_validateSaveEnablement: function() {\r\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\r\n\t\t\tvar oControl;\r\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\r\n\t\t\t\toControl = aInputControls[m].control;\r\n\t\t\t\tif (aInputControls[m].required) {\r\n\t\t\t\t\tvar sValue = oControl.getValue();\r\n\t\t\t\t\tif (!sValue) {\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkForErrorMessages();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_checkForErrorMessages: function() {\r\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\r\n\t\t\tif (aMessages.length > 0) {\r\n\t\t\t\tvar bEnableCreate = true;\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tbEnableCreate = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnUpdateSuccess: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of creating an object\r\n\t\t *@param {object} oData the response of the save action\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreated: function(oData) {\r\n\t\t\tvar sObjectPath = this.getModel().createKey(\"initiativesSet\", oData);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the onDisplay event which is triggered when this view is displayed \r\n\t\t * @param {sap.ui.base.Event} oEvent the on display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tif (oData && oData.mode === \"update\") {\r\n\t\t\t\tthis._onEdit(oEvent);\r\n\t\t\t} else {\r\n\t\t\t\tthis._onCreate(oEvent);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the form fields\r\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getFormFields: function(oSimpleForm) {\r\n\t\t\tvar aControls = [];\r\n\t\t\tvar aFormContent = oSimpleForm.getContent();\r\n\t\t\tvar sControlType;\r\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\r\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\r\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\r\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\r\n\t\t\t\t\taControls.push({\r\n\t\t\t\t\t\tcontrol: aFormContent[i],\r\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aControls;\r\n\t\t}\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/controller/ProjectDetails.controller.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/m/Dialog\",\r\n\t\"colpal/ppm/projectmgmt/model/formatter\",\r\n\t\"colpal/ppm/projectmgmt/util/DateUtils\",\r\n\t\"colpal/ppm/projectmgmt/util/QuestionnaireUtil\",\r\n\t\"colpal/ppm/projectmgmt/util/MgrUtils\",\r\n\t\"colpal/ppm/projectmgmt/util/CustomCurrencyFormatter\",\r\n\t\"colpal/ppm/projectmgmt/util/IPMUtils\"\r\n], function(BaseController, JSONModel, MessageBox, MessageToast, Dialog, formatter, DateUtils, QuestionnaireUtil, MgrUtils,\r\n\tCustomCurrencyFormatter, IPMUtils) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"colpal.ppm.projectmgmt.controller.ProjectDetails\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\t_oBinding: {},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\t\tcurrencyFormatter: function(fAmount, sCurrency) {\r\n\t\t\t// if (parseFloat(fAmount) < 0) {\r\n\t\t\t// \tthis.removeStyleClass(\"FontColorBlack\");\r\n\t\t\t// \tthis.addStyleClass(\"FontColorRed\");\r\n\t\t\t// } else {\r\n\t\t\t// \tthis.removeStyleClass(\"FontColorRed\");\r\n\t\t\t// \tthis.addStyleClass(\"FontColorBlack\");\r\n\t\t\t// }\r\n\t\t\treturn CustomCurrencyFormatter.formatValue(fAmount, sCurrency);\r\n\t\t},\r\n\t\tonInit: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tenableCreate: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\t\t\tthis.saveAction = \"\";\r\n\t\t\tthis.RefreshOnSave = false;\r\n\t\t\tvar oExoticDecimalTypeForUS = new sap.ui.model.type.Float({\r\n\t\t\t\tgroupingEnabled: true,\r\n\t\t\t\tgroupingSeparator: \"-\",\r\n\t\t\t\tminFractionDigits: 1\r\n\t\t\t});\r\n\r\n\t\t\tvar oData = {};\r\n\t\t\toData.viewTitle = \"\";\r\n\t\t\toData.ProjectFinCount = 0;\r\n\t\t\toData.originalPath = \"\";\r\n\t\t\toData.Input = {};\r\n\t\t\toData.Display = {};\r\n\t\t\toData.Visible = {\r\n\t\t\t\tProjectName: true,\r\n\t\t\t\tPID: true,\r\n\t\t\t\tIName: true,\r\n\t\t\t\tIID: true,\r\n\t\t\t\tPType: true,\r\n\t\t\t\tPhase: true,\r\n\t\t\t\tStatus: true,\r\n\t\t\t\tGrid: true,\r\n\t\t\t\tPMgr: true,\r\n\t\t\t\tFMgr: true,\r\n\t\t\t\tConsPers: true,\r\n\t\t\t\tTechnology: true,\r\n\t\t\t\tInnovation: true,\r\n\t\t\t\tStrategic: true,\r\n\t\t\t\tMarketing: true,\r\n\t\t\t\tDivision: true,\r\n\t\t\t\tHub: true,\r\n\t\t\t\tRolloutDt: true,\r\n\t\t\t\tCategory: true,\r\n\t\t\t\tProdCategory: true,\r\n\t\t\t\tBrand: true,\r\n\t\t\t\tSubBrand: true,\r\n\t\t\t\tStartDt: true,\r\n\t\t\t\tLaunchDt: true,\r\n\t\t\t\tCreateDt: true,\r\n\t\t\t\tUpdateDt: true,\r\n\t\t\t\tCurrency: true,\r\n\t\t\t\tPFinDivision: true,\r\n\t\t\t\tPFinHub: true,\r\n\t\t\t\tPFinCurrency: true,\r\n\t\t\t\tPFIRolloutDt: true,\r\n\t\t\t\tPFinMarketShare: true,\r\n\t\t\t\tPFinMargin: true,\r\n\t\t\t\tPFinNetSales: true,\r\n\t\t\t\tPFinIncremental: true,\r\n\t\t\t\tPFinIncrementalNetSales: true,\r\n\t\t\t\tPFinEstSpend: true,\r\n\t\t\t\tPFinEstSpendInsight: true,\r\n\t\t\t\tPFinEstSpendGTN: true,\r\n\t\t\t\tPFinEstSpendGDP: true,\r\n\t\t\t\tPFinAdd: false,\r\n\t\t\t\tEditButton: true\r\n\t\t\t};\r\n\t\t\toData.Editable = {\r\n\t\t\t\tenableUpdate: false,\r\n\t\t\t\tProjectName: false,\r\n\t\t\t\tPID: false,\r\n\t\t\t\tIName: false,\r\n\t\t\t\tIID: false,\r\n\t\t\t\tPType: false,\r\n\t\t\t\tPhase: false,\r\n\t\t\t\tStatus: false,\r\n\t\t\t\tGrid: false,\r\n\t\t\t\tPMgr: false,\r\n\t\t\t\tFMgr: false,\r\n\t\t\t\tConsPers: true,\r\n\t\t\t\tTechnology: true,\r\n\t\t\t\tInnovation: false,\r\n\t\t\t\tDivision: false,\r\n\t\t\t\tStrategic: false,\r\n\t\t\t\tMarketing: false,\r\n\t\t\t\tHub: false,\r\n\t\t\t\tRolloutDt: false,\r\n\t\t\t\tCategory: false,\r\n\t\t\t\tProdCategory: false,\r\n\t\t\t\tBrand: false,\r\n\t\t\t\tSubBrand: false,\r\n\t\t\t\tStartDt: false,\r\n\t\t\t\tLaunchDt: false,\r\n\t\t\t\tCreateDt: false,\r\n\t\t\t\tUpdateDt: false,\r\n\t\t\t\tCurrency: false,\r\n\t\t\t\tPFinDivision: false,\r\n\t\t\t\tPFinHub: false,\r\n\t\t\t\tPFinCurrency: false,\r\n\t\t\t\tPFIRolloutDt: false,\r\n\t\t\t\tPFinMarketShare: false,\r\n\t\t\t\tPFinMargin: false,\r\n\t\t\t\tPFinNetSales: false,\r\n\t\t\t\tPFinIncremental: false,\r\n\t\t\t\tPFinIncrementalNetSales: false,\r\n\t\t\t\tPFinEstSpend: false,\r\n\t\t\t\tPFinEstSpendInsight: false,\r\n\t\t\t\tPFinEstSpendGTN: false,\r\n\t\t\t\tPFinEstSpendGDP: false,\r\n\t\t\t\tEditButton: true,\r\n\t\t\t\tFinTab: true,\r\n\t\t\t\tAttTab: true,\r\n\t\t\t\tLogTab: true\r\n\t\t\t};\r\n\t\t\toData.Internal = {\r\n\t\t\t\tSave2Mode: \"AddActivity\",\r\n\t\t\t\tSave3Mode: \"AddSubactivity\",\r\n\t\t\t\tCurrentSaveMode: \"Display\" //Display Edit Create\r\n\t\t\t};\r\n\t\t\toData.ProjectFinInfo = [];\r\n\r\n\t\t\tvar oModel = new sap.ui.model.json.JSONModel(oData);\r\n\t\t\toModel.setSizeLimit(5000);\r\n\t\t\tthis.setModel(oModel, \"PGI\");\r\n\r\n\t\t\t// this.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\r\n\t\t\t// Register the view with the message manager\r\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\r\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\r\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\r\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar oEventBus = sap.ui.getCore().getEventBus();\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.projectdetail\", \"setLeadHubRolloutDate\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oDataIn) {\r\n\t\t\t\t\tthis.setLeadHubRolloutDate();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.projectdetail\", \"refreshAttachments\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oDataIn) {\r\n\t\t\t\t\tif (this.attachmentDialog) {\r\n\t\t\t\t\t\tthis.attachmentDialog.close();\r\n\t\t\t\t\t\tthis.attachmentDialog.destroy();\r\n\t\t\t\t\t\tthis.attachmentDialog = null;\r\n\t\t\t\t\t\t// this.getItemAttachments();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getItemAttachments();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\toEventBus.subscribe(\"colgate.ppm.projectmgmt.projectdetail\", \"updateFinInfoRowCount\",\r\n\t\t\t\tfunction(sChannelId, sEventId, oDataIn) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tthat.updateFinInfoRowCount();\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t\t// this.updateFinInfoRowCount ();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t// var jsonModel = new JSONModel();\r\n\t\t\t// var Project = {};\r\n\t\t\t// jsonModel.setData (Project);\r\n\t\t\t// this.getView().setModel (jsonModel, \"PGI\");\r\n\r\n\t\t\t// var ppmModel = sap.ui.core.getModel (\"PPMData\");\r\n\t\t\t// var ppmModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\t// if (ppmModel)\r\n\t\t\t// {\r\n\t\t\t// \tthis.getView().setModel (ppmModel, \"PPMData\");\r\n\t\t\t// }\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\tsetupItemforUpdate: function(oItem, pgiData) {\r\n\r\n\t\t\t// Questions: ItemType or Project Type key ????\r\n\t\t\t// CreatedBy & CreatedDate : does it need to be populated\r\n\t\t\t// LastupdbyKey, LastupdateDate & LastUpdateTime : does it need to be populated\r\n\t\t\toItem.ItemDesc = pgiData.Project.ItemDesc;\r\n\t\t\toItem.ProjecttypeKey = pgiData.Project.ProjecttypeKey;\r\n\t\t\toItem.DivisionKey = pgiData.Project.DivisionKey;\r\n\t\t\toItem.HubKey = pgiData.Project.HubKey;\r\n\t\t\toItem.CategoryKey = pgiData.Project.CategoryKey;\r\n\t\t\toItem.SubcategoryKey = pgiData.Project.SubcategoryKey;\r\n\t\t\toItem.BrandKey = pgiData.Project.BrandKey;\r\n\t\t\toItem.SubbrandKey = pgiData.Project.SubbrandKey;\r\n\t\t\toItem.CurrencyKey = pgiData.Project.CurrencyKey;\r\n\t\t\toItem.InnovationKey = pgiData.Project.InnovationKey;\r\n\t\t\t// oItem.CreatedbyKey = pgiData.Project.CreatedbyKey;\r\n\t\t\t// oItem.CreatedDate = pgiData.Project.CreatedDate;\r\n\r\n\t\t\t// new Date (DateUtils.getSystemAdjISODate_fromDate (oDataIn.StartDate));\r\n\r\n\t\t\toItem.LaunchDate = new Date(DateUtils.getSystemAdjISODate_fromDate(pgiData.Project.LaunchDate));\r\n\t\t\toItem.StartDate = new Date(DateUtils.getSystemAdjISODate_fromDate(pgiData.Project.StartDate));\r\n\r\n\t\t\t// var launctDt = pgiData.Project.LaunchDate;\r\n\t\t\t// launctDt.setUTCDate(launctDt.getDate());\r\n\t\t\t// oItem.LaunchDate = launctDt;\r\n\r\n\t\t\t// oItem.PlannedFinish = new Date (DateUtils.getSystemAdjISODate_fromDate (pgiData.Project.PlannedFinish));\r\n\t\t\tconsole.log(\"Update: Start Date:\" + oItem.StartDate);\r\n\t\t\tconsole.log(\"Update: Launch Date:\" + oItem.LaunchDate);\r\n\r\n\t\t\t// oItem.LastupdbyKey = pgiData.Project.LastupdbyKey;\r\n\t\t\t// oItem.LastupdateDate = pgiData.Project.LastupdateDate;\r\n\t\t\t// oItem.LastUpdateTime = pgiData.Project.LastUpdateTime;\r\n\t\t\t// oItem.PlannedFinish = pgiData.Project.PlannedFinish;\r\n\t\t\toItem.PhaseKey = pgiData.Project.PhaseKey;\r\n\t\t\toItem.PhasestatusKey = pgiData.Project.PhasestatusKey;\r\n\r\n\t\t\toItem.ProjmanagerKey = pgiData.Project.ProjmanagerKey;\r\n\t\t\toItem.FinamanagerKey = pgiData.Project.FinamanagerKey;\r\n\t\t\t// oItem.ConprediffKey = pgiData.Project.ConprediffKey;\r\n\t\t\t// oItem.TobmuKey = pgiData.Project.TobmuKey;\r\n\t\t\toItem.StarfoKey = pgiData.Project.StarfoKey;\r\n\t\t\toItem.MarkobjeKey = pgiData.Project.MarkobjeKey;\r\n\r\n\t\t\tif (pgiData.Project.Grid) {\r\n\t\t\t\toItem.ZimGrid = \"1\";\r\n\t\t\t} else {\r\n\t\t\t\toItem.ZimGrid = \"0\";\r\n\t\t\t}\r\n\t\t\t// oItem.ProjecttypeKey = pgiData.Project.ProjecttypeKey;\r\n\r\n\t\t\treturn oItem;\r\n\t\t},\r\n\t\tsetupFinItemForUpdate: function(oItemFin, oRecord) {\r\n\t\t\toItemFin.RpmGuid = oRecord.RpmGuid;\r\n\t\t\toItemFin.IniGuid = oRecord.IniGuid;\r\n\t\t\toItemFin.SerialNo = oRecord.SerialNo;\r\n\t\t\toItemFin.DivisionKey = oRecord.DivisionKey;\r\n\t\t\t// oItemFin.DivisionDesc = oRecord.DivisionDesc;\r\n\t\t\toItemFin.HubKey = oRecord.HubKey;\r\n\t\t\t// oItemFin.HubDesc = oRecord.HubDesc;\r\n\t\t\toItemFin.ProjectID = oRecord.ProjectID;\r\n\t\t\toItemFin.InitiaitiveID = oRecord.InitiaitiveID;\r\n\t\t\t// oItemFin.RolloutDate = oRecord.RolloutDate;\r\n\t\t\toItemFin.CurrencyKey = oRecord.CurrencyKey;\r\n\t\t\t// oItemFin.CurrencyDesc = oRecord.CurrencyDesc;\r\n\t\t\t// oItemFin.MarketShare = oRecord.MarketShare;\r\n\t\t\toItemFin.Margin = oRecord.Margin;\r\n\t\t\toItemFin.NetSales = oRecord.NetSales;\r\n\t\t\toItemFin.Incremental = oRecord.Incremental;\r\n\t\t\toItemFin.IncrementalNetSales = oRecord.IncrementalNetSales;\r\n\t\t\toItemFin.EstimatedSpendAP = oRecord.EstimatedSpendAP;\r\n\t\t\toItemFin.EstimatedDesign = oRecord.EstimatedDesign;\r\n\t\t\toItemFin.EstimatedSpendInsights = oRecord.EstimatedSpendInsights;\r\n\t\t\toItemFin.EstimatedSpendGTN = oRecord.EstimatedSpendGTN;\r\n\t\t\treturn oItemFin;\r\n\t\t},\r\n\t\tcheckForFinChanges: function(oRecord, orgFinInfo) {\r\n\t\t\tvar rowChanged = false;\r\n\t\t\tfor (var i = 0; i < orgFinInfo.length; i++) {\r\n\t\t\t\t// if (oRecord.HubKey === ppmData.ProjectFinInfo[i].HubKey)\r\n\t\t\t\t//psutram7\r\n\t\t\t\tif (oRecord.SerialNo === orgFinInfo[i].SerialNo) {\r\n\t\t\t\t\tif (oRecord.HubKey !== orgFinInfo[i].HubKey)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\tif (oRecord.CurrencyKey !== orgFinInfo[i].CurrencyKey)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\tif (oRecord.RolloutDate !== orgFinInfo[i].RolloutDate)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t// if (parseFloat(oRecord.MarketShare) !== parseFloat(orgFinInfo[i].MarketShare))\r\n\t\t\t\t\t// \treturn true;\r\n\r\n\t\t\t\t\tif (parseFloat(oRecord.Margin) !== parseFloat(orgFinInfo[i].Margin))\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\tif (parseFloat(oRecord.NetSales) !== parseFloat(orgFinInfo[i].NetSales))\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\tif (parseFloat(oRecord.Incremental) !== parseFloat(orgFinInfo[i].Incremental))\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t// if (parseFloat(oRecord.EstimatedSpendAP) !== parseFloat(ppmData.ProjectFinInfo[i].EstimatedSpendAP))\r\n\t\t\t\t\t// \treturn true;\r\n\r\n\t\t\t\t\t// if (parseFloat(oRecord.EstimatedDesign) !== parseFloat(ppmData.ProjectFinInfo[i].EstimatedDesign))\r\n\t\t\t\t\t// \treturn true;\r\n\r\n\t\t\t\t\t// if (parseFloat(oRecord.EstimatedSpendInsights) !== parseFloat(ppmData.ProjectFinInfo[i].EstimatedSpendInsights))\r\n\t\t\t\t\t// \treturn true;\r\n\r\n\t\t\t\t\t// if (parseFloat(oRecord.EstimatedSpendGTN) !== parseFloat(ppmData.ProjectFinInfo[i].EstimatedSpendGTN))\r\n\t\t\t\t\t// \treturn true;\r\n\r\n\t\t\t\t\tif (oRecord.EstimatedSpendAP !== orgFinInfo[i].EstimatedSpendAP)\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\tif (oRecord.EstimatedDesign !== orgFinInfo[i].EstimatedDesign)\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\tif (oRecord.EstimatedSpendInsights !== orgFinInfo[i].EstimatedSpendInsights)\r\n\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\tif (oRecord.EstimatedSpendGTN !== orgFinInfo[i].EstimatedSpendGTN)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn rowChanged;\r\n\t\t},\r\n\t\tsetupFinForInsert: function(pgiData) {\r\n\t\t\tvar ppmData = this.getModel(\"PPMData\").getData();\r\n\t\t\tvar projectFinInfo = [];\r\n\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\r\n\t\t\t\tvar currentRow = pgiData.ProjectFinInfo[i];\r\n\t\t\t\tvar oItemFin = {};\r\n\t\t\t\tvar onCreateAmtValue = \"0\";\r\n\t\t\t\tif (currentRow.rowMode === \"Add\" ||\r\n\t\t\t\t\t(currentRow.rowMode === \"Edit\" && this.checkForFinChanges(currentRow, ppmData.ProjectFinInfo))) {\r\n\t\t\t\t\tif (currentRow.rowMode === \"Edit\") {\r\n\t\t\t\t\t\tconsole.log(\"RowChanged for HubKey:\" + currentRow.HubKey);\r\n\t\t\t\t\t\toItemFin.RpmGuid = currentRow.RpmGuid;\r\n\t\t\t\t\t\toItemFin.IniGuid = currentRow.IniGuid;\r\n\t\t\t\t\t\t// oItemFin.__metadata = currentRow.__metadata;\r\n\t\t\t\t\t}\r\n\t\t\t\t\toItemFin.SerialNo = currentRow.SerialNo + \"\";\r\n\t\t\t\t\toItemFin.DivisionKey = currentRow.DivisionKey;\r\n\t\t\t\t\t// oItemFin.DivisionDesc = pgiData.ProjectFin.DivisionDesc;\r\n\t\t\t\t\toItemFin.HubKey = currentRow.HubKey;\r\n\t\t\t\t\toItemFin.HubDesc = pgiData.ProjectFin.HubDesc;\r\n\t\t\t\t\toItemFin.ProjectID = currentRow.ProjectID;\r\n\t\t\t\t\toItemFin.InitiaitiveID = currentRow.InitiaitiveID;\r\n\t\t\t\t\t// oItemFin.RolloutDate = currentRow.RolloutDate;\r\n\r\n\t\t\t\t\toItemFin.RolloutDate = new Date(DateUtils.getSystemAdjISODate_fromDate(currentRow.RolloutDate));\r\n\r\n\t\t\t\t\toItemFin.CurrencyKey = currentRow.CurrencyKey;\r\n\t\t\t\t\toItemFin.CurrencyDesc = pgiData.ProjectFin.CurrencyDesc;\r\n\t\t\t\t\t// oItemFin.MarketShare = currentRow.MarketShare.toString();\r\n\r\n\t\t\t\t\t// oItemFin.Margin = currentRow.Margin.toString();\r\n\t\t\t\t\t// oItemFin.NetSales = currentRow.NetSalesEdit[0].toString();\r\n\t\t\t\t\t// oItemFin.Incremental = currentRow.Incremental.toString();\r\n\t\t\t\t\t// oItemFin.IncrementalNetSales = currentRow.IncrementalNetSales.toString();\r\n\t\t\t\t\t// oItemFin.EstimatedSpendAP = currentRow.EstimatedSpendAPEdit[0].toString();\r\n\t\t\t\t\t// oItemFin.EstimatedDesign = currentRow.EstimatedDesignEdit[0].toString();\r\n\t\t\t\t\t// oItemFin.EstimatedSpendInsights = currentRow.EstimatedSpendInsightsEdit[0].toString();\r\n\t\t\t\t\t// oItemFin.EstimatedSpendGTN = currentRow.EstimatedSpendGTN.toString();\r\n\r\n\t\t\t\t\toItemFin.Margin = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.NetSales = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.Incremental = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.IncrementalNetSales = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.EstimatedSpendAP = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.EstimatedDesign = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.EstimatedSpendInsights = onCreateAmtValue;\r\n\t\t\t\t\toItemFin.EstimatedSpendGTN = onCreateAmtValue;\r\n\r\n\t\t\t\t\tprojectFinInfo.push(oItemFin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn projectFinInfo;\r\n\t\t},\r\n\t\t// psutram7\r\n\t\tsetupItemAnswerForInsert: function(pgiData) {\r\n\t\t\tvar ppmData = this.getModel(\"PPMData\").getData();\r\n\t\t\tvar qCollection = [];\r\n\t\t\tvar bCreate = false;\r\n\t\t\tvar updateCollection = [];\r\n\t\t\t// pgiData.ItemQuesAnswer\r\n\t\t\t// pgiData.Questionnaire\r\n\t\t\t//ppmData.VHQuestionnaires\r\n\t\t\t// if No ItemAnswer exists on retrieve \r\n\t\t\t// then get List of Questions and then set the corresponding answers from QuestionnaireUtil\r\n\r\n\t\t\tif (ppmData.ItemQuesAnswer && ppmData.ItemQuesAnswer.length > 0) {\r\n\t\t\t\tconsole.log(\"setupItemAnswerForInsert: Using ppmData.ItemQuesAnswer \");\r\n\t\t\t\tqCollection = ppmData.ItemQuesAnswer;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"setupItemAnswerForInsert: Using VHQuestionnaires\");\r\n\t\t\t\tqCollection = ppmData.VHQuestionnaires;\r\n\t\t\t\tbCreate = true;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < qCollection.length; i++) {\r\n\r\n\t\t\t\t// var currentRow = qCollection[i];\r\n\t\t\t\tvar oItemQuesAnswers = {};\r\n\t\t\t\tif (bCreate) {\r\n\t\t\t\t\toItemQuesAnswers.RpmGuid = pgiData.Project.RpmGuid;\r\n\t\t\t\t\toItemQuesAnswers.RpmGuidC = pgiData.Project.RpmGuidC;\r\n\t\t\t\t\toItemQuesAnswers.QnnrId = qCollection[i].QnnrId;\r\n\t\t\t\t\toItemQuesAnswers.QstgrpId = qCollection[i].QstgrpId;\r\n\t\t\t\t\toItemQuesAnswers.QuestionId = qCollection[i].QuestionId;\r\n\t\t\t\t\toItemQuesAnswers.OptionId = qCollection[i].OptionId;\r\n\t\t\t\t\toItemQuesAnswers.Valuation = qCollection[i].Valuation;\r\n\t\t\t\t\t// oItemQuesAnswers.Answered = \"\";\r\n\t\t\t\t\t// oItemQuesAnswers.Answered =  qCollection.Answered;\r\n\t\t\t\t} else {\r\n\t\t\t\t\toItemQuesAnswers = qCollection[i];\r\n\t\t\t\t\toItemQuesAnswers.Answered = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (pgiData.Questionnaire && pgiData.Questionnaire.length > 0) {\r\n\t\t\t\t\tfor (var j = 0; j < pgiData.Questionnaire.length; j++) {\r\n\t\t\t\t\t\t// console.log (\"Q Id:\" + oItemQuesAnswers.QnnrId + \":\" + \"\")\r\n\t\t\t\t\t\tif (pgiData.Questionnaire[j].QuestionId === oItemQuesAnswers.QuestionId &&\r\n\t\t\t\t\t\t\toItemQuesAnswers.Valuation === pgiData.Questionnaire[j].AnswerValuation) {\r\n\t\t\t\t\t\t\toItemQuesAnswers.Answered = \"X\";\r\n\t\t\t\t\t\t\tj = pgiData.Questionnaire.length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateCollection.push(oItemQuesAnswers);\r\n\t\t\t\t}\r\n\t\t\t\t// if (bCreate)\r\n\t\t\t\t// {\r\n\t\t\t\t// \tqCollection.push(oItemQuesAnswers);\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\treturn updateCollection;\r\n\t\t},\r\n\t\t/*\r\n\t\tcreateProjectFinInfo: function(){\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel (\"PPM\");\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tvar currentRow = pgiData.ProjectFinInfo[i];\r\n\t\t\t\tif (currentRow.rowMode === \"Add\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar oItemFin = {};\r\n\t\t\t\t\t\r\n\t\t\t\t\toItemFin.RpmGuid = currentRow.RpmGuid;\r\n\t\t\t\t\toItemFin.IniGuid = currentRow.IniGuid;\r\n\t\t\t\t\toItemFin.DivisionKey = currentRow.DivisionKey;\r\n\t\t\t\t\t// oItemFin.DivisionDesc = pgiData.ProjectFin.DivisionDesc;\r\n\t\t\t\t\toItemFin.HubKey = currentRow.HubKey;\r\n\t\t\t\t\t// oItemFin.HubDesc = pgiData.ProjectFin.HubDesc;\r\n\t\t\t\t\toItemFin.ProjectID = currentRow.ProjectID;\r\n\t\t\t\t\toItemFin.InitiaitiveID = currentRow.InitiaitiveID;\r\n\t\t\t\t\t// oItemFin.RolloutDate = pgiData.ProjectFin.RolloutDate;\r\n\t\t\t\t\toItemFin.CurrencyKey = currentRow.CurrencyKey;\r\n\t\t\t\t\t// oItemFin.CurrencyDesc = pgiData.ProjectFin.CurrencyDesc;\r\n\t\t\t\t\toItemFin.MarketShare = currentRow.MarketShare;\r\n\t\t\t\t\toItemFin.Margin = currentRow.Margin;\r\n\t\t\t\t\toItemFin.NetSales = currentRow.NetSales;\r\n\t\t\t\t\toItemFin.Incremental = currentRow.Incremental;\r\n\t\t\t\t\toItemFin.IncrementalNetSales = currentRow.IncrementalNetSales;\r\n\t\t\t\t\toItemFin.EstimatedSpendAP = currentRow.EstimatedSpendAP;\r\n\t\t\t\t\toItemFin.EstimatedDesign = currentRow.EstimatedDesign;\r\n\t\t\t\t\toItemFin.EstimatedSpendInsights = currentRow.EstimatedSpendInsights;\r\n\t\t\t\t\toItemFin.EstimatedSpendGTN = currentRow.EstimatedSpendGTN;\r\n\t\t\t\t\t\r\n\t\t\t\t\toBaseModel.create(\"/ItemFinancialInfo\", oItemFin, {\r\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\t\t\tconsole.log (\"Success in creating ItemFinancialInfo:\" + oResponse.statusCode);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\toError.ErrorOrigin = \"CreateProject\";\r\n\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t*/\r\n\t\t/*\r\n\t\tupdateProjectFinInfo: function(){\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel (\"PPM\");\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar ppmModel = this.getModel(\"PPMData\");\r\n\t\t\tvar ppmData = ppmModel.getData ();\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\tvar fields = [\"DivisionKey\", \"HubKey\", \"RolloutDate\", \"CurrencyKey\", \"CurrencyDesc\", \"MarketShare\", \"Margin\", \"NetSales\", \"Incremental\", \"IncrementalNetSales\", \"EstimatedSpendAP\", \"EstimatedDesign\", \"EstimatedSpendInsights\", \"EstimatedSpendGTN\"]\r\n\t\t\t\t\t\t\r\n\t\t\tvar updateItems = [];\r\n\t\t\tvar createItems = [];\r\n\t\t\tvar oItemFin = {};\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length;i++)\r\n\t\t\t{\r\n\t\t\t\tvar oRecord = pgiData.ProjectFinInfo[i];\r\n\t\t\t\tif (oRecord.rowMode === \"Add\")\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\toItemFin = {};\r\n\t\t\t\t\toItemFin = this.setupFinItemForUpdate(oItemFin, oRecord);\r\n\t\t\t\t\t// oItemFin.push(oItemFin);\r\n\t\t\t\t\t\r\n\t\t\t\t\toBaseModel.create(\"/ItemFinancialInfo\", oItemFin, {\r\n\t\t\t\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log (\"Success in creating ItemFinancialInfo:\" + oResponse.statusCode);\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\t\t\t\toError.ErrorOrigin = \"CreateProject\";\r\n\t\t\t\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// edit mode\r\n\t\t\t\t\tfor (var j  = 0; j < ppmData.ProjectFinInfo.length; j++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar orgRecord = ppmData.ProjectFinInfo[j];\r\n\t\t\t\t\t\tif (orgRecord.RpmGuid === oRecord.RpmGuid && orgRecord.DivisionKey === oRecord.DivisionKey && orgRecord.HubKey === oRecord.HubKey)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.log (\"Record Matched\");\r\n\t\t\t\t\t\t\tfor (var x=0; x< fields.length; x++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (orgRecord[fields[x]] !== oRecord[fields[x]])\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tconsole.log (\"Record has Changed\");\r\n\t\t\t\t\t\t\t\t\tx = fields.length;\r\n\t\t\t\t\t\t\t\t\tj = ppmData.ProjectFinInfo.length;\r\n\t\t\t\t\t\t\t\t\toItemFin = {};\r\n\t\t\t\t\t\t\t\t\toItemFin = this.setupFinItemForUpdate(oItemFin, oRecord);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar sPath = oRecord.__metadata.uri.substring(oRecord.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t\t\t\t\t\t\toBaseModel.update(sPath, oItemFin, {\r\n\t\t\t\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Success in Updating:\" + oResponse.statusCode);\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\t\t\t\t\toError.ErrorOrigin = \"UpdateProject\";\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Error in Updating:\" + oError);\r\n\t\t\t\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//var sPath = oRecord.__metadata.uri.substring(oRecord.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t*/\r\n\t\tonCopy: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tsap.m.MessageBox.show(\r\n\t\t\t\tthis.getModel(\"i18n\").getResourceBundle().getText(\"PGI_Confirm_Copy\"), {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.QUESTION,\r\n\t\t\t\t\ttitle: this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_Confirm_Copy_title\"),\r\n\t\t\t\t\tactions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\t\t\t\t\t\t\tthat.createProject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\t// copyProject: function(oContext){\r\n\t\t// \tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t// \tvar oModel = this.getModel(\"PGI\");\r\n\t\t// \tvar pgiData = oModel.getData();\r\n\t\t// \tvar oItem = {};\r\n\r\n\t\t// \toItem = this.setupItemforUpdate(oItem, pgiData);\r\n\t\t// \toItem.ItemFinancialInfoSet = this.setupFinForInsert(pgiData);\r\n\r\n\t\t// },\r\n\t\tcreateProject: function() {\r\n\t\t\t// pgiData.CurrentMode === \"Create\"\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\tvar oItem = {};\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\t// oItem.IniGuidC = \"binary\\'\" + pgiData.Project.IniGuidC + \"\\'\";\r\n\t\t\t// oItem.IniGuidC = pgiData.Project.IniGuidC;\r\n\t\t\t// oItem.ItemDesc = pgiData.Project.ItemDesc;\r\n\t\t\t// oItem.IniId = pgiData.Project.IniId;\r\n\t\t\toItem = this.setupItemforUpdate(oItem, pgiData);\r\n\t\t\t// oItem = this.setupItemforUpdate(oItem, pgiData);\r\n\r\n\t\t\tif (pgiData.CurrentMode === \"Display\") {\r\n\t\t\t\toItem.ItemDesc = \"Copy:\" + pgiData.Project.ItemDesc;\r\n\t\t\t}\r\n\t\t\toItem.ItemFinancialInfoSet = this.setupFinForInsert(pgiData);\r\n\t\t\toItem.ItemQuesAnswerSet = this.setupItemAnswerForInsert(pgiData);\r\n\r\n\t\t\t// oItem.ItemFinancialInfo = this.setupFinForInsert(pgiData);\r\n\r\n\t\t\tconsole.log(\"data setup for create\");\r\n\t\t\toBaseModel.create(\"/ItemsList\", oItem, {\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\tconsole.log(\"Success in creating ItemsList:\" + oResponse.statusCode);\r\n\t\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PGI_CreateprojectSuccess\", [oItem.ItemDesc]);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PGI_CreateprojectError\", [oError]);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\toError.ErrorOrigin = \"CreateProject\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdateProjectBatch: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\tvar oRow = sap.ui.getCore().getModel(\"PPMData\").getProperty(pgiData.originalPath);\r\n\t\t\tvar ppmData = this.getModel(\"PPMData\").getData();\r\n\t\t\tvar batchOperations = [];\r\n\t\t\tvar mParameters = {\r\n\t\t\t\t\"groupId\": \"PPM\",\r\n\t\t\t\t\"changeSetId\": \"PPM1\"\r\n\t\t\t};\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\r\n\t\t\tvar aKeys = Object.keys(oRow);\r\n\t\t\tvar oItem = {};\r\n\t\t\tfor (var i = 0; i < aKeys.length; i++) {\r\n\t\t\t\toItem[aKeys[i]] = oRow[aKeys[i]];\r\n\t\t\t}\r\n\t\t\tthis.setupItemforUpdate(oItem, pgiData);\r\n\t\t\t// oItem.ItemFinancialInfoSet = this.setupFinForInsert(pgiData);\r\n\t\t\toBaseModel.setUseBatch(true);\r\n\t\t\toBaseModel.setDeferredGroups([\"PPM\"]);\r\n\t\t\tvar sPath = oRow.__metadata.uri.substring(oRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t// batchOperations.push(oBaseModel.update(sPath, oItem));\r\n\t\t\toBaseModel.update(sPath, oItem, mParameters);\r\n\r\n\t\t\tvar orgFinInfo = JSON.parse(this.orgFinInfo);\r\n\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\r\n\t\t\t\tvar currentRow = pgiData.ProjectFinInfo[i];\r\n\t\t\t\tvar oItemFin = {};\r\n\t\t\t\tif ((this.checkForFinChanges(currentRow, orgFinInfo) && currentRow.rowMode === \"Edit\") ||\r\n\t\t\t\t\tcurrentRow.rowMode === \"Add\") {\r\n\t\t\t\t\toItemFin.DivisionKey = currentRow.DivisionKey;\r\n\t\t\t\t\toItemFin.HubKey = currentRow.HubKey;\r\n\t\t\t\t\t// oItemFin.HubDesc = pgiData.ProjectFin.HubDesc;\r\n\t\t\t\t\t// oItemFin.ProjectID = currentRow.ProjectID;\r\n\t\t\t\t\t// oItemFin.InitiaitiveID = currentRow.InitiaitiveID;\r\n\t\t\t\t\t// oItemFin.RolloutDate = currentRow.RolloutDate;\r\n\t\t\t\t\toItemFin.RolloutDate = new Date(DateUtils.getSystemAdjISODate_fromDate(currentRow.RolloutDate));\r\n\r\n\t\t\t\t\t// var rolloutDt = currentRow.RolloutDate;\r\n\t\t\t\t\t// rolloutDt.setUTCDate(rolloutDt.getDate());\r\n\t\t\t\t\t// oItemFin.RolloutDate = rolloutDt;\r\n\r\n\t\t\t\t\t// console.log(\"Retrieve Fin Info Rollout Date:\" + i + \":\" + oItemFin.RolloutDate);\r\n\t\t\t\t\toItemFin.CurrencyKey = currentRow.CurrencyKey;\r\n\t\t\t\t\t// oItemFin.CurrencyDesc = pgiData.ProjectFin.CurrencyDesc;\r\n\t\t\t\t\t// oItemFin.MarketShare = currentRow.MarketShare.toString();\r\n\t\t\t\t\toItemFin.Margin = currentRow.Margin.toString();\r\n\t\t\t\t\toItemFin.NetSales = currentRow.NetSalesEdit[0].toString();\r\n\t\t\t\t\toItemFin.Incremental = currentRow.Incremental.toString();\r\n\t\t\t\t\toItemFin.IncrementalNetSales = currentRow.IncrementalNetSales.toString();\r\n\t\t\t\t\toItemFin.EstimatedSpendAP = currentRow.EstimatedSpendAPEdit[0].toString();\r\n\t\t\t\t\toItemFin.EstimatedDesign = currentRow.EstimatedDesignEdit[0].toString();\r\n\t\t\t\t\toItemFin.EstimatedSpendInsights = currentRow.EstimatedSpendInsightsEdit[0].toString();\r\n\t\t\t\t\toItemFin.EstimatedSpendGTN = currentRow.EstimatedSpendGTN.toString();\r\n\r\n\t\t\t\t\toItemFin.SerialNo = currentRow.SerialNo + \"\";\r\n\r\n\t\t\t\t\tif (currentRow.rowMode === \"Edit\") {\r\n\t\t\t\t\t\toItemFin.RpmGuid = currentRow.RpmGuid;\r\n\r\n\t\t\t\t\t\tsPath = currentRow.__metadata.uri.substring(currentRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t\t\t\tmParameters = {\r\n\t\t\t\t\t\t\t\"groupId\": \"PPM\",\r\n\t\t\t\t\t\t\t\"changeSetId\": \"PPM2\"\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\toBaseModel.update(sPath, oItemFin, mParameters);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toItemFin.RpmGuid = oItem.RpmGuid;\r\n\t\t\t\t\t\tsPath = \"/ItemFinancialInfo\";\r\n\t\t\t\t\t\tmParameters = {\r\n\t\t\t\t\t\t\t\"groupId\": \"PPM\",\r\n\t\t\t\t\t\t\t\"changeSetId\": \"PPM3\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\toBaseModel.create(sPath, oItemFin, mParameters);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (currentRow.rowMode === \"Delete\") {\r\n\t\t\t\t\tsPath = currentRow.__metadata.uri.substring(currentRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t\t\tmParameters = {\r\n\t\t\t\t\t\t\"groupId\": \"PPM\",\r\n\t\t\t\t\t\t\"changeSetId\": \"PPM2\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\toBaseModel.remove(sPath, mParameters);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tmParameters = {\r\n\t\t\t\t// \"groupId\": \"PPM\",\r\n\t\t\t\t// \"changeSetId\": \"PPM\",\r\n\t\t\t\t\"success\": function(oData, response) {\r\n\t\t\t\t\tconsole.log(\"Success in Batch Update:\");\r\n\t\t\t\t},\r\n\t\t\t\t\"error\": function(params) {\r\n\t\t\t\t\tconsole.log(\"Error in Batch Update:\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// oItem.ItemQuesAnswerSet = this.setupItemAnswerForInsert(pgiData);\r\n\t\t\tvar itemAnswersSet = this.setupItemAnswerForInsert(pgiData);\r\n\t\t\tfor (var i = 0; i < itemAnswersSet.length; i++) {\r\n\t\t\t\tvar currentRow = itemAnswersSet[i];\r\n\t\t\t\tvar sPath = \"\";\r\n\t\t\t\tif (ppmData.ItemQuesAnswer.length === 0) {\r\n\t\t\t\t\t//create\r\n\t\t\t\t\tif (currentRow.Answered === \"X\") {\r\n\t\t\t\t\t\tmParameters = {\r\n\t\t\t\t\t\t\t\"groupId\": \"PPM\",\r\n\t\t\t\t\t\t\t\"changeSetId\": \"PPM4\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsPath = \"/ItemQuesAnswer\";\r\n\t\t\t\t\t\toBaseModel.create(sPath, currentRow, mParameters);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentRow.Answered === \"X\") {\r\n\t\t\t\t\t\t//update\r\n\t\t\t\t\t\tmParameters = {\r\n\t\t\t\t\t\t\t\"groupId\": \"PPM\",\r\n\t\t\t\t\t\t\t\"changeSetId\": \"PPM5\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsPath = currentRow.__metadata.uri.substring(currentRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t\t\t\toBaseModel.update(sPath, currentRow, mParameters);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toBaseModel.submitChanges({\r\n\t\t\t\t// \"groupId\": \"PPM\",\r\n\t\t\t\t// \"changeSetId\": \"PPM\",\r\n\t\t\t\t\"success\": function(oData, response) {\r\n\t\t\t\t\tconsole.log(\"Success in Batch Update:\");\r\n\t\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PGI_UpdateprojectSuccess\", [oItem.ItemDesc]);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\tif (that.saveAction.includes(\"saveClose\")) {\r\n\t\t\t\t\t\tthat.saveAction = \"\";\r\n\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat.RefreshOnSave = true;\r\n\t\t\t\t\t\tthat.getItemInfo(pgiData.Project.RpmGuidC);\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"error\": function(params) {\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\tconsole.log(\"Error in Batch Update:\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\tupdateBatchSuccess: function(params) {\r\n\t\t\tconsole.log(\"Success in Batch Update:\");\r\n\t\t},\r\n\t\tupdateBatchError: function(params) {\r\n\t\t\tconsole.log(\"Error in Batch Update:\");\r\n\t\t},\r\n\t\t/*\r\n\t\tupdateProject: function(){\r\n\t\t\t\t// pgiData.CurrentMode === \"Edit\"\r\n\t\t\tvar that = this;\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar oRow = sap.ui.getCore().getModel(\"PPMData\").getProperty(oData.originalPath);\r\n\t\t\t\r\n\t\t\tvar aKeys = Object.keys(oRow);\r\n\t\t\tvar oItem = {};\r\n\t\t\tfor (var i = 0; i < aKeys.length; i++) {\r\n\t\t\t\toItem[aKeys[i]] = oRow[aKeys[i]];\r\n\t\t\t}\r\n\t\t\tthis.setupItemforUpdate(oItem, oData);\r\n\t\t\toItem.ItemFinancialInfoSet = this.setupFinForInsert(oData);\r\n\r\n\t\t\tvar sPath = oRow.__metadata.uri.substring(oRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\tconsole.log (\"Before Update:sPath:\" + sPath);\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\toBaseModel.update(sPath, oItem, {\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\tconsole.log(\"Success in Updating:\" + oResponse.statusCode);\r\n\t\t\t\t\t// Add a Success toast and navigate back to the Project view and refresh the data.\r\n\t\t\t\t\t// if (oResponse.statusCode !== \"204\") {\r\n\t\t\t\t\t// \toData.ErrorOrigin = \"UpdateProject\";\r\n\t\t\t\t\t// \tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oData);\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t// \t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Refresh\", {});\r\n\t\t\t\t\t// \t\tthat.getRouter().navTo(\"activities\", {\r\n\t\t\t\t\t// \t\t\tobjectId: \"Activities\"\r\n\t\t\t\t\t// \t\t}, true);\r\n\t\t\t\t\t// \t\tthat._currentAction = \"\";\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_UpdateprojectSuccess\", [oItem.ItemDesc]);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.detail\", \"refresh\", {});\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"UpdateProject\";\r\n\t\t\t\t\tconsole.log(\"Error in Updating:\" + oError);\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_UpdateprojectError\", [oItem.ItemDesc]);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t*/\r\n\t\tonValidate: function(oData) {\r\n\t\t\t// var pgiModel = this.getModel (\"PGI\");\r\n\t\t\t// var pgiData = pgiModel.getData();\r\n\t\t\tvar validateFlag = true;\r\n\t\t\tvar validateFinInfoFlag = true;\r\n\t\t\tvar ppmData = this.getModel(\"PPMData\").getData();\r\n\r\n\t\t\tif (oData.Project.PhasestatusKey === \"IM003\" && ppmData.Project.PhasestatusKey !== oData.Project.PhasestatusKey) {\r\n\t\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_PhaseStatusSetToCancel\");\r\n\t\t\t\tMessageBox.confirm(\r\n\t\t\t\t\tsMessage, {\r\n\t\t\t\t\t\t// styleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\t\tif (oAction !== sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// COmmercialization & Complete\r\n\t\t\tif (oData.Project.PhaseKey === \"DIM004\" && oData.Project.PhasestatusKey === \"IM004\" && ppmData.Project.PhasestatusKey !== oData.Project\r\n\t\t\t\t.PhasestatusKey) {\r\n\t\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_PhaseStatusSetToCommercializeComplete\");\r\n\t\t\t\tMessageBox.confirm(\r\n\t\t\t\t\tsMessage, {\r\n\t\t\t\t\t\t// styleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\t\tif (oAction !== sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (oData.ProjectFinInfo.length === 0) {\r\n\t\t\t\t//have atleast one Project fin Info\r\n\t\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_MinNumberOfHub\");\r\n\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\toData.Project.ProjectGenInfoColor = \"Negative\";\r\n\t\t\t\tvalidateFlag = false;\r\n\t\t\t} else {\r\n\t\t\t\tif (oData.CurrentMode === \"Create\") {\r\n\t\t\t\t\t// assign the lead hub to hub key in itemslist\r\n\t\t\t\t\tfor (var i = 0; i < oData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\t\tvar oRecord = oData.ProjectFinInfo[i];\r\n\t\t\t\t\t\tif (oRecord.leadHubIndicator === 1) {\r\n\t\t\t\t\t\t\toData.Project.HubKey = oRecord.HubKey;\r\n\t\t\t\t\t\t\toData.Project.CurrencyKey = oRecord.CurrencyKey;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.onCheckForDupicateHub(oData)) {\r\n\t\t\t\t\toData.Project.ProjectGenInfoColor = \"Negative\";\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tvar sMessage = \"\";\r\n\t\t\t\t// check for required\r\n\t\t\t\tif (oData.Project.ItemDesc === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_ProjectNameRequired\");\r\n\t\t\t\t\toData.Project.ValueState_ItemDesc = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_ItemDesc = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_ProjectNameRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_ItemDesc = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_ItemDesc = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.CurrentMode === \"Edit\" && oData.Project.PhaseKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_PhaseRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_PhaseKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_PhaseKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_PhaseKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_PhaseKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_PhaseKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.CurrentMode === \"Edit\" && oData.Project.PhasestatusKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_PhaseStatusRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_PhasestatusKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_PhasestatusKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_PhasestatusKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_PhasestatusKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_PhasestatusKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.InnovationKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_InnovationKeyRequired\");\r\n\t\t\t\t\t// oData.Project.ValueState_InnovationKey = \"Negative\";\r\n\t\t\t\t\t// oData.Project.ValueStateText_InnovationKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t// \t\"PGI_Error_InnovationKeyRequired\");\r\n\r\n\t\t\t\t\toData.Editable.InnovationKeyIconColor = \"Negative\";\r\n\t\t\t\t\toData.Editable.InnovationKeyIconTooltip = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_InnovationKeyRequired\");\r\n\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// oData.Project.ValueState_InnovationKey = \"Default\";\r\n\t\t\t\t\t// oData.Project.ValueStateText_InnovationKey = \"\";\r\n\t\t\t\t\toData.Editable.InnovationKeyIconColor = \"Default\";\r\n\t\t\t\t\toData.Editable.InnovationKeyIconTooltip = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if (oData.Project.ConprediffKey === \"\") {\r\n\t\t\t\t// \tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_ConprediffKeyRequired\");\r\n\t\t\t\t// \tvalidateFlag = false;\r\n\t\t\t\t// \toData.Project.ValueState_ConprediffKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t// \toData.Project.ValueStateText_ConprediffKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t// \t\t\"PGI_Error_ConprediffKeyRequired\");\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \toData.Project.ValueState_ConprediffKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t// \toData.Project.ValueStateText_ConprediffKey = \"\";\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// if (oData.Project.TobmuKey === \"\") {\r\n\t\t\t\t// \tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_TobmuKeyRequired\");\r\n\t\t\t\t// \tvalidateFlag = false;\r\n\t\t\t\t// \toData.Project.ValueState_TobmuKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t// \toData.Project.ValueStateText_TobmuKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t// \t\t\"PGI_Error_TobmuKeyRequired\");\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \toData.Project.ValueState_TobmuKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t// \toData.Project.ValueStateText_TobmuKey = \"\";\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// if (oData.Project.InnovationKey === \"\") {\r\n\t\t\t\t// \tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_InnovationKeyRequired\");\r\n\t\t\t\t// \tvalidateFlag = false;\r\n\t\t\t\t// \toData.Project.ValueState_InnovationKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t// \toData.Project.ValueStateText_InnovationKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t// \t\t\"PGI_Error_InnovationKeyRequired\");\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \toData.Project.ValueState_InnovationKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t// \toData.Project.ValueStateText_InnovationKey = \"\";\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tif (oData.Project.StarfoKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_StarfoKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_StarfoKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_StarfoKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_StarfoKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_StarfoKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_StarfoKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.MarkobjeKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_MarketingKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_MarkobjeKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_MarkobjeKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_MarketingKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_MarkobjeKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_MarkobjeKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO: psutram\r\n\t\t\t\tif (oData.Project.ProjecttypeKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_ProjecttypeKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_ProjecttypeKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_ProjecttypeKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_ProjecttypeKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_ProjecttypeKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_ProjecttypeKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.DivisionKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_DivisionKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_DivisionKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_DivisionKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_DivisionKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_DivisionKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_DivisionKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.CategoryKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_CategoryKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_CategoryKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_CategoryKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_CategoryKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_CategoryKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_CategoryKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.SubcategoryKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_SubcategoryKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_SubcategoryKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_SubcategoryKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_SubcategoryKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_SubcategoryKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_SubcategoryKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.BrandKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_BrandKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_BrandKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_BrandKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_BrandKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_BrandKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_BrandKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.SubbrandKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_SubbrandKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_SubbrandKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_SubbrandKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_SubbrandKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_SubbrandKey = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_SubbrandKey = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.ProjmanagerKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_ProjmanagerKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\t// oData.Project.ValueState_ProjmanagerKey = \"Negative\";\r\n\t\t\t\t\t// oData.Project.ValueStateText_ProjmanagerKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t// \t\"PGI_Error_ProjmanagerKeyRequired\");\r\n\t\t\t\t\toData.Editable.ProjmanagerKeyIconColor = \"Negative\";\r\n\t\t\t\t\toData.Editable.ProjmanagerKeyIconTooltip = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_ProjmanagerKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// oData.Project.ValueState_ProjmanagerKey = \"Default\";\r\n\t\t\t\t\t// oData.Project.ValueStateText_ProjmanagerKey = \"\";\r\n\t\t\t\t\toData.Editable.ProjmanagerKeyIconColor = \"Default\";\r\n\t\t\t\t\toData.Editable.ProjmanagerKeyIconTooltip = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oData.Project.FinamanagerKey === \"\") {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_FinamanagerKeyRequired\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\t// oData.Project.ValueState_FinamanagerKey = \"Negative\";\r\n\t\t\t\t\t// oData.Project.ValueStateText_FinamanagerKey = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t// \t\"PGI_Error_FinamanagerKeyRequired\");\r\n\t\t\t\t\toData.Editable.FinamanagerKeyIconColor = \"Negative\";\r\n\t\t\t\t\toData.Editable.FinamanagerKeyIconTooltip = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_FinamanagerKeyRequired\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// oData.Project.ValueState_FinamanagerKey = \"Default\";\r\n\t\t\t\t\t// oData.Project.ValueStateText_FinamanagerKey = \"\";\r\n\t\t\t\t\toData.Editable.FinamanagerKeyIconColor = \"Default\";\r\n\t\t\t\t\toData.Editable.FinamanagerKeyIconTooltip = \"\";\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO: psutram: implement Date validations\r\n\t\t\t\t// check for Dates\r\n\t\t\t\t// check for dates in past \r\n\t\t\t\t// check if rolloutdates are greater than Start Dates and lesser than Finish dates\r\n\t\t\t\tif (oData.Project.ValueState_StartDate === sap.ui.core.ValueState.Error ||\r\n\t\t\t\t\t// oData.Project.ValueState_PlannedFinish === sap.ui.core.ValueState.Error ||\r\n\t\t\t\t\toData.Project.ValueState_LaunchDate === sap.ui.core.ValueState.Error) {\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if (!validateFlag) {\r\n\t\t\t\t// \tMessageToast.show(sMessage);\r\n\t\t\t\t// \treturn validateFlag;\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// Planned Finish is earlier than Start Date\r\n\t\t\t\t/*\r\n\t\t\t\tif (oData.Project.PlannedFinish <= oData.Project.StartDate) {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_Finish_LT_Start\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_PlannedFinish = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_PlannedFinish = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_Finish_LT_Start\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_PlannedFinish = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_PlannedFinish = \"\";\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Planned Finish is earlier than Start Date\r\n\t\t\t\tif (oData.Project.LaunchDate <= oData.Project.StartDate) {\r\n\t\t\t\t\tsMessage += \"\\n\" + this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_Launch_LT_Start\");\r\n\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\toData.Project.ValueState_LaunchDate = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.Project.ValueStateText_LaunchDate = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_Launch_LT_Start\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\toData.Project.ValueState_LaunchDate = sap.ui.core.ValueState.None;\r\n\t\t\t\t\toData.Project.ValueStateText_LaunchDate = \"\";\r\n\t\t\t\t}\r\n*/\r\n\r\n\t\t\t\tvar launchDt = oData.Project.LaunchDate;\r\n\t\t\t\tvar leahHubRolloutDt;\r\n\t\t\t\tvar bvalidRolloutDt = true;\r\n\t\t\t\tfor (var i = 0; i < oData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\tif (oData.ProjectFinInfo[i].leadHubIndicator === 1) {\r\n\t\t\t\t\t\tif (oData.ProjectFinInfo[i].RolloutDate < launchDt) {\r\n\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueState_RolloutDate = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueStateText_RolloutDate = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\t\t\"PGI_Error_RolloutDt_LT_Launch\");\r\n\t\t\t\t\t\t\tbvalidRolloutDt = false;\r\n\t\t\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\t\t\t// validateFinInfoFlag = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tleahHubRolloutDt = oData.ProjectFinInfo[i].RolloutDate;\r\n\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueState_RolloutDate = sap.ui.core.ValueState.None;\r\n\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueStateText_RolloutDate = \"\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti = oData.ProjectFinInfo.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (bvalidRolloutDt) {\r\n\t\t\t\t\tfor (var i = 0; i < oData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\t\tif (oData.ProjectFinInfo[i].leadHubIndicator !== 1) {\r\n\t\t\t\t\t\t\t// if (oData.ProjectFinInfo[i].RolloutDate.toString() === \"Invalid Date\"\r\n\t\t\t\t\t\t\tif (oData.ProjectFinInfo[i].RolloutDate.toString() === \"Invalid Date\" || oData.ProjectFinInfo[i].RolloutDate === null || oData.ProjectFinInfo[\r\n\t\t\t\t\t\t\t\t\ti].RolloutDate < leahHubRolloutDt) {\r\n\t\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueState_RolloutDate = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueStateText_RolloutDate = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\t\t\t\"PGI_Error_RolloutDt_LT_Launch\");\r\n\t\t\t\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t\t\t\t\t\t// validateFinInfoFlag = false;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueState_RolloutDate = sap.ui.core.ValueState.None;\r\n\t\t\t\t\t\t\t\toData.ProjectFinInfo[i].ValueStateText_RolloutDate = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// \"{\"DP\":{\"PhaseKey\":\"DPM003\",\"PhaseDesc\":\"Develop\",\r\n\t\t\t\t// \"StatusKey\":\"IM001\",\"StatusDesc\":\"On Going\",\r\n\t\t\t\t// \"NextStatus\" :[{\"NSKey\":\"IM002\",\"NSDesc\":\"On Hold\"},\r\n\t\t\t\t// {\"NSKey\":\"IM003\",\"NSDesc\":\"Canceled\"},\r\n\t\t\t\t// {\"NSKey\":\"IM004\",\"NSDesc\":\"Complete\"}]}}\"\r\n\r\n\t\t\t\tif (!validateFlag)\r\n\t\t\t\t\toData.Project.ProjectGenInfoColor = \"Negative\";\r\n\t\t\t\telse\r\n\t\t\t\t\toData.Project.ProjectGenInfoColor = \"Default\";\r\n\r\n\t\t\t\tif (oData.Project.PhasestatusKey === \"IM001\" || oData.Project.PhasestatusKey === \"IM004\") {\r\n\t\t\t\t\tfor (var i = 0; i < oData.ProjectFinInfo.length; i++) {\r\n\r\n\t\t\t\t\t\tif (!this.validateFinInfoExists(oData.ProjectFinInfo[i])) {\r\n\t\t\t\t\t\t\tvalidateFinInfoFlag = false;\r\n\t\t\t\t\t\t\toData.Project.ProjectFinInfoColor = \"Negative\";\r\n\t\t\t\t\t\t\tif (validateFlag) {\r\n\t\t\t\t\t\t\t\t//setfocus onto fininfo tab\r\n\t\t\t\t\t\t\t\tvar oIconTab = this.byId(\"__bar0\");\r\n\t\t\t\t\t\t\t\tvar oFinInfoTab = this.byId(\"_fin\");\r\n\t\t\t\t\t\t\t\toIconTab.setSelectedItem(oFinInfoTab);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalidateFlag = false;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (validateFinInfoFlag) {\r\n\t\t\t\toData.Project.ProjectFinInfoColor = \"Default\";\r\n\t\t\t}\r\n\t\t\t// else\r\n\t\t\t// {\r\n\t\t\t// \toData.Project.ProjectFinInfoColor = \"Negative\";\r\n\t\t\t// \tif (validateFlag)\r\n\t\t\t// \t{\r\n\t\t\t// \t\t//setfocus onto fininfo tab\r\n\t\t\t// \t\tvar oIconTab = this.byId(\"__bar0\");\r\n\t\t\t// \t\tvar oFinInfoTab = this.byId(\"_fin\");\r\n\t\t\t// \t\toIconTab.setSelectedItem(oFinInfoTab);\r\n\t\t\t// \t}\r\n\t\t\t// \tvalidateFlag = false;\r\n\t\t\t// }\r\n\r\n\t\t\treturn validateFlag;\r\n\t\t},\r\n\t\tvalidateFinInfoExists: function(oRecord) {\r\n\t\t\t// called only if status is OnGoing and higher\r\n\t\t\tvar validateFlag = true;\r\n\t\t\t// if (parseFloat(oRecord.MarketShare) === 0) {\r\n\t\t\t// \toRecord.ValueState_FinMarket = sap.ui.core.ValueState.Error;\r\n\t\t\t// \toRecord.ValueStateText_FinMarket = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t// \t\t\"PFI_Error_FinInfo_required\");\r\n\r\n\t\t\t// \tvalidateFlag = false;\r\n\t\t\t// } else {\r\n\t\t\t// \toRecord.ValueState_FinMarket = sap.ui.core.ValueState.None;\r\n\t\t\t// \toRecord.ValueStateText_FinMarket = \"\";\r\n\t\t\t// }\r\n\r\n\t\t\tif (parseFloat(oRecord.Margin) === 0) {\r\n\t\t\t\toRecord.ValueState_Margin = sap.ui.core.ValueState.Error;\r\n\t\t\t\toRecord.ValueStateText_Margin = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\"PFI_Error_FinInfo_required\");\r\n\t\t\t\tvalidateFlag = false;\r\n\t\t\t} else {\r\n\t\t\t\toRecord.ValueState_Margin = sap.ui.core.ValueState.None;\r\n\t\t\t\toRecord.ValueStateText_Margin = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t//+ INBHD02\r\n\t\t\t// if (parseFloat(oRecord.NetSales) === 0) {\r\n\t\t\tif (parseFloat(oRecord.NetSalesEdit) === 0) {\r\n\t\t\t\t//- INBHD02\t\t\t\t\r\n\t\t\t\toRecord.ValueState_NetSales = sap.ui.core.ValueState.Error;\r\n\t\t\t\toRecord.ValueStateText_NetSales = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\"PFI_Error_FinInfo_required\");\r\n\t\t\t\tvalidateFlag = false;\r\n\t\t\t} else {\r\n\t\t\t\toRecord.ValueState_NetSales = sap.ui.core.ValueState.None;\r\n\t\t\t\toRecord.ValueStateText_NetSales = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// if (parseFloat(oRecord.Incremental) === 0) {\r\n\t\t\t// \toRecord.ValueState_Incremental = sap.ui.core.ValueState.Error;\r\n\t\t\t// \toRecord.ValueStateText_Incremental = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t// \t\t\"PFI_Error_FinInfo_required\");\r\n\t\t\t// \t\t\t\t\t\tvalidateFlag = false;\r\n\t\t\t// } else {\r\n\t\t\t// \toRecord.ValueState_Incremental = sap.ui.core.ValueState.None;\r\n\t\t\t// \toRecord.ValueStateText_Incremental = \"\";\r\n\t\t\t// }\r\n\r\n\t\t\tif (parseFloat(oRecord.IncrementalNetSales) === 0) {\r\n\t\t\t\toRecord.ValueState_IncrementalNetSales = sap.ui.core.ValueState.Error;\r\n\t\t\t\toRecord.ValueStateText_IncrementalNetSales = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\"PFI_Error_FinInfo_required\");\r\n\t\t\t\tvalidateFlag = false;\r\n\t\t\t} else {\r\n\t\t\t\toRecord.ValueState_IncrementalNetSales = sap.ui.core.ValueState.None;\r\n\t\t\t\toRecord.ValueStateText_IncrementalNetSales = \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn validateFlag;\r\n\t\t},\r\n\r\n\t\thandleDateChange: function(oEvent) {\r\n\t\t\t// var oDP = oEvent.oSource;\r\n\t\t\tvar oDP = oEvent.getSource();\r\n\t\t\tvar sValue = oEvent.getParameter(\"value\");\r\n\t\t\tvar bValid = oEvent.getParameter(\"valid\");\r\n\t\t\t//this._iEvent++;\r\n\r\n\t\t\tif (bValid) {\r\n\t\t\t\toDP.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\t\tif (oDP.getId().match(\"LaunchDt\")) {\r\n\t\t\t\t\t//psutram7\r\n\t\t\t\t\t// this.setLeadHubRolloutDate ();\t\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"setLeadHubRolloutDate\", {});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pgiData = this.getModel(\"PGI\").getData();\r\n\t\t\t\tif (oEvent.getSource().getId().includes(\"Launch\") && pgiData.CurrentMode === \"Edit\") {\r\n\t\t\t\t\tvar sMessage = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_LaunchDate_Changed\");\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\toDP.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tsetLeadHubRolloutDate: function(oEvent) {\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar oData = this.getModel(\"PGI\").getData();\r\n\r\n\t\t\tvar launchDt = oData.Project.LaunchDate;\r\n\r\n\t\t\tfor (var i = 0; i < oData.ProjectFinInfo.length; i++) {\r\n\t\t\t\tif (oData.ProjectFinInfo[i].leadHubIndicator === 1) {\r\n\t\t\t\t\toData.ProjectFinInfo[i].RolloutDate = launchDt;\r\n\t\t\t\t}\r\n\t\t\t\tif (oData.ProjectFinInfo[i].RolloutDate < launchDt) {\r\n\t\t\t\t\toData.ProjectFinInfo[i].ValueState_RolloutDate = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\toData.ProjectFinInfo[i].ValueStateText_RolloutDate = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\r\n\t\t\t\t\t\t\"PGI_Error_RolloutDt_LT_Launch\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tonCheckForDupicateHub: function(oData) {\r\n\t\t\t//ToDO: psutram\r\n\t\t\tfor (var i = 0; i < oData.ProjectFinInfo.length; i++) {\r\n\t\t\t\tvar oRecord = oData.ProjectFinInfo[i];\r\n\t\t\t\tif (oRecord.HubKey === \"\") {\r\n\t\t\t\t\tvar sMessage = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_HubRequired\");\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var j = i + 1; j < oData.ProjectFinInfo.length; j++) {\r\n\t\t\t\t\tif (oRecord.HubKey === oData.ProjectFinInfo[j].HubKey) {\r\n\t\t\t\t\t\t// oData.ProjectFinInfo[j].HubKey = \"\";\r\n\r\n\t\t\t\t\t\tvar sMessage = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"PGI_Error_DuplicateHub\");\r\n\t\t\t\t\t\t// oRecord[\"FC_ValueState_StartDt\"] = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\t\toData.ProjectFinInfo[j].ValueState_HubKey = sap.ui.core.ValueState.Error;\r\n\t\t\t\t\t\toData.ProjectFinInfo[j].ValueStateText_HubKey = sMessage;\r\n\t\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonSave: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.saveAction = oEvent.getSource().getId();\r\n\t\t\tconsole.log(\"Save Action:\" + this.saveAction);\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\r\n\t\t\tvar oData = this.getModel(\"PGI\").getData();\r\n\t\t\tif (this.onValidate(oData)) {\r\n\t\t\t\t// oModel.refresh(false);\r\n\t\t\t\tif (oData.CurrentMode === \"Create\") {\r\n\t\t\t\t\tthis.createProject();\r\n\t\t\t\t} else if (oData.CurrentMode === \"Edit\") {\r\n\t\t\t\t\tthis.updateProjectBatch();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toModel.refresh(false);\r\n\r\n\t\t},\r\n\t\t// onSaveClose: function(oEvent) {\r\n\r\n\t\t// },\r\n\t\t_checkIfBatchRequestSucceeded: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\tvar aRequests = oEvent.getParameters().requests;\r\n\t\t\tvar oRequest;\r\n\t\t\tif (oParams.success) {\r\n\t\t\t\tif (aRequests) {\r\n\t\t\t\t\tfor (var i = 0; i < aRequests.length; i++) {\r\n\t\t\t\t\t\toRequest = oEvent.getParameters().requests[i];\r\n\t\t\t\t\t\tif (!oRequest.success) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCancel: function() {\r\n\t\t\t// check if the model has been changed\r\n\t\t\tvar pgiData = this.getModel(\"PGI\").getData();\r\n\t\t\tvar dataChanged = false;\r\n\t\t\tif (pgiData.CurrentMode === \"Display\") {\r\n\t\t\t\tthis._navBack();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdataChanged = this.checkForChanges(pgiData);\r\n\t\t\t// if (pgiData.CurrentMode === \"Edit\")\r\n\t\t\t// {\r\n\t\t\t// }\r\n\t\t\tif (dataChanged) {\r\n\t\t\t\tthis._showConfirmQuitChanges();\r\n\t\t\t} else {\r\n\t\t\t\tthis._navBack();\r\n\t\t\t}\r\n\t\t\t// if (this.getModel().hasPendingChanges()) {\r\n\t\t\t// \t// get user confirmation first\r\n\t\t\t// \tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t// } else {\r\n\t\t\t// \tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t// \t// cancel without confirmation\r\n\t\t\t// \tthis._navBack();\r\n\t\t\t// }\r\n\t\t},\r\n\t\tcheckForChanges: function(pgiData) {\r\n\t\t\tvar ppmData = this.getModel(\"PGI\").getData();\r\n\t\t\tvar orgRecord = {};\r\n\t\t\tif (pgiData.CurrentMode === \"Edit\") {\r\n\t\t\t\torgRecord = ppmData.Project;\r\n\t\t\t}\r\n\t\t\tvar modRecord = pgiData.Project;\r\n\r\n\t\t\tif (pgiData.CurrentMode === \"Edit\") {\r\n\t\t\t\tvar fields = [\"ItemDesc\", \"BrandKey\", \"CategoryKey\", \"CurrencyKey\", \"DivisionKey\", \"FinamanagerKey\", \"HubKey\",\r\n\t\t\t\t\t\"InnovationKey\", \"ItemtypeKey\", \"PhaseKey\", \"PhasestatusKey\", \"ProjecttypeKey\", \"ProjmanagerKey\", \"StarfoKey\", \"SubbrandKey\",\r\n\t\t\t\t\t\"SubcategoryKey\", \"PlannedFinish\", \"StartDate\", \"LaunchDate\"\r\n\t\t\t\t];\r\n\r\n\t\t\t\tfor (var i = 0; i < fields.length; i++) {\r\n\t\t\t\t\tif (orgRecord[fields[i]] !== modRecord[fields[i]])\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else if (pgiData.CurrentMode === \"Create\") {\r\n\t\t\t\tvar fields = [\"ItemDesc\", \"BrandKey\", \"CategoryKey\", \"CurrencyKey\", \"DivisionKey\", \"FinamanagerKey\", \"HubKey\",\r\n\t\t\t\t\t\"InnovationKey\", \"ItemtypeKey\", \"PhaseKey\", \"PhasestatusKey\", \"ProjecttypeKey\", \"ProjmanagerKey\", \"StarfoKey\", \"SubbrandKey\",\r\n\t\t\t\t\t\"SubcategoryKey\"\r\n\t\t\t\t];\r\n\t\t\t\tfor (var i = 0; i < fields.length; i++) {\r\n\t\t\t\t\tif (orgRecord[fields[i]] !== \"\")\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\tvar currentRow = pgiData.ProjectFinInfo[i];\r\n\t\t\t\tif (currentRow.mode === \"Add\" || currentRow.mode === \"Delete\")\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tif (this.checkForFinChanges(currentRow, ppmData))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal functions\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Details page\r\n\t\t * @private\r\n\t\t */\r\n\t\t_navBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\t\t\tthis.saveAction = \"\";\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent(),\r\n\t\t\t\toModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\t// that.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\t// oModel.resetChanges();\r\n\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\tgetPhases: function() {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar ppmData = sap.ui.getCore().getModel(\"PPMData\").getData();\r\n\t\t\tif (!ppmData || !ppmData.VHPhases) {\r\n\t\t\t\tvar sPath = \"/VHPhases\";\r\n\t\t\t\tvar oExclude = {};\r\n\t\t\t\tvar oFilters = [];\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + sPath);\r\n\t\t\t\t\t\tthat.setPhases(that, oDataIn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + sPath + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetPhases: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tppmData.VHPhases = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetMarketingObjective: function() {\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar ppmData = sap.ui.getCore().getModel(\"PPMData\").getData();\r\n\t\t\tif (!ppmData || !ppmData.VHMarketing) {\r\n\t\t\t\tvar sPath = \"/VHMarketing\";\r\n\t\t\t\t// TODO: psutram comment the next line and uncoment  the rest of the line\r\n\t\t\t\tthis.setMarketingObjective(this, null);\r\n\t\t\t\t// var oExclude = {};\r\n\t\t\t\t// var oFilters = [];\r\n\t\t\t\t// var that = this;\r\n\t\t\t\t// oModel.read(sPath, {\r\n\t\t\t\t// \tasync: true,\r\n\t\t\t\t// \tfilters: oFilters,\r\n\t\t\t\t// \tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t// \t\tconsole.log(\"Success in reading\" + sPath);\r\n\t\t\t\t// \t\tthat.setMarketingObjective(that, oDataIn);\r\n\t\t\t\t// \t},\r\n\t\t\t\t// \terror: function(oError) {\r\n\t\t\t\t// \t\tconsole.error(\"Error in reading:\" + sPath + \": + oError\");\r\n\t\t\t\t// \t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t// \t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t// \t}\r\n\t\t\t\t// });\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tsetMarketingObjective: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\t// TODO: psutram uncomment the next line and remove the hard coded values\r\n\t\t\t// ppmData.VHMarketing = oDataIn.results;\r\n\r\n\t\t\tvar marketing = [{\r\n\t\t\t\t\"Key\": \"0001\",\r\n\t\t\t\t\"Description\": \"Penetration\"\r\n\t\t\t}, {\r\n\t\t\t\t\"Key\": \"0002\",\r\n\t\t\t\t\"Description\": \"Loyalty\"\r\n\t\t\t}, {\r\n\t\t\t\t\"Key\": \"0003\",\r\n\t\t\t\t\"Description\": \"Consumption\"\r\n\t\t\t}];\r\n\t\t\tppmData.VHMarketing = marketing;\r\n\r\n\t\t\toModel.refresh(false);\r\n\r\n\t\t},\r\n\t\tgetTechnology: function() {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar ppmData = sap.ui.getCore().getModel(\"PPMData\").getData();\r\n\t\t\tif (!ppmData || !ppmData.VHTechnology) {\r\n\t\t\t\tvar sPath = \"/VHTechnology\";\r\n\t\t\t\tvar oExclude = {};\r\n\t\t\t\tvar oFilters = [];\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + sPath);\r\n\t\t\t\t\t\tthat.setTechnology(that, oDataIn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + sPath + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tsetTechnology: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tppmData.VHTechnology = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\r\n\t\t},\r\n\t\tgetCurrencies: function() {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar ppmData = sap.ui.getCore().getModel(\"PPMData\").getData();\r\n\t\t\tif (!ppmData || !ppmData.VHCurrency) {\r\n\t\t\t\tvar sPath = \"/VHCurrencies\";\r\n\t\t\t\tvar oExclude = {};\r\n\t\t\t\tvar oFilters = [];\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + sPath);\r\n\t\t\t\t\t\tthat.setCurrencies(that, oDataIn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + sPath + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCurrencies: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tppmData.VHCurrency = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetCategories: function() {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar ppmData = sap.ui.getCore().getModel(\"PPMData\").getData();\r\n\t\t\tif (!ppmData || !ppmData.VHCategories) {\r\n\t\t\t\tvar sPath = \"/VHCategories\";\r\n\t\t\t\tvar oExclude = {};\r\n\t\t\t\tvar oFilters = [];\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + sPath);\r\n\t\t\t\t\t\tthat.setCategoriesData(that, oDataIn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + sPath + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCategoriesData: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tppmData.VHCategories = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\r\n\t\tgetDivisions: function() {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tvar ppmData = sap.ui.getCore().getModel(\"PPMData\").getData();\r\n\t\t\tif (!ppmData || !ppmData.VHDivisions) {\r\n\t\t\t\tvar sPath = \"/VHDivisions\";\r\n\t\t\t\tvar oExclude = {};\r\n\t\t\t\tvar oFilters = [];\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + sPath);\r\n\t\t\t\t\t\tthat.setDivisionsData(that, oDataIn);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + sPath + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetDivisionsData: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tppmData.VHDivisions = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tonChangeFinHub: function(oEvent) {\r\n\t\t\tvar sChanged = oEvent.getSource().getId();\r\n\t\t\tif (!oEvent.getParameters().selectedItem) {\r\n\t\t\t\toEvent.getSource().setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\toEvent.getSource().setValueState(sap.ui.core.ValueState.None);\r\n\t\t\t}\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar sPath = oEvent.getSource().getBindingContext(\"PGI\").getPath();\r\n\t\t\tvar oRowData = pgiModel.getProperty(sPath);\r\n\r\n\t\t\tif (parseFloat(oRowData.SerialNo) === 1) {\r\n\t\t\t\tpgiData.Project.HubKey = oRowData.HubKey;\r\n\t\t\t}\r\n// INBHD02\r\n\t\t\tvar count = pgiData.ProjectFinCount - 1;\r\n\t\t\tvar ProjectFinInfo = pgiData.ProjectFinInfo[count];\r\n\t\t\tif (count === 0) {\r\n\t\t\t\tthis.addFinHub(oEvent);\r\n\t\t\t} else if (ProjectFinInfo.HubKey !== '') {\r\n\t\t\t\tthis.addFinHub(oEvent);\r\n\t\t\t}\r\n// INBHD02\r\n\t\t},\r\n\t\tdeleteFinInfoRow: function(oEvent) {\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar sPath = oEvent.getSource().getBindingContext(\"PGI\").getPath();\r\n\t\t\tvar oRowData = pgiModel.getProperty(sPath);\r\n\t\t\tif (oRowData.rowMode === \"Edit\") {\r\n\t\t\t\toRowData.rowMode = \"Delete\";\r\n\t\t\t\tvar aFilters = [];\r\n\t\t\t\tvar oFilter = new sap.ui.model.Filter(\"rowMode\", sap.ui.model.FilterOperator.NE, \"Delete\");\r\n\t\t\t\taFilters.push(oFilter);\r\n\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"FinItemsList\");\r\n\t\t\t\toTable.getBinding(\"rows\").filter(aFilters);\r\n\t\t\t} else {\r\n\t\t\t\tvar i = parseFloat(sPath.substr(sPath.lastIndexOf(\"/\") + 1));\r\n\t\t\t\tpgiData.ProjectFinInfo.splice(i, 1);\r\n\t\t\t\t// pgiData.ProjectFinInfo.pop(oRowData);\r\n\t\t\t}\r\n\t\t\tpgiData.ProjectFinCount = pgiData.ProjectFinInfo.length;\r\n\t\t\t// sap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"updateFinInfoRowCount\", {});\r\n\t\t\tvar that = this;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tthat.updateFinInfoRowCount();\r\n\t\t\t}, 200);\r\n\t\t\tpgiModel.refresh(false);\r\n\r\n\t\t},\r\n\t\tupdateFinInfoRowCount: function() {\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"FinItemsList\");\r\n\t\t\t// pgiData.ProjectFinCount = oTable._getRowCount();\r\n\t\t\tpgiData.ProjectFinCount = oTable._getTotalRowCount();\t//upgrade\t\t\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t},\r\n\t\tonDataChange: function(oEvent) {\r\n\t\t\t// var oField = oEvent.getSource();\r\n\t\t\t// // var sCurrentValue = oEvent.getParameters().value;\r\n\t\t\t// var oRecord = this.getModel(\"PGI\").getProperty(oField.getParent().getBindingContext(\"PGI\").sPath);\r\n\t\t\t// oRecord[oField.getBindingInfo(\"valueState\").binding.getPath()] = sap.ui.core.ValueState.None;\r\n\t\t\t// oRecord[oField.getBindingInfo(\"valueStateText\").binding.getPath()] = \"\";\r\n\r\n\t\t\t// this.getModel(\"PGI\").refresh(false);\r\n\t\t},\r\n\t\tonHeaderChange: function(oEvent) {\r\n\t\t\tconsole.log(\"ProjectDetails: onHeaderChange\");\r\n\t\t\tvar oField = oEvent.getSource();\r\n\t\t\tvar sCurrentValue = oEvent.getParameters().value;\r\n\t\t\tif (oField.getId().includes(\"Freeze\")) {\r\n\t\t\t\tsCurrentValue = sCurrentValue.replace(\"%\", \"\");\r\n\t\t\t}\r\n\t\t\tsCurrentValue = sCurrentValue.replace(\" \", \"\");\r\n\t\t\t// var oRecord = this.getModel(\"PGI\").getProperty(\"/OnScreenParent\");\r\n\t\t\t// psutram27\r\n\t\t\t// var finFragmentId = this.getView().createId(\"fin\");\r\n\t\t\t// var oTable = sap.ui.core.Fragment.byId(finFragmentId, \"lineItemsList\");\r\n\t\t\t// var selectedRow = oTable.getSelectedIndex ();\r\n\t\t\t// var sPath = oTable.getContextByIndex(oTable.getSelectedIndex ()).getPath();\r\n\t\t\t// var oRecord = JSON.parse(JSON.stringify(this.getModel(\"PGI\").getProperty(sPath)));\r\n\r\n\t\t\tvar bNumber = /^-*[0-9,\\.]+$/.test(sCurrentValue);\r\n\t\t\tif (sCurrentValue !== \"\" && !bNumber) {\r\n\t\t\t\t// PSW Start Correction for Budget entry errored on non numeric value June 13th 2016\t\r\n\t\t\t\toField.setValue(\"0\");\r\n\t\t\t\t// PSW End Correction for Budget entry errored on non numeric value June 13th 2016\r\n\r\n\t\t\t\t// oRecord[oField.getBindingInfo(\"valueState\").binding.getPath()] = sap.ui.core.ValueState.Error;\r\n\t\t\t\t// oRecord[oField.getBindingInfo(\"valueState\").binding.getPath()] = sap.ui.core.ValueState.Warning;\r\n\t\t\t\t// oRecord[oField.getBindingInfo(\"valueStateText\").binding.getPath()] = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle()\r\n\t\t\t\t// .getText(\"PFI_InvalidEntry\", [sCurrentValue]);\r\n\t\t\t}\r\n\t\t\t// else {\r\n\t\t\t// \t// if (this._validateInput(oRecord)) {\r\n\t\t\t// \t\t// oRecord[oField.getBindingInfo(\"valueState\").binding.getPath()] = sap.ui.core.ValueState.None;\r\n\t\t\t// \t\t// oRecord[oField.getBindingInfo(\"valueStateText\").binding.getPath()] = \"\";\r\n\t\t\t// \t// }\r\n\t\t\t// }\r\n\t\t\tthis.getModel(\"PGI\").refresh(false);\r\n\t\t},\r\n\t\tonFinInfoEnter: function(oEvent) {\r\n\t\t\tvar params = oEvent.getParameters();\r\n\t\t\tconsole.log(\"onEnter event\");\r\n\t\t\tvar oField = oEvent.getSource();\r\n\t\t\tvar sId = oField.getId();\r\n\t\t\t// if (sId.includes(\"PFinNetSales\"))\r\n\t\t\t// {\r\n\t\t\t// \tvar oCustomInteger = sap.ui.core.format.NumberFormat.getIntegerInstance({\r\n\t\t\t// \t\t\t\t\t\t\t\tgroupingEnabled: true,\r\n\t\t\t// \t\t\t\t\t\t\t\tgroupingSeparator: \",\"\r\n\t\t\t// \t\t\t\t\t\t\t});\r\n\t\t\t// \tvar org = \toField.getValue();\r\n\t\t\t// \tconsole.log(\"Formatted value:\" + oCustomInteger.format(org));\r\n\t\t\t// \toField.setValue(oCustomInteger.format(org));\r\n\t\t\t// }\r\n\t\t\tif (oField.getValue() === \"\") {\r\n\t\t\t\toField.setValue(0);\r\n\t\t\t}\r\n\t\t\tvar bFocusSet = false;\r\n\t\t\tvar aCells = oField.getParent().getCells();\r\n\t\t\tvar sFieldName = oField.getBindingInfo(\"value\").parts[0].path;\r\n\t\t\tvar bFieldFound = false;\r\n\t\t\tvar firstEditableField = -1;\r\n\t\t\tfor (var i = 0; i < aCells.length; i++) {\r\n\t\t\t\tif (firstEditableField === -1 && aCells[i].getMetadata()._sClassName === \"sap.m.Input\" &&\r\n\t\t\t\t\taCells[i].getBindingInfo(\"editable\")) {\r\n\t\t\t\t\tfirstEditableField = i;\r\n\t\t\t\t}\r\n\t\t\t\tif (bFieldFound) {\r\n\t\t\t\t\tif (aCells[i].getMetadata()._sClassName === \"sap.m.Input\" &&\r\n\t\t\t\t\t\taCells[i].getBindingInfo(\"editable\") &&\r\n\t\t\t\t\t\tthis.getModel(\"PGI\").getProperty(aCells[i].getBindingInfo(\"editable\").parts[0].path)) {\r\n\t\t\t\t\t\taCells[i].focus();\r\n\t\t\t\t\t\tbFocusSet = true;\r\n\t\t\t\t\t\ti = aCells.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFieldFound && aCells[i].getMetadata()._sClassName === \"sap.m.Input\" &&\r\n\t\t\t\t\taCells[i].getBindingInfo(\"value\") &&\r\n\t\t\t\t\taCells[i].getBindingInfo(\"value\").parts[0] &&\r\n\t\t\t\t\taCells[i].getBindingInfo(\"value\").parts[0].path ===\r\n\t\t\t\t\tsFieldName) {\r\n\t\t\t\t\tbFieldFound = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!bFocusSet) {\r\n\t\t\t\tvar oRow = oField.getParent();\r\n\t\t\t\tvar oTable = oRow.getParent();\r\n\t\t\t\tvar aRows = oTable.getRows();\r\n\t\t\t\tvar selectedIndex = oTable.getSelectedIndex();\r\n\t\t\t\tconsole.log(\"Selected Index:\" + selectedIndex);\r\n\t\t\t\tvar iRowIndex = 0;\r\n\t\t\t\t// for (var j = 0; j < aRows.length; j++) {\r\n\t\t\t\t// \tif (aRows[j] === oRow) {\r\n\t\t\t\t// \t\tiRowIndex = j + 1;\r\n\t\t\t\t// \t\tj = aRows.length;\r\n\t\t\t\t// \t}\r\n\t\t\t\t// }\r\n\t\t\t\tif (iRowIndex < aRows.length) {\r\n\t\t\t\t\tvar k = selectedIndex + 1;\r\n\t\t\t\t\tvar aRowCells = aRows[k].getCells();\r\n\t\t\t\t\taRowCells[firstEditableField].focus();\r\n\t\t\t\t\tbFocusSet = true;\r\n\t\t\t\t}\r\n\t\t\t\t// for (var k = iRowIndex; k < aRows.length; k++) {\r\n\t\t\t\t// \tif (this.getModel(\"Project\").getProperty(aRows[k].getBindingContext(\"Project\").sPath).ItemType !== \"PT\") {\r\n\t\t\t\t// \t\tvar aRowCells = aRows[k].getCells();\r\n\t\t\t\t// \t\tfor (var l = 0; l < aRowCells.length; l++) {\r\n\t\t\t\t// \t\t\tif (aRowCells[l].getMetadata()._sClassName === \"sap.m.Input\" &&\r\n\t\t\t\t// \t\t\t\taRowCells[l].getBindingInfo(\"editable\") &&\r\n\t\t\t\t// \t\t\t\tthis.getModel(\"Project\").getProperty(aRows[k].getBindingContext(\"Project\").sPath)[aRowCells[l].getBindingInfo(\"editable\").parts[\r\n\t\t\t\t// \t\t\t\t\t0].path]) {\r\n\t\t\t\t// \t\t\t\taRowCells[l].focus();\r\n\t\t\t\t// \t\t\t\tl = aRowCells.length;\r\n\t\t\t\t// \t\t\t\tbFocusSet = true;\r\n\t\t\t\t// \t\t\t}\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t\tif (bFocusSet) {\r\n\t\t\t\t// \t\t\tk = aRows.length;\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t}\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tonProjectTypeQuestionnaire: function(oEvent) {\r\n\t\t\tQuestionnaireUtil.displayQuestionnaire(this);\r\n\t\t},\r\n\t\tonChange: function(oEvent) {\r\n\t\t\tvar sChanged = oEvent.getSource().getId();\r\n\t\t\tvar aParts = sChanged.split(\"--\");\r\n\t\t\tsChanged = aParts[aParts.length - 1];\r\n\t\t\tvar pgiData = this.getModel(\"PGI\").getData();\r\n\r\n\t\t\tvar bValid = oEvent.getParameter(\"valid\");\r\n\r\n\t\t\tif (!oEvent.getParameters().selectedItem) {\r\n\t\t\t\toEvent.getSource().setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t} else {\r\n\t\t\t\toEvent.getSource().setValueState(sap.ui.core.ValueState.None);\r\n\t\t\t}\r\n\r\n\t\t\tif (sChanged === \"Category\") {\r\n\t\t\t\tpgiData.Project.SubcategoryKey = \"\";\r\n\t\t\t\tpgiData.Project.BrandKey = \"\";\r\n\t\t\t\tpgiData.Project.SubbrandKey = \"\";\r\n\r\n\t\t\t\tthis.getSubCategories();\r\n\t\t\t} else if (sChanged === \"SubCategory\") {\r\n\t\t\t\tpgiData.Project.BrandKey = \"\";\r\n\t\t\t\tpgiData.Project.SubbrandKey = \"\";\r\n\t\t\t\tthis.getBrands();\r\n\t\t\t} else if (sChanged === \"Brand\") {\r\n\t\t\t\tpgiData.Project.SubbrandKey = \"\";\r\n\t\t\t\tthis.getSubBrands();\r\n\t\t\t} else if (sChanged === \"PGIDivision\") {\r\n\t\t\t\tthis.getHubs();\r\n\t\t\t\tvar pgiData = this.getModel(\"PGI\").getData();\r\n\t\t\t\tif (pgiData && pgiData.ProjectFinInfo && pgiData.ProjectFinInfo.length === 0) {\r\n\t\t\t\t\tthis.addFinHub(oEvent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\t\tpgiData.ProjectFinInfo[i].DivisionKey = pgiData.Project.DivisionKey;\r\n\t\t\t\t\t\tpgiData.ProjectFinInfo[i].HubKey = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (sChanged === \"Phase\") {\r\n\t\t\t\tpgiData.Project.PhasestatusKey = \"\";\r\n\t\t\t\tthis.getVHStatus();\r\n\t\t\t\t// } else if (sChanged === \"Technology\" || sChanged === \"ConsPers\") {\r\n\t\t\t\t// \tthis.getInnovationType();\r\n\t\t\t} else if (sChanged === \"Status\") {\r\n\t\t\t\tif (pgiData.Project.PhasestatusKey === \"IM001\" || pgiData.Project.PhasestatusKey === \"IM004\") {\r\n\t\t\t\t\tthis.configRequiredColumnFinInfo(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.configRequiredColumnFinInfo(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"PGI\").refresh(false);\r\n\t\t},\r\n\t\tgetVHStatus: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar phaseKey = pgiData.Project.PhaseKey;\r\n\t\t\tif (phaseKey === \"\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ppmData.VHStatus) {\r\n\t\t\t\tppmData.VHStatus = {};\r\n\t\t\t}\r\n\t\t\t// if (ppmData.VHStatus[phaseKey])\r\n\t\t\t// {\r\n\t\t\t// \tppmData.VHStatus.Current = ppmData.VHStatus[phaseKey];\t\r\n\t\t\t// \toModel.refresh (false);\r\n\t\t\t// }\r\n\t\t\t// else\r\n\t\t\t// {\r\n\t\t\tvar filters = [];\r\n\t\t\tfilters.push(new sap.ui.model.Filter(\"RpmGuidC\", sap.ui.model.FilterOperator.EQ, pgiData.Project.RpmGuidC));\r\n\t\t\tfilters.push(new sap.ui.model.Filter(\"PhaseId\", sap.ui.model.FilterOperator.EQ, phaseKey));\r\n\t\t\t// filters.push(new sap.ui.model.Filter( \"RpmGuid\",sap.ui.model.FilterOperator.EQ, \"binary\\'\" + pgiData.Project.RpmGuid + \"\\'\"));\r\n\t\t\tvar sPath = \"/VHStatus\";\r\n\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", true); // Start Spinner\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: filters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setVHStatus(that, oDataIn, phaseKey);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"VHStatus\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// }\r\n\r\n\t\t},\r\n\t\tsetVHStatus: function(oContext, oDataIn, phaseKey) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tif (!ppmData.VHStatus) {\r\n\t\t\t\tppmData.VHStatus = {};\r\n\t\t\t\tppmData.VHStatus.Current = {};\r\n\t\t\t}\r\n\t\t\tppmData.VHStatus.Current = oDataIn.results;\r\n\t\t\tppmData.VHStatus[phaseKey] = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetSubBrands: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar categoryKey = pgiData.Project.CategoryKey;\r\n\t\t\tvar subCategoryKey = pgiData.Project.SubcategoryKey;\r\n\t\t\tvar brandKey = pgiData.Project.BrandKey;\r\n\r\n\t\t\tif (!ppmData.VHSubBrands) {\r\n\t\t\t\tppmData.VHSubBrands = {};\r\n\t\t\t}\r\n\t\t\tif (ppmData.VHSubBrands[brandKey]) {\r\n\t\t\t\tppmData.VHSubBrands.Current = ppmData.VHSubBrands[brandKey];\r\n\t\t\t\toModel.refresh(false);\r\n\t\t\t}\r\n\t\t\tvar filters = [];\r\n\t\t\tfilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"Category\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: categoryKey\r\n\t\t\t}));\r\n\t\t\tfilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"PSubCategory\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: subCategoryKey\r\n\t\t\t}));\r\n\t\t\tfilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"Brand\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: brandKey\r\n\t\t\t}));\r\n\t\t\tvar sPath = \"/VHSubbrands\";\r\n\t\t\tthis.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", true); // Start Spinner\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: filters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setSubbrands(that, oDataIn, brandKey);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"Subbrands\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetSubbrands: function(oContext, oDataIn, brandKey) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tif (!ppmData.VHSubBrands) {\r\n\t\t\t\tppmData.VHSubBrands = {};\r\n\t\t\t\tppmData.VHSubBrands.Current = {};\r\n\t\t\t}\r\n\t\t\tppmData.VHSubBrands.Current = oDataIn.results;\r\n\t\t\tppmData.VHSubBrands[brandKey] = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetBrands: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar categoryKey = pgiData.Project.CategoryKey;\r\n\t\t\tvar subCategoryKey = pgiData.Project.SubcategoryKey;\r\n\r\n\t\t\tif (!ppmData.VHBrands) {\r\n\t\t\t\tppmData.VHBrands = {};\r\n\t\t\t}\r\n\t\t\tif (ppmData.VHBrands[subCategoryKey]) {\r\n\t\t\t\tppmData.VHBrands.Current = ppmData.VHBrands[subCategoryKey];\r\n\t\t\t\toModel.refresh(false);\r\n\t\t\t}\r\n\t\t\tvar filters = [];\r\n\t\t\tfilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"Category\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: categoryKey\r\n\t\t\t}));\r\n\t\t\tfilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"PSubCategory\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: subCategoryKey\r\n\t\t\t}));\r\n\t\t\tvar sPath = \"/VHBrands\";\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: filters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setBrands(that, oDataIn, subCategoryKey);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"Brands\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetBrands: function(oContext, oDataIn, subCategoryKey) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tif (!ppmData.VHBrands) {\r\n\t\t\t\tppmData.VHBrands = {};\r\n\t\t\t\tppmData.VHBrands.Current = {};\r\n\t\t\t}\r\n\t\t\tppmData.VHBrands.Current = oDataIn.results;\r\n\t\t\tppmData.VHBrands[subCategoryKey] = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetSubCategories: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar categoryKey = pgiData.Project.CategoryKey;\r\n\t\t\tif (!ppmData.VHSubCategories) {\r\n\t\t\t\tppmData.VHSubCategories = {};\r\n\t\t\t}\r\n\t\t\tif (ppmData.VHSubCategories[categoryKey]) {\r\n\t\t\t\tppmData.VHSubCategories.Current = ppmData.VHSubCategories[categoryKey];\r\n\t\t\t\toModel.refresh(false);\r\n\t\t\t} else {\r\n\t\t\t\tvar oFilters = [];\r\n\r\n\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Category\",\r\n\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\tvalue1: categoryKey\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tvar sPath = \"/VHSubcategories\";\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tthat.setSubcategories(that, oDataIn, categoryKey);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\toError.ErrorOrigin = \"Brands\";\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetSubcategories: function(oContext, oDataIn, categoryKey) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tif (!ppmData.VHSubCategories) {\r\n\t\t\t\tppmData.VHSubCategories = {};\r\n\t\t\t\tppmData.VHSubCategories.Current = {};\r\n\t\t\t}\r\n\t\t\tppmData.VHSubCategories.Current = oDataIn.results;\r\n\t\t\tppmData.VHSubCategories[categoryKey] = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetVHConsumerDiffs: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tif (!ppmData.VHConsumerDiffs) {\r\n\t\t\t\tppmData.VHConsumerDiffs = {};\r\n\t\t\t}\r\n\t\t\tvar oFilters = [];\r\n\r\n\t\t\tvar sPath = \"/VHConsumerDiffs\";\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setVHConsumerDiffs(that, oDataIn);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"Brands\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetVHConsumerDiffs: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tif (!ppmData.VHConsumerDiffs) {\r\n\t\t\t\tppmData.VHConsumerDiffs = {};\r\n\t\t\t}\r\n\t\t\tppmData.VHConsumerDiffs = oDataIn.results;\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tgetHubs: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar divisionKey = pgiData.Project.DivisionKey;\r\n\t\t\tif (!ppmData.VHHubs) {\r\n\t\t\t\tppmData.VHHubs = {};\r\n\t\t\t}\r\n\t\t\tif (ppmData.VHHubs[divisionKey]) {\r\n\t\t\t\tppmData.VHHubs.Current = ppmData.VHHubs[divisionKey];\r\n\t\t\t\toModel.refresh(false);\r\n\t\t\t} else {\r\n\t\t\t\tvar oFilters = [];\r\n\r\n\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"DivisionKey\",\r\n\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\tvalue1: divisionKey\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tvar sPath = \"/VHHubs\";\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tthat.setHubs(that, oDataIn, divisionKey);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\toError.ErrorOrigin = \"Brands\";\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetInnovationType: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\t// var conprediff = pgiData.Project.ConprediffKey;\r\n\t\t\t// var tobmuKey = pgiData.Project.TobmuKey;\r\n\t\t\t// if (conprediff !== undefined && tobmuKey !== undefined && conprediff !== \"\" && tobmuKey !== \"\") {\r\n\t\t\t// \tvar oFilters = [];\r\n\t\t\t// \toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t// \t\tpath: \"ZimConprediff\",\r\n\t\t\t// \t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t// \t\tvalue1: conprediff\r\n\t\t\t// \t}));\r\n\t\t\t// \toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t// \t\tpath: \"ZimTobmu\",\r\n\t\t\t// \t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t// \t\tvalue1: tobmuKey\r\n\t\t\t// \t}));\r\n\r\n\t\t\tvar sPath = \"/VHInnovationTypes\";\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\t// filters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t// that.setHubs(that, oDataIn, divisionKey);\r\n\t\t\t\t\tif (oDataIn.results.length > 0) {\r\n\t\t\t\t\t\tpgiData.Project.InnovationKey = oDataIn.results[0].Key;\r\n\t\t\t\t\t\tpgiData.Project.InnovationTypeDesc = oDataIn.results[0].InnovationDesc;\r\n\t\t\t\t\t\tppmData.VHInnovationTypes = oDataIn.results;\r\n\r\n\t\t\t\t\t\toModel.refresh(false);\r\n\t\t\t\t\t\tpgiModel.refresh(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"Brands\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// }\r\n\t\t},\r\n\t\tsetHubs: function(oContext, oDataIn, divisionKey) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tif (!ppmData.VHHubs) {\r\n\t\t\t\tppmData.VHHubs = {};\r\n\t\t\t\tppmData.VHHubs.Current = {};\r\n\t\t\t}\r\n\r\n\t\t\tppmData.VHHubs.Current = IPMUtils.filterHubData(oDataIn.results);\r\n\t\t\tppmData.VHHubs[divisionKey] = IPMUtils.filterHubData(oDataIn.results);\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tonPMgrSuggest: function(event) {\r\n\t\t\tvar value = event.getParameter(\"suggestValue\");\r\n\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tif (event.getSource().getId().match(\"PMgr\")) {\r\n\t\t\t\tpgiData.Project.ProjmanagerKey = \"\";\r\n\t\t\t} else if (event.getSource().getId().match(\"FMgr\")) {\r\n\t\t\t\tpgiData.Project.FinamanagerKey = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tvar oFilters = [];\r\n\r\n\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"Key\",\r\n\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\tvalue1: value\r\n\t\t\t}));\r\n\r\n\t\t\tvar sPath = \"/VHManagers\";\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tfilters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tppmData.VHManagers = oDataIn.results;\r\n\t\t\t\t\toModel.refresh(false);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"VHManagers\";\r\n\t\t\t\t\t// sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tonPMgrSearch: function(oEvent) {\r\n\t\t\t// if (oEvent.getSource())\r\n\t\t\tconsole.log(\"onPMgrSearch\");\r\n\t\t\tvar oSource = oEvent.getSource();\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oComboBox;\r\n\t\t\tif (oSource.getId().includes(\"PMgrSearch\")) {\r\n\t\t\t\toComboBox = sap.ui.core.Fragment.byId(fragmentId, \"PMgr\");\r\n\t\t\t} else if (oSource.getId().includes(\"FMgrSearch\")) {\r\n\t\t\t\toComboBox = sap.ui.core.Fragment.byId(fragmentId, \"FMgr\");\r\n\t\t\t}\r\n\t\t\tMgrUtils.onMgrShow(oEvent, this.getModel(\"PPMData\"), this.getModel(\"i18n\"), oComboBox);\r\n\t\t},\r\n\t\tonSuggestSelected: function(oEvent) {\r\n\t\t\tvar params = oEvent.getParameters();\r\n\t\t\tvar mgrKey = params.selectedItem.getKey();\r\n\t\t\tvar text = params.selectedItem.getText();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tif (oEvent.getSource().getId().match(\"PMgr\")) {\r\n\t\t\t\tpgiData.Project.ProjmanagerKey = mgrKey;\r\n\t\t\t} else if (oEvent.getSource().getId().match(\"FMgr\")) {\r\n\t\t\t\tpgiData.Project.FinamanagerKey = mgrKey;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tgetItemInfo: function(rpmGuidC) {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tvar oFilters = [];\r\n\t\t\t// sPath = \"/Initiatives(RpmGuid=binary\\'\" + rpmGuid + \"\\',IniGuid=binary\\'\" +  iniGuid + \"\\')/ItemListSet\";\r\n\t\t\t// ItemsList(RpmGuid=binary'005056A2473E1ED787F0E49EE7F477CA',RpmGuidC='')/ItemFinancialInfoSet\r\n\t\t\t// ?$expand=ItemFinancialInfoSet\r\n\t\t\t// var sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')/ItemFinancialInfoSet\";\r\n\t\t\t// var sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')?$expand=ItemFinancialInfoSet\";\r\n\t\t\t// var sPath = \"/ItemsList(RpmGuid=binary'005056A2473E1EE78C9C5258B15C6CD6',RpmGuidC='')?$expand=ItemFinancialInfoSet\";\r\n\r\n\t\t\t// Expand included in the URL Parameters  \r\n\t\t\tvar sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')\";\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"$expand\": \"ItemFinancialInfoSet,ItemQuesAnswerSet\"\r\n\t\t\t\t},\r\n\t\t\t\t// filters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setItemInfo(that, oDataIn);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"ItemFinancialInfoSet\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\tsetItemInfo: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tppmData.Project = oDataIn;\r\n\t\t\tthis.setItemFinInfo(oContext, oDataIn.ItemFinancialInfoSet);\r\n\t\t\tthis.setItemQuesAnswer(oContext, oDataIn.ItemQuesAnswerSet);\r\n\t\t\t// ppmData.ProjectFinInfo = oDataIn.ItemFinancialInfoSet.results;\r\n\t\t\t// ppmData.ProjectFinInfo = oDataIn.ItemQuesAnswerSet.results;\r\n\r\n\t\t\tthis.configureStatusOptions(ppmData);\r\n\r\n\t\t\tvar sProject = JSON.stringify(oDataIn) + \"\";\r\n\t\t\t//pgiData.Project = JSON.parse(sProject);\r\n\t\t\tpgiData.Project = Object.assign({}, oDataIn);\r\n\t\t\tif (pgiData.Project.ZimGrid === \"1\") {\r\n\t\t\t\tpgiData.Project.Grid = true;\r\n\t\t\t} else {\r\n\t\t\t\tpgiData.Project.Grid = false;\r\n\t\t\t}\r\n\t\t\tpgiData.Project.StartDate = new Date(DateUtils.getSystemAdjISODate_fromDate(oDataIn.StartDate));\r\n\r\n\t\t\tpgiData.Project.LaunchDate = new Date(DateUtils.getSystemAdjISODate_fromDate(oDataIn.LaunchDate));\r\n\t\t\t// pgiData.Project.LaunchDate = oDataIn.LaunchDate;\r\n\t\t\t// pgiData.Project.PlannedFinish = new Date (DateUtils.getSystemAdjISODate_fromDate (oDataIn.PlannedFinish));\r\n\t\t\tpgiData.Project.CreatedDate = new Date(DateUtils.getSystemAdjISODate_fromDate(oDataIn.CreatedDate));\r\n\t\t\tpgiData.Project.LastupdateDate = new Date(DateUtils.getSystemAdjISODate_fromDate(oDataIn.LastupdateDate));\r\n\r\n\t\t\tconsole.log(\"Retrieve: Start Date:\" + pgiData.Project.StartDate);\r\n\t\t\tconsole.log(\"Retrieve: Planned Finish:\" + pgiData.Project.PlannedFinish);\r\n\t\t\tconsole.log(\"Retrieve: Launch Date:\" + pgiData.Project.LaunchDate);\r\n\r\n\t\t\t// pgiData.Project.BrandKey = ppmData.Project.BrandKey.substring(1);\r\n\t\t\t// pgiData.ProjectFinInfo = JSON.parse(JSON.stringify(ppmData.ProjectFinInfo));\r\n\r\n\t\t\t// ppmData.ProjectFinInfo = oDataIn.results;\r\n\t\t\t// pgiData.ProjectFinInfo = JSON.parse(JSON.stringify(oDataIn.results));\r\n\t\t\t/*\r\n\t\t\tpgiData.ProjectFinInfo = ppmData.ProjectFinInfo;\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\t\t\t// pgiData.ProjectFinInfo[i].SerialNo = i;\r\n\t\t\t\t\t\t\t// ppmData.ProjectFinInfo[i].SerialNo = i;\r\n\t\t\t\t\t\t\tif (pgiData.ProjectFinInfo[i].CurrencyKey === \"\") {\r\n\t\t\t\t\t\t\t\tpgiData.ProjectFinInfo[i].CurrencyKey = this.getOwnerComponent().getModel(\"P13n_Configuration\").getProperty(\r\n\t\t\t\t\t\t\t\t\t\"/CurrencySettings/Currency\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar oRecord = pgiData.ProjectFinInfo[i];\r\n\t\t\t\t\t\t\tfor (var j = 0; j < ppmData.ProjectFinInfo.length; j++) {\r\n\t\t\t\t\t\t\t\tif (oRecord.HubKey === ppmData.ProjectFinInfo[j].HubKey) {\r\n\t\t\t\t\t\t\t\t\toRecord.RolloutDate = ppmData.ProjectFinInfo[j].RolloutDate;\r\n\t\t\t\t\t\t\t\t\tj = ppmData.ProjectFinInfo.length;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.addFinInfoAttributes(oRecord, pgiData.Project.HubKey);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar aSorter = [];\r\n\t\t\t\t\t\taSorter.push(new sap.ui.model.Sorter(\"leadHubIndicator\", false, false));\r\n\r\n\t\t\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"FinItemsList\");\r\n\t\t\t\t\t\tvar oBinding = oTable.getBinding(\"rows\");\r\n\t\t\t\t\t\toBinding.sort(aSorter);\r\n\r\n\t\t\t\t\t\tvar finFragmentId = this.getView().createId(\"fin\");\r\n\t\t\t\t\t\toTable = sap.ui.core.Fragment.byId(finFragmentId, \"lineItemsList\");\r\n\t\t\t\t\t\toBinding = oTable.getBinding(\"rows\");\r\n\t\t\t\t\t\toBinding.sort(aSorter);\r\n\t\t\t\t\t\tpgiData.Visible.FinInfoRowCount = pgiData.ProjectFinInfo.length;\r\n\t\t\t\t\t\t*/\r\n\r\n\t\t\t// if commercialize & complete then Status field is not editable any more\r\n\t\t\tif (pgiData.Project.PhaseKey === \"DIM004\" && pgiData.Project.PhasestatusKey === \"IM004\") {\r\n\t\t\t\tpgiData.Editable.Status = false;\r\n\t\t\t}\r\n\r\n\t\t\toModel.refresh(false);\r\n\t\t\tpgiModel.refresh(false);\r\n\r\n\t\t\tif (this.RefreshOnSave) {\r\n\t\t\t\tthis.RefreshOnSave = false;\r\n\t\t\t\t// this.getItemFinInfo();\r\n\t\t\t\t// this.getItemQuesAnswer();\r\n\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t} else {\r\n\t\t\t\tthis.configScreen();\r\n\t\t\t\t// this.getItemFinInfo();\r\n\t\t\t\t// this.getItemQuesAnswer();\r\n\r\n\t\t\t\tthis.getVHStatus();\r\n\t\t\t\tthis.getHubs();\r\n\t\t\t\tthis.getSubCategories();\r\n\t\t\t\tthis.getBrands();\r\n\t\t\t\tthis.getSubBrands();\r\n\t\t\t\t// this.getItemAttachments();\r\n\t\t\t\t// this.getItemChangeLogs(true);\r\n\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tonTabSelect: function(oEvent) {\r\n\t\t\tvar tabItem = oEvent.getParameter(\"item\");\r\n\t\t\tvar tabKey = oEvent.getParameter(\"key\");\r\n\t\t\ttabItem = tabItem + \"\";\r\n\r\n\t\t\tif (tabItem.includes(\"_attachment\")) {\r\n\t\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\t\tif (!pgiData.AttachmentLoaded) {\r\n\t\t\t\t\tpgiData.AttachmentLoaded = true;\r\n\t\t\t\t\tthis.getItemAttachments();\r\n\t\t\t\t}\r\n\t\t\t} else if (tabItem.includes(\"_logs\")) {\r\n\t\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\t\tif (!pgiData.LogsLoaded) {\r\n\t\t\t\t\tpgiData.LogsLoaded = true;\r\n\t\t\t\t\tthis.getItemChangeLogs(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetItemQuesAnswer: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tvar oFilters = [];\r\n\t\t\tvar rpmGuidC = pgiData.Project.RpmGuidC;\r\n\t\t\tvar sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')/ItemQuesAnswerSet\";\r\n\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\t// urlParameters: {\r\n\t\t\t\t// \t\"$expand\": \"ItemFinancialInfoSet\"\r\n\t\t\t\t// },\r\n\t\t\t\t// filters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setItemQuesAnswer(that, oDataIn);\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"ItemFinancialInfoSet\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\tsetItemQuesAnswer: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tppmData.ItemQuesAnswer = oDataIn.results;\r\n\t\t\tpgiData.ItemQuesAnswer = oDataIn.results;\r\n\r\n\t\t\t// this.orgFinInfo = JSON.stringify(ppmData.ProjectFinInfo);\r\n\t\t},\r\n\t\tgetItemFinInfo: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tvar oFilters = [];\r\n\t\t\tvar rpmGuidC = pgiData.Project.RpmGuidC;\r\n\t\t\t// sPath = \"/Initiatives(RpmGuid=binary\\'\" + rpmGuid + \"\\',IniGuid=binary\\'\" +  iniGuid + \"\\')/ItemListSet\";\r\n\t\t\t// ItemsList(RpmGuid=binary'005056A2473E1ED787F0E49EE7F477CA',RpmGuidC='')/ItemFinancialInfoSet\r\n\t\t\t// ?$expand=ItemFinancialInfoSet\r\n\t\t\tvar sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')/ItemFinancialInfoSet\";\r\n\t\t\t// var sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')?$expand=ItemFinancialInfoSet\";\r\n\t\t\t// var sPath = \"/ItemsList(RpmGuid=binary'005056A2473E1EE78C9C5258B15C6CD6',RpmGuidC='')?$expand=ItemFinancialInfoSet\";\r\n\r\n\t\t\t// Expand included in the URL Parameters  \r\n\t\t\t// var sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\\')\";\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\t// urlParameters: {\r\n\t\t\t\t// \t\"$expand\": \"ItemFinancialInfoSet\"\r\n\t\t\t\t// },\r\n\t\t\t\t// filters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setItemFinInfo(that, oDataIn);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"ItemFinancialInfoSet\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\tsetItemFinInfo: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tppmData.ProjectFinInfo = oDataIn.results;\r\n\t\t\tpgiData.ProjectFinInfo = oDataIn.results;\r\n\r\n\t\t\tthis.orgFinInfo = JSON.stringify(ppmData.ProjectFinInfo);\r\n\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t// pgiData.ProjectFinInfo[i].SerialNo = i;\r\n\t\t\t\t// ppmData.ProjectFinInfo[i].SerialNo = i;\r\n\t\t\t\tif (pgiData.ProjectFinInfo[i].CurrencyKey === \"\") {\r\n\t\t\t\t\tpgiData.ProjectFinInfo[i].CurrencyKey = this.getOwnerComponent().getModel(\"P13n_Configuration\").getProperty(\r\n\t\t\t\t\t\t\"/CurrencySettings/Currency\");\r\n\t\t\t\t}\r\n\t\t\t\tvar oRecord = pgiData.ProjectFinInfo[i];\r\n\r\n\t\t\t\toRecord.NetSalesEdit = [];\r\n\t\t\t\toRecord.EstimatedSpendAPEdit = [];\r\n\t\t\t\toRecord.EstimatedSpendInsightsEdit = [];\r\n\t\t\t\toRecord.EstimatedDesignEdit = [];\r\n\t\t\t\toRecord.NetSalesEdit[0] = parseFloat(oRecord.NetSales);\r\n\t\t\t\toRecord.EstimatedSpendAPEdit[0] = parseFloat(oRecord.EstimatedSpendAP);\r\n\t\t\t\toRecord.EstimatedSpendInsightsEdit[0] = parseFloat(oRecord.EstimatedSpendInsights);\r\n\t\t\t\toRecord.EstimatedDesignEdit[0] = parseFloat(oRecord.EstimatedDesign);\r\n\r\n\t\t\t\t// oRecord.RolloutDate = new Date (DateUtils.getSystemAdjISODate_fromDate (ppmData.ProjectFinInfo[j].RolloutDate));\r\n\t\t\t\tfor (var j = 0; j < ppmData.ProjectFinInfo.length; j++) {\r\n\t\t\t\t\tif (oRecord.HubKey === ppmData.ProjectFinInfo[j].HubKey) {\r\n\t\t\t\t\t\t// new Date (DateUtils.getSystemAdjISODate_fromDate (currentRow.RolloutDate));\r\n\t\t\t\t\t\toRecord.RolloutDate = new Date(DateUtils.getSystemAdjISODate_fromDate(ppmData.ProjectFinInfo[j].RolloutDate));\r\n\t\t\t\t\t\tconsole.log(\"Retrieve Fin Info Rollout Date:\" + i + \":\" + oRecord.RolloutDate);\r\n\t\t\t\t\t\tj = ppmData.ProjectFinInfo.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.addFinInfoAttributes(oRecord, pgiData.Project.HubKey);\r\n\t\t\t\tif (pgiData.CurrentMode === \"Edit\") {\r\n\t\t\t\t\tvar finDeleteable = this.checkFinInfoDeletable(oRecord);\r\n\t\t\t\t\toRecord.PGHub = finDeleteable;\r\n\t\t\t\t\toRecord.PGRolloutDtEnabled = true;\r\n\t\t\t\t\tif (oRecord.leadHubIndicator !== 1) {\r\n\t\t\t\t\t\toRecord.PFinDel = finDeleteable;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar aSorter = [];\r\n\t\t\taSorter.push(new sap.ui.model.Sorter(\"leadHubIndicator\", false, false));\r\n\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"FinItemsList\");\r\n\t\t\tvar oBinding = oTable.getBinding(\"rows\");\r\n\t\t\toBinding.sort(aSorter);\r\n\r\n\t\t\tvar finFragmentId = this.getView().createId(\"fin\");\r\n\t\t\toTable = sap.ui.core.Fragment.byId(finFragmentId, \"lineItemsList\");\r\n\t\t\toBinding = oTable.getBinding(\"rows\");\r\n\t\t\toBinding.sort(aSorter);\r\n\t\t\tpgiData.Visible.FinInfoRowCount = pgiData.ProjectFinInfo.length;\r\n\r\n\t\t\toModel.refresh(false);\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"updateFinInfoRowCount\", {});\r\n\t\t},\r\n\t\tconfigureStatusOptions: function(ppmData) {\r\n\t\t\t// \t\t\tvar temp = JSON.parse(pgiData.Project.ConfigStatus)\r\n\t\t\t// Object {DP: Object}DP: ObjectNextStatus: Array(2)0: ObjectNSDesc: \"On Going\"NSKey: \"IM001\"__proto__: Object1: ObjectNSDesc: \"Canceled\"NSKey: \"IM003\"__proto__: Objectlength: 2__proto__: Array(0)PhaseDesc: \"Exploration\"PhaseKey: \"DPM001\"StatusDesc: \"In Draft\"StatusKey: \"IM000\"__proto__: Object__proto__: Object\r\n\t\t\t// temp.DP\r\n\t\t\t// Object {PhaseKey: \"DPM001\", PhaseDesc: \"Exploration\", StatusKey: \"IM000\", StatusDesc: \"In Draft\", NextStatus: Array(2)}\r\n\t\t\t// temp.DP.NextStatus\r\n\t\t\t// (2) [Object, Object]\r\n\t\t\t// temp.DP.NextStatus[0]\r\n\t\t\t// Object {NSKey: \"IM001\", NSDesc: \"On Going\"}\r\n\t\t\t// temp.DP.NextStatus[1]\r\n\t\t\t// Object {NSKey: \"IM003\", NSDesc: \"Canceled\"}\r\n\t\t\tif (ppmData.Project.ConfigStatus === \"\") {\r\n\t\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\t\tpgiData.Editable.Status = false;\r\n\t\t\t\tpgiModel.refresh(false);\r\n\t\t\t} else {\r\n\t\t\t\tvar config = JSON.parse(ppmData.Project.ConfigStatus);\r\n\t\t\t\tvar nextStatus = config.DP.NextStatus;\r\n\t\t\t\tvar options = [];\r\n\t\t\t\tvar statusOption = {\r\n\t\t\t\t\t\"Key\": ppmData.Project.PhasestatusKey,\r\n\t\t\t\t\t\"Description\": ppmData.Project.PhasestatusDesc\r\n\t\t\t\t};\r\n\r\n\t\t\t\toptions.push(statusOption);\r\n\t\t\t\tif (nextStatus) {\r\n\t\t\t\t\tfor (var i = 0; i < nextStatus.length; i++) {\r\n\t\t\t\t\t\tvar statusOption = {\r\n\t\t\t\t\t\t\t\"Key\": nextStatus[i].NSKey,\r\n\t\t\t\t\t\t\t\"Description\": nextStatus[i].NSDesc\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\toptions.push(statusOption);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!ppmData.VHStatus) {\r\n\t\t\t\t\tppmData.VHStatus = {};\r\n\t\t\t\t}\r\n\t\t\t\tppmData.VHStatus.CurrentOptions = options;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\taddFinInfoAttributes: function(oRecord, leadHub) {\r\n\t\t\toRecord.rowMode = \"Edit\";\r\n\t\t\toRecord.PFinDivision = false;\r\n\t\t\toRecord.PFinHub = false;\r\n\t\t\toRecord.PGRolloutDtEnabled = false;\r\n\t\t\toRecord.ValueState_HubKey = sap.ui.core.ValueState.None;\r\n\t\t\toRecord.ValueStateText_HubKey = \"\";\r\n\t\t\toRecord.PGHub = false;\r\n\t\t\t// oRecord.PGHub = this.checkFinInfoDeletable(oRecord);\r\n\r\n\t\t\t// if (oRecord.HubKey === leadHub) {\r\n\t\t\tif (parseFloat(oRecord.SerialNo) === 1) {\r\n\t\t\t\toRecord.leadHubIndicator = 1;\r\n\t\t\t\toRecord.LeadHubText = \"Lead Hub:\";\r\n\t\t\t\toRecord.PFinDel = false;\r\n\t\t\t} else {\r\n\t\t\t\toRecord.leadHubIndicator = 100;\r\n\t\t\t\toRecord.LeadHubText = \"\";\r\n\t\t\t\t//psutram7\r\n\t\t\t\toRecord.PFinDel = oRecord.PGHub;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckFinInfoDeletable: function(oRecord) {\r\n\t\t\t//(parseFloat(oRecord.MarketShare) === 0) && \r\n\t\t\tif ((parseFloat(oRecord.Margin) === 0) &&\r\n\t\t\t\t(parseFloat(oRecord.NetSales) === 0) && (parseFloat(oRecord.Incremental) === 0) &&\r\n\t\t\t\t(parseFloat(oRecord.IncrementalNetSales) === 0) && (parseFloat(oRecord.EstimatedSpendAP) === 0) &&\r\n\t\t\t\t(parseFloat(oRecord.EstimatedDesign) === 0) && (parseFloat(oRecord.EstimatedSpendInsights) === 0) &&\r\n\t\t\t\t(parseFloat(oRecord.EstimatedSpendGTN) === 0)) {\r\n\t\t\t\t// oRecord.PFinDel = true;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * Prepares the view for editing the selected object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onEdit: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar sPath = oData.objectPath;\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar inputData = oModel.getProperty(sPath);\r\n\t\t\tppmData.Project = {};\r\n\r\n\t\t\tppmData.Project.Input = JSON.parse(JSON.stringify(inputData));\r\n\r\n\t\t\toView.setModel(oModel, \"PPMData\");\r\n\t\t\toModel.refresh(false);\r\n\r\n\t\t\tthis.getItemInfo(inputData.RpmGuidC);\r\n\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t// this._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\r\n\r\n\t\t\tvar jsonModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar jsonData = jsonModel.getData();\r\n\r\n\t\t\tjsonModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"PGIEditTitle\", [inputData.ItemDesc]));\r\n\r\n\t\t\tjsonData.CurrentMode = oData.mode;\r\n\t\t\tjsonData.originalPath = sPath;\r\n\t\t\tjsonData.Project = {};\r\n\t\t\tjsonData.ProjectFinInfo = [];\r\n\t\t\tjsonData.Questionnaire = null;\r\n\t\t\t// jsonData.Project = JSON.parse(JSON.stringify(inputData));\r\n\t\t\t// if (jsonData.Project.ZimGrid === \"1\") {\r\n\t\t\t// \tjsonData.Project.Grid = true;\r\n\t\t\t// } else {\r\n\t\t\t// \tjsonData.Project.Grid = false;\r\n\t\t\t// }\r\n\t\t\t// jsonData.Project.StartDate = inputData.StartDate;\r\n\t\t\t// jsonData.Project.LaunchDate = inputData.LaunchDate;\r\n\t\t\t// jsonData.Project.PlannedFinish = inputData.PlannedFinish;\r\n\t\t\t// jsonData.Project.CreatedDate = inputData.CreatedDate;\r\n\t\t\t// jsonData.Project.LastupdateDate = inputData.LastupdateDate;\r\n\r\n\t\t\t// console.log(\"Brand Key:\" + jsonData.Project.BrandKey);\r\n\t\t\t// jsonData.Project.BrandKey = jsonData.Project.BrandKey.substring(1);\r\n\r\n\t\t\tjsonModel.refresh(false);\r\n\r\n\t\t\t// this.getPhases();\r\n\t\t\t// this.getVHStatus();\r\n\t\t\t// this.getVHConsumerDiffs();\r\n\t\t\t// this.getTechnology();\r\n\t\t\t// this.getInnovationType();\r\n\t\t\t// this.getDivisions();\r\n\t\t\t// this.getHubs();\r\n\r\n\t\t\t// this.getCategories();\r\n\t\t\t// this.getSubCategories();\r\n\t\t\t// this.getBrands();\r\n\t\t\t// this.getSubBrands();\r\n\r\n\t\t\t// this.getStrategicFocus ();\r\n\t\t\t// this.getCurrencies();\r\n\t\t\t//setup managers\r\n\t\t\tvar mgrList = [];\r\n\t\t\tconsole.log(\"Project Manager:\" + inputData.ProjmanagerDesc + \":\" + inputData.FinamanagerDesc);\r\n\t\t\t// inputData.ProjmanagerDesc = \"Meena\";\r\n\t\t\t// inputData.FinamanagerDesc = \"Bhavik\";\r\n\t\t\t/*\r\n\r\n\t\t\t\t\t\tif (inputData.ProjmanagerKey !== \"\") {\r\n\t\t\t\t\t\t\tvar mgr = {\r\n\t\t\t\t\t\t\t\tId: inputData.ProjmanagerKey,\r\n\t\t\t\t\t\t\t\tKey: \"\",\r\n\t\t\t\t\t\t\t\tName: inputData.ProjmanagerDesc,\r\n\t\t\t\t\t\t\t\tSelect: \"\"\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tmgrList.push(mgr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (inputData.FinamanagerKey !== \"\") {\r\n\t\t\t\t\t\t\tvar mgr = {\r\n\t\t\t\t\t\t\t\tId: inputData.FinamanagerKey,\r\n\t\t\t\t\t\t\t\tKey: \"\",\r\n\t\t\t\t\t\t\t\tName: inputData.FinamanagerDesc,\r\n\t\t\t\t\t\t\t\tSelect: \"\"\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tmgrList.push(mgr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mgrList.length > 0) {\r\n\t\t\t\t\t\t\tppmData.VHManagers = mgrList;\r\n\t\t\t\t\t\t}\r\n\t\t\t*/\r\n\t\t\tthis.getView().setModel(jsonModel, \"PGI\");\r\n\r\n\t\t\tthis.setModel(jsonModel, \"PGI\");\r\n\t\t\tjsonModel.refresh(false);\r\n\t\t\t// this.getOwnerComponent().setModel(oModel, \"PPMData\");\r\n\t\t\tconsole.log(\"finished onEdit\");\r\n\r\n\t\t},\r\n\t\tonPressEdit: function(oEvent) {\r\n\t\t\tvar jsonModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar jsonData = jsonModel.getData();\r\n\t\t\tjsonData.CurrentMode = \"Edit\";\r\n\t\t\t// this.getView().setModel (jsonModel, \"PGI\");\r\n\t\t\t// this.setModel(jsonModel, \"PGI\");\r\n\t\t\tjsonModel.refresh(false);\r\n\t\t\tthis.configScreen();\r\n\t\t},\r\n\t\tconfigRequiredColumnFinInfo: function(bRequired) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"fin\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"lineItemsList\");\r\n\t\t\tvar oColumns = oTable.getColumns();\r\n\r\n\t\t\tfor (var i = 0; i < oColumns.length; i++) {\r\n\t\t\t\tvar labelText = oColumns[i].getLabel().getText();\r\n\t\t\t\tif (labelText.includes(\"Net Sales\") || labelText.includes(\"Market Share\") ||\r\n\t\t\t\t\tlabelText.includes(\"Margin\") || labelText.includes(\"Incremental Sales\")) {\r\n\t\t\t\t\toColumns[i].getLabel().setRequired(bRequired);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tconfigRequiredColumnHubInfo: function() {\r\n\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"FinItemsList\");\r\n\t\t\tvar oColumns = oTable.getColumns();\r\n\r\n\t\t\tfor (var i = 1; i < oColumns.length; i++) {\r\n\t\t\t\tvar labelText = oColumns[i].getLabel().getText();\r\n\t\t\t\tif (labelText.includes(\"Hub\") || labelText.includes(\"Rollout\")) {\r\n\t\t\t\t\toColumns[i].getLabel().setRequired(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tconfigScreen: function() {\r\n\t\t\tvar oModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\tvar oIconTab = this.byId(\"__bar0\");\r\n\t\t\tvar oGeneralTab = this.byId(\"__filter0\");\r\n\t\t\tthis.configChangeLogsScreen();\r\n\r\n\t\t\toIconTab.setExpandable(false);\r\n\t\t\toIconTab.setSelectedItem(oGeneralTab);\r\n\r\n\t\t\tpgiData.Project.ProjectGenInfoColor = \"Default\";\r\n\t\t\tpgiData.Project.ProjectFinInfoColor = \"Default\";\r\n\t\t\tpgiData.Project.ProjectAttColor = \"Default\";\r\n\t\t\tpgiData.Project.ProjectChangeLogsColor = \"Default\";\r\n\r\n\t\t\tpgiData.Editable.InnovationKeyIconColor = \"Default\";\r\n\t\t\tpgiData.Editable.InnovationKeyIconTooltip = \"\";\r\n\t\t\tpgiData.Editable.ProjmanagerKeyIconColor = \"Default\";\r\n\t\t\tpgiData.Editable.ProjmanagerKeyIconTooltip = \"\";\r\n\t\t\tpgiData.Editable.FinamanagerKeyIconColor = \"Default\";\r\n\t\t\tpgiData.Editable.FinamanagerKeyIconTooltip = \"\";\r\n\r\n\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"_marketShare\")._oLabel.setRequired(true);\r\n\r\n\t\t\tif (pgiData.CurrentMode === \"Display\") {\r\n\t\t\t\tpgiData.AttachmentLoaded = false;\r\n\t\t\t\tpgiData.LogsLoaded = false;\r\n\r\n\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PName\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Phase\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Status\")._oLabel.setRequired(true);\r\n\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"__CP\")._oLabel.setRequired(true);\r\n\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"__technology\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"__Innovation\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Strategic\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Marketing\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PGIDivision1\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__category\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Subcategory\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Brand\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__SubBrand\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PM\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__FM\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PType\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__StartDt\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__LaunchDt\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Innovation\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tif (pgiData.Project.PhasestatusKey === \"IM001\" || pgiData.Project.PhasestatusKey === \"IM004\") {\r\n\t\t\t\t\tthis.configRequiredColumnFinInfo(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.configRequiredColumnFinInfo(false);\r\n\t\t\t\t}\r\n\t\t\t\tthis.configRequiredColumnHubInfo();\r\n\r\n\t\t\t\tpgiData.Editable.enableUpdate = false;\r\n\t\t\t\tpgiData.Editable.ProjectName = false;\r\n\t\t\t\tpgiData.Editable.PID = false;\r\n\t\t\t\tpgiData.Editable.IName = false;\r\n\t\t\t\tpgiData.Editable.IID = false;\r\n\t\t\t\tpgiData.Editable.PType = false;\r\n\t\t\t\tpgiData.Editable.Phase = false;\r\n\t\t\t\tpgiData.Editable.Status = false;\r\n\t\t\t\tpgiData.Editable.Grid = false;\r\n\t\t\t\tpgiData.Editable.PMgr = false;\r\n\t\t\t\tpgiData.Editable.FMgr = false;\r\n\t\t\t\tpgiData.Editable.ConsPers = false;\r\n\t\t\t\tpgiData.Editable.Technology = false;\r\n\t\t\t\tpgiData.Editable.Innovation = false;\r\n\t\t\t\tpgiData.Editable.Strategic = false;\r\n\t\t\t\tpgiData.Editable.Marketing = false;\r\n\r\n\t\t\t\tpgiData.Editable.Division = false;\r\n\t\t\t\tpgiData.Editable.Hub = false;\r\n\t\t\t\tpgiData.Editable.RolloutDt = false;\r\n\t\t\t\tpgiData.Editable.Category = false;\r\n\t\t\t\tpgiData.Editable.ProdCategory = false;\r\n\t\t\t\tpgiData.Editable.Brand = false;\r\n\t\t\t\tpgiData.Editable.SubBrand = false;\r\n\t\t\t\tpgiData.Editable.StartDt = false;\r\n\t\t\t\tpgiData.Editable.FinishDt = false;\r\n\t\t\t\tpgiData.Editable.LaunchDt = false;\r\n\t\t\t\tpgiData.Editable.CreateDt = false;\r\n\t\t\t\tpgiData.Editable.UpdateDt = false;\r\n\t\t\t\tpgiData.Editable.Currency = false;\r\n\r\n\t\t\t\tpgiData.Editable.FinTab = true;\r\n\t\t\t\tpgiData.Editable.AttTab = true;\r\n\t\t\t\tpgiData.Editable.LogTab = true;\r\n\r\n\t\t\t\tpgiData.Visible.ProjectName = true;\r\n\t\t\t\tpgiData.Visible.PID = true;\r\n\t\t\t\tpgiData.Visible.IName = true;\r\n\t\t\t\tpgiData.Visible.IID = true;\r\n\t\t\t\tpgiData.Visible.PType = true;\r\n\t\t\t\tpgiData.Visible.Phase = true;\r\n\t\t\t\tpgiData.Visible.Status = true;\r\n\t\t\t\tpgiData.Visible.Grid = true;\r\n\t\t\t\tpgiData.Visible.PMgr = true;\r\n\t\t\t\tpgiData.Visible.FMgr = true;\r\n\t\t\t\tpgiData.Visible.ConsPers = true;\r\n\t\t\t\tpgiData.Visible.Technology = true;\r\n\r\n\t\t\t\tpgiData.Visible.Innovation = true;\r\n\t\t\t\tpgiData.Visible.Strategic = true;\r\n\t\t\t\tpgiData.Visible.Marketing = true;\r\n\r\n\t\t\t\tpgiData.Visible.Division = true;\r\n\t\t\t\tpgiData.Visible.Hub = true;\r\n\t\t\t\tpgiData.Visible.RolloutDt = true;\r\n\t\t\t\tpgiData.Visible.Category = true;\r\n\t\t\t\tpgiData.Visible.ProdCategory = true;\r\n\t\t\t\tpgiData.Visible.Brand = true;\r\n\t\t\t\tpgiData.Visible.SubBrand = true;\r\n\t\t\t\tpgiData.Visible.StartDt = true;\r\n\t\t\t\tpgiData.Visible.FinishDt = false;\r\n\r\n\t\t\t\tpgiData.Visible.LaunchDt = true;\r\n\t\t\t\tpgiData.Visible.CreateDt = true;\r\n\t\t\t\tpgiData.Visible.UpdateDt = true;\r\n\t\t\t\tpgiData.Visible.Currency = true;\r\n\r\n\t\t\t\t// Fin Info Tab controls\r\n\t\t\t\tpgiData.Visible.PFinDivision = true;\r\n\t\t\t\tpgiData.Visible.PFinHub = true;\r\n\t\t\t\tpgiData.Visible.PFinCurrency = true;\r\n\t\t\t\tpgiData.Visible.PFIRolloutDt = true;\r\n\t\t\t\tpgiData.Visible.PFinMarketShare = true;\r\n\t\t\t\tpgiData.Visible.PFinMargin = true;\r\n\t\t\t\tpgiData.Visible.PFinNetSales = true;\r\n\t\t\t\tpgiData.Visible.PFinIncremental = true;\r\n\t\t\t\tpgiData.Visible.PFinIncrementalNetSales = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpend = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendInsight = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendGTN = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendGDP = true;\r\n\t\t\t\tpgiData.Visible.PFinAdd = false;\r\n\r\n\t\t\t\tpgiData.Editable.PFinDivision = false;\r\n\t\t\t\tpgiData.Editable.PFinHub = false;\r\n\t\t\t\tpgiData.Editable.PFinCurrency = false;\r\n\t\t\t\tpgiData.Editable.PFIRolloutDt = false;\r\n\t\t\t\tpgiData.Editable.PFinMarketShare = false;\r\n\t\t\t\tpgiData.Editable.PFinMargin = false;\r\n\t\t\t\tpgiData.Editable.PFinNetSales = false;\r\n\t\t\t\tpgiData.Editable.PFinIncremental = false;\r\n\t\t\t\tpgiData.Editable.PFinIncrementalNetSales = false;\r\n\t\t\t\tpgiData.Editable.PFinEstSpend = false;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendInsight = false;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendGTN = false;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendGDP = false;\r\n\r\n\t\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\tpgiData.ProjectFinInfo[i].PGRolloutDt = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if ConfigUser has Access.Editable as X, the Item is editable.\r\n\t\t\t\t//\"{\"Access\":{\"Editable\":\" \"}}\"\r\n\t\t\t\tvar access = JSON.parse(pgiData.Project.ConfigUser);\r\n\t\t\t\tif (access.Access.Editable === \"X\") {\r\n\t\t\t\t\tpgiData.Editable.EditButton = true;\r\n\t\t\t\t\tpgiData.Visible.EditButton = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpgiData.Editable.EditButton = false;\r\n\t\t\t\t\tpgiData.Visible.EditButton = false;\r\n\t\t\t\t}\r\n\t\t\t\tpgiData.Editable.enableUpdate = false;\r\n\t\t\t\tpgiData.Visible.enableUpdate = false;\r\n\t\t\t\tpgiData.Visible.enableSaveClose = false;\r\n\r\n\t\t\t} else if (pgiData.CurrentMode === \"Edit\") {\r\n\t\t\t\tpgiData.Editable.enableUpdate = true;\r\n\t\t\t\tpgiData.Editable.ProjectName = true;\r\n\t\t\t\tpgiData.Editable.PID = false;\r\n\t\t\t\tpgiData.Editable.IName = false;\r\n\t\t\t\tpgiData.Editable.IID = false;\r\n\t\t\t\tpgiData.Editable.PType = true;\r\n\t\t\t\tpgiData.Editable.Phase = false;\r\n\t\t\t\tpgiData.Editable.Status = true;\r\n\t\t\t\tpgiData.Editable.Grid = true;\r\n\t\t\t\tpgiData.Editable.PMgr = true;\r\n\t\t\t\tpgiData.Editable.FMgr = true;\r\n\t\t\t\tpgiData.Editable.ConsPers = true;\r\n\t\t\t\tpgiData.Editable.Technology = true;\r\n\t\t\t\tpgiData.Editable.Strategic = true;\r\n\t\t\t\tpgiData.Editable.Marketing = true;\r\n\r\n\t\t\t\tpgiData.Editable.Innovation = true;\r\n\t\t\t\tpgiData.Editable.Division = false;\r\n\t\t\t\tpgiData.Editable.Hub = true;\r\n\t\t\t\tpgiData.Editable.RolloutDt = true;\r\n\t\t\t\tpgiData.Editable.Category = true;\r\n\t\t\t\tpgiData.Editable.ProdCategory = true;\r\n\t\t\t\tpgiData.Editable.Brand = true;\r\n\t\t\t\tpgiData.Editable.SubBrand = true;\r\n\t\t\t\tpgiData.Editable.StartDt = true;\r\n\t\t\t\tpgiData.Editable.FinishDt = false;\r\n\r\n\t\t\t\tpgiData.Editable.LaunchDt = true;\r\n\t\t\t\tpgiData.Editable.CreateDt = false;\r\n\t\t\t\tpgiData.Editable.UpdateDt = false;\r\n\t\t\t\tpgiData.Editable.Currency = true;\r\n\r\n\t\t\t\tpgiData.Visible.enableUpdate = true;\r\n\t\t\t\tpgiData.Visible.enableSaveClose = true;\r\n\t\t\t\tpgiData.Visible.ProjectName = true;\r\n\t\t\t\tpgiData.Visible.PID = true;\r\n\t\t\t\tpgiData.Visible.IName = true;\r\n\t\t\t\tpgiData.Visible.IID = true;\r\n\t\t\t\tpgiData.Visible.PType = true;\r\n\t\t\t\tpgiData.Visible.Phase = true;\r\n\t\t\t\tpgiData.Visible.Status = true;\r\n\t\t\t\tpgiData.Visible.Grid = true;\r\n\t\t\t\tpgiData.Visible.PMgr = true;\r\n\t\t\t\tpgiData.Visible.FMgr = true;\r\n\t\t\t\tpgiData.Visible.ConsPers = true;\r\n\t\t\t\tpgiData.Visible.Technology = true;\r\n\r\n\t\t\t\tpgiData.Visible.Innovation = true;\r\n\t\t\t\tpgiData.Visible.Strategic = true;\r\n\t\t\t\tpgiData.Visible.Marketing = true;\r\n\r\n\t\t\t\tpgiData.Visible.Division = true;\r\n\t\t\t\tpgiData.Visible.Hub = true;\r\n\t\t\t\tpgiData.Visible.RolloutDt = true;\r\n\t\t\t\tpgiData.Visible.Category = true;\r\n\t\t\t\tpgiData.Visible.ProdCategory = true;\r\n\t\t\t\tpgiData.Visible.Brand = true;\r\n\t\t\t\tpgiData.Visible.SubBrand = true;\r\n\t\t\t\tpgiData.Visible.StartDt = true;\r\n\t\t\t\tpgiData.Visible.FinishDt = false;\r\n\r\n\t\t\t\tpgiData.Visible.LaunchDt = true;\r\n\t\t\t\tpgiData.Visible.CreateDt = true;\r\n\t\t\t\tpgiData.Visible.UpdateDt = true;\r\n\t\t\t\tpgiData.Visible.Currency = true;\r\n\r\n\t\t\t\t// Fin Info Tab controls\r\n\t\t\t\tpgiData.Visible.PFinDivision = true;\r\n\t\t\t\tpgiData.Visible.PFinHub = true;\r\n\t\t\t\tpgiData.Visible.PFinCurrency = true;\r\n\t\t\t\tpgiData.Visible.PFIRolloutDt = true;\r\n\t\t\t\tpgiData.Visible.PFinMarketShare = true;\r\n\t\t\t\tpgiData.Visible.PFinMargin = true;\r\n\t\t\t\tpgiData.Visible.PFinNetSales = true;\r\n\t\t\t\tpgiData.Visible.PFinIncremental = true;\r\n\t\t\t\tpgiData.Visible.PFinIncrementalNetSales = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpend = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendInsight = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendGTN = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendGDP = true;\r\n\t\t\t\tpgiData.Visible.PFinAdd = true;\r\n\r\n\t\t\t\tpgiData.Editable.PFinDivision = false;\r\n\t\t\t\tpgiData.Editable.PFinHub = false;\r\n\t\t\t\tpgiData.Editable.PFinCurrency = false;\r\n\t\t\t\tpgiData.Editable.PFIRolloutDt = true;\r\n\t\t\t\tpgiData.Editable.PFinMarketShare = true;\r\n\t\t\t\tpgiData.Editable.PFinMargin = true;\r\n\t\t\t\tpgiData.Editable.PFinNetSales = true;\r\n\t\t\t\tpgiData.Editable.PFinIncremental = true;\r\n\t\t\t\tpgiData.Editable.PFinIncrementalNetSales = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpend = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendInsight = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendGTN = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendGDP = true;\r\n\r\n\t\t\t\tpgiData.Editable.EditButton = false;\r\n\t\t\t\tpgiData.Visible.EditButton = false;\r\n\t\t\t\tpgiData.Editable.FinTab = true;\r\n\r\n\t\t\t\tpgiData.Editable.AttTab = true;\r\n\t\t\t\tpgiData.Editable.LogTab = true;\r\n\r\n\t\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\tpgiData.ProjectFinInfo[i].PGRolloutDtEnabled = true;\r\n\t\t\t\t\tvar finDeleteable = this.checkFinInfoDeletable(pgiData.ProjectFinInfo[i]);\r\n\t\t\t\t\tpgiData.ProjectFinInfo[i].PGHub = finDeleteable;\r\n\t\t\t\t\tif (pgiData.ProjectFinInfo[i].leadHubIndicator !== 1) {\r\n\t\t\t\t\t\tpgiData.ProjectFinInfo[i].PFinDel = finDeleteable;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (pgiData.CurrentMode === \"Create\") {\r\n\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PName\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Phase\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Status\")._oLabel.setRequired(true);\r\n\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"__CP\")._oLabel.setRequired(true);\r\n\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"__technology\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\t// sap.ui.core.Fragment.byId(fragmentId, \"__Innovation\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Strategic\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Marketing\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PGIDivision1\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__category\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Subcategory\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Brand\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__SubBrand\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PM\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__FM\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__PType\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__StartDt\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__LaunchDt\")._oLabel.setRequired(true);\r\n\t\t\t\tsap.ui.core.Fragment.byId(fragmentId, \"__Innovation\")._oLabel.setRequired(true);\r\n\r\n\t\t\t\tthis.configRequiredColumnHubInfo();\r\n\r\n\t\t\t\tpgiData.Editable.enableUpdate = true;\r\n\t\t\t\tpgiData.Editable.ProjectName = true;\r\n\t\t\t\tpgiData.Editable.PID = false;\r\n\t\t\t\tpgiData.Editable.IName = false;\r\n\t\t\t\tpgiData.Editable.IID = false;\r\n\t\t\t\tpgiData.Editable.PType = true;\r\n\t\t\t\tpgiData.Editable.Phase = true;\r\n\t\t\t\tpgiData.Editable.Status = true;\r\n\t\t\t\tpgiData.Editable.Grid = false;\r\n\t\t\t\tpgiData.Editable.PMgr = true;\r\n\t\t\t\tpgiData.Editable.FMgr = true;\r\n\t\t\t\tpgiData.Editable.ConsPers = true;\r\n\t\t\t\tpgiData.Editable.Technology = true;\r\n\t\t\t\tpgiData.Editable.Strategic = true;\r\n\t\t\t\tpgiData.Editable.Marketing = true;\r\n\r\n\t\t\t\tpgiData.Editable.Innovation = true;\r\n\t\t\t\tpgiData.Editable.Division = true;\r\n\t\t\t\tpgiData.Editable.Hub = true;\r\n\t\t\t\tpgiData.Editable.RolloutDt = true;\r\n\t\t\t\tpgiData.Editable.Category = true;\r\n\t\t\t\tpgiData.Editable.ProdCategory = true;\r\n\t\t\t\tpgiData.Editable.Brand = true;\r\n\t\t\t\tpgiData.Editable.SubBrand = true;\r\n\t\t\t\tpgiData.Editable.StartDt = true;\r\n\t\t\t\tpgiData.Editable.FinishDt = false;\r\n\r\n\t\t\t\tpgiData.Editable.LaunchDt = true;\r\n\t\t\t\tpgiData.Editable.CreateDt = false;\r\n\t\t\t\tpgiData.Editable.UpdateDt = false;\r\n\t\t\t\tpgiData.Editable.Currency = true;\r\n\r\n\t\t\t\tpgiData.Editable.EditButton = false;\r\n\t\t\t\tpgiData.Visible.EditButton = false;\r\n\r\n\t\t\t\tpgiData.Editable.FinTab = false;\r\n\t\t\t\tpgiData.Editable.AttTab = false;\r\n\t\t\t\tpgiData.Editable.LogTab = false;\r\n\r\n\t\t\t\tpgiData.Visible.enableUpdate = true;\r\n\t\t\t\tpgiData.Visible.enableSaveClose = false;\r\n\t\t\t\tpgiData.Visible.ProjectName = true;\r\n\t\t\t\tpgiData.Visible.PID = false;\r\n\t\t\t\tpgiData.Visible.IName = true;\r\n\t\t\t\tpgiData.Visible.IID = true;\r\n\t\t\t\tpgiData.Visible.PType = true;\r\n\t\t\t\tpgiData.Visible.Phase = true;\r\n\t\t\t\tpgiData.Visible.Status = false;\r\n\t\t\t\tpgiData.Visible.Grid = false;\r\n\t\t\t\tpgiData.Visible.PMgr = true;\r\n\t\t\t\tpgiData.Visible.FMgr = true;\r\n\t\t\t\tpgiData.Visible.ConsPers = true;\r\n\t\t\t\tpgiData.Visible.Technology = true;\r\n\t\t\t\tpgiData.Visible.Innovation = true;\r\n\t\t\t\tpgiData.Visible.Strategic = true;\r\n\t\t\t\tpgiData.Visible.Marketing = true;\r\n\r\n\t\t\t\tpgiData.Visible.Division = true;\r\n\t\t\t\tpgiData.Visible.Hub = true;\r\n\t\t\t\tpgiData.Visible.RolloutDt = true;\r\n\t\t\t\tpgiData.Visible.Category = true;\r\n\t\t\t\tpgiData.Visible.ProdCategory = true;\r\n\t\t\t\tpgiData.Visible.Brand = true;\r\n\t\t\t\tpgiData.Visible.SubBrand = true;\r\n\t\t\t\tpgiData.Visible.StartDt = true;\r\n\t\t\t\tpgiData.Visible.FinishDt = false;\r\n\r\n\t\t\t\tpgiData.Visible.LaunchDt = true;\r\n\t\t\t\tpgiData.Visible.CreateDt = false;\r\n\t\t\t\tpgiData.Visible.UpdateDt = false;\r\n\t\t\t\tpgiData.Visible.Currency = true;\r\n\r\n\t\t\t\tpgiData.Visible.PFinAdd = true;\r\n\t\t\t\t// fin info tab\r\n\t\t\t\tpgiData.Visible.PFinDivision = true;\r\n\t\t\t\tpgiData.Visible.PFinHub = true;\r\n\t\t\t\tpgiData.Visible.PFinCurrency = true;\r\n\t\t\t\tpgiData.Visible.PFIRolloutDt = true;\r\n\t\t\t\tpgiData.Visible.PFinMarketShare = true;\r\n\t\t\t\tpgiData.Visible.PFinMargin = true;\r\n\t\t\t\tpgiData.Visible.PFinNetSales = true;\r\n\t\t\t\tpgiData.Visible.PFinIncremental = true;\r\n\t\t\t\tpgiData.Visible.PFinIncrementalNetSales = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpend = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendInsight = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendGTN = true;\r\n\t\t\t\tpgiData.Visible.PFinEstSpendGDP = true;\r\n\t\t\t\tpgiData.Visible.PFinAdd = true;\r\n\r\n\t\t\t\tpgiData.Editable.PFinDivision = false;\r\n\t\t\t\tpgiData.Editable.PFinHub = false;\r\n\t\t\t\tpgiData.Editable.PFinCurrency = false;\r\n\t\t\t\tpgiData.Editable.PFIRolloutDt = true;\r\n\t\t\t\tpgiData.Editable.PFinMarketShare = true;\r\n\t\t\t\tpgiData.Editable.PFinMargin = true;\r\n\t\t\t\tpgiData.Editable.PFinNetSales = true;\r\n\t\t\t\tpgiData.Editable.PFinIncremental = true;\r\n\t\t\t\tpgiData.Editable.PFinIncrementalNetSales = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpend = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendInsight = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendGTN = true;\r\n\t\t\t\tpgiData.Editable.PFinEstSpendGDP = true;\r\n\r\n\t\t\t\tpgiData.Editable.EditButton = false;\r\n\t\t\t\tpgiData.Visible.EditButton = false;\r\n\t\t\t\t// pgiData.Editable.FinTab = true;\r\n\r\n\t\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\t\tpgiData.ProjectFinInfo[i].PGRolloutDt = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for creating new object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t//psutram7\r\n\t\t_onCreate: function(oEvent) {\r\n\t\t\t// if (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t// \tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t// \tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t// \tthis.getView().unbindObject();\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\r\n\t\t\t// this._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\t// this._oViewModel.setProperty(\"/mode\", \"create\");\r\n\t\t\t// var oContext = this._oODataModel.createEntry(\"initiativesSet\", {\r\n\t\t\t// \tsuccess: this._fnEntityCreated.bind(this),\r\n\t\t\t// \terror: this._fnEntityCreationFailed.bind(this)\r\n\t\t\t// });\r\n\t\t\t// this.getView().setBindingContext(oContext);\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\t// var sPath = oData.objectPath;\r\n\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\r\n\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\t// var initiativeData = oModel.getProperty (sPath);\r\n\t\t\tthis.getView().setModel(oModel, \"PPMData\");\r\n\r\n\t\t\tvar oModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\r\n\t\t\toModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"PGICreateTitle\"));\r\n\r\n\t\t\tpgiData.CurrentMode = \"Create\";\r\n\t\t\tpgiData.ProjectAttCount = 0;\r\n\t\t\tpgiData.Questionnaire = null;\r\n\t\t\t// pgiData.originalPath = sPath;\r\n\r\n\t\t\t// var newProject =\r\n\t\t\t// {\r\n\t\t\t//      IniGuidC    : initiativeData.IniGuidC,\r\n\t\t\t//      IniId  \t: initiativeData.Id,\r\n\t\t\t//      IniDesc\t: initiativeData.Name,\r\n\t\t\t//      DivisionKey: initiativeData.RegionKey\r\n\t\t\t// };\r\n\t\t\tpgiData.ProjectFinInfo = [];\r\n\t\t\tpgiData.ProjectFinCount = 0;\r\n\t\t\tpgiData.Project = {};\r\n\r\n\t\t\tpgiData.Project = {\r\n\t\t\t\t\"ItemDesc\": \"\",\r\n\t\t\t\t\"DivisionKey\": \"\",\r\n\t\t\t\t\"CategoryKey\": \"\",\r\n\t\t\t\t\"PhaseKey\": \"\",\r\n\t\t\t\t\"PhasestatusKey\": \"\",\r\n\t\t\t\t\"ConprediffKey\": \"\",\r\n\t\t\t\t\"TobmuKey\": \"\",\r\n\t\t\t\t\"StarfoKey\": \"\",\r\n\t\t\t\t\"ProjecttypeKey\": \"\",\r\n\t\t\t\t\"InnovationKey\": \"\",\r\n\t\t\t\t\"SubcategoryKey\": \"\",\r\n\t\t\t\t\"BrandKey\": \"\",\r\n\t\t\t\t\"ProjmanagerKey\": \"\",\r\n\t\t\t\t\"FinamanagerKey\": \"\",\r\n\t\t\t\t\"StartDate\": null,\r\n\t\t\t\t\"LaunchDate\": null\r\n\t\t\t};\r\n\r\n\t\t\t// this.getCategories();\r\n\t\t\t// this.getDivisions();\r\n\t\t\t// this.getPhases();\r\n\t\t\t// this.getTechnology();\r\n\t\t\t// this.getInnovationType();\r\n\t\t\t// this.getMarketingObjective();\r\n\t\t\toModel.refresh(false);\r\n\t\t\tthis.configScreen();\r\n\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if the save button can be enabled\r\n\t\t * @private\r\n\t\t */\r\n\t\t_validateSaveEnablement: function() {\r\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\r\n\t\t\tvar oControl;\r\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\r\n\t\t\t\toControl = aInputControls[m].control;\r\n\t\t\t\tif (aInputControls[m].required) {\r\n\t\t\t\t\tvar sValue = oControl.getValue();\r\n\t\t\t\t\tif (!sValue) {\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkForErrorMessages();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_checkForErrorMessages: function() {\r\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\r\n\t\t\tif (aMessages.length > 0) {\r\n\t\t\t\tvar bEnableCreate = true;\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tbEnableCreate = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnUpdateSuccess: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of creating an object\r\n\t\t *@param {object} oData the response of the save action\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreated: function(oData) {\r\n\t\t\tvar sObjectPath = this.getModel().createKey(\"initiativesSet\", oData);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\t// psutram: Todo: get the object path\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tif (oData) {\r\n\t\t\t\tif (oData.mode === \"Display\") {\r\n\t\t\t\t\tthis._onEdit(oEvent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._onCreate(oEvent);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the form fields\r\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getFormFields: function(oSimpleForm) {\r\n\t\t\tvar aControls = [];\r\n\t\t\tvar aFormContent = oSimpleForm.getContent();\r\n\t\t\tvar sControlType;\r\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\r\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\r\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\r\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\r\n\t\t\t\t\taControls.push({\r\n\t\t\t\t\t\tcontrol: aFormContent[i],\r\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aControls;\r\n\t\t},\r\n\r\n\t\taddFinHub: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\tvar ppmData = this.getModel(\"PPMData\").getData();\r\n\t\t\tvar finInfo = {};\r\n\t\t\tif (!pgiData.ProjectFinInfo || pgiData.ProjectFinInfo.length === 0) {\r\n\t\t\t\tfinInfo = {\r\n\t\t\t\t\tRpmGuid: pgiData.Project.RpmGuid,\r\n\t\t\t\t\tIniGuid: pgiData.Project.IniGuid,\r\n\t\t\t\t\tDivisionKey: pgiData.Project.DivisionKey,\r\n\t\t\t\t\tDivisionDesc: pgiData.Project.DivisionDesc,\r\n\t\t\t\t\tHubKey: \"\",\r\n\t\t\t\t\tHubDesc: \"\",\r\n\t\t\t\t\tProjectID: pgiData.Project.ProjectID,\r\n\t\t\t\t\tInitiaitiveID: pgiData.Project.InitiaitiveID,\r\n\t\t\t\t\tRolloutDate: pgiData.Project.LaunchDate,\r\n\t\t\t\t\tCurrencyKey: this.getOwnerComponent().getModel(\"P13n_Configuration\").getProperty(\"/CurrencySettings/Currency\"),\r\n\t\t\t\t\tCurrencyDesc: \"\",\r\n\t\t\t\t\t// MarketShare: 0,\r\n\t\t\t\t\tMargin: 0,\r\n\t\t\t\t\tNetSales: 0,\r\n\t\t\t\t\tIncremental: 0,\r\n\t\t\t\t\tIncrementalNetSales: 0,\r\n\t\t\t\t\tEstimatedSpendAP: 0,\r\n\t\t\t\t\tEstimatedDesign: 0,\r\n\t\t\t\t\tEstimatedSpendInsights: 0,\r\n\t\t\t\t\tEstimatedSpendGTN: 0,\r\n\t\t\t\t\t//+ INBHD02\r\n\t\t\t\t\tNetSalesEdit: [0],\r\n\t\t\t\t\tEstimatedSpendAPEdit: [0],\r\n\t\t\t\t\tEstimatedDesignEdit: [0],\r\n\t\t\t\t\tEstimatedSpendInsightsEdit: [0],\r\n\t\t\t\t\t//- INBHD02\r\n\t\t\t\t\trowMode: \"Add\",\r\n\t\t\t\t\tleadHubIndicator: 1,\r\n\t\t\t\t\tSerialNo: \"1\",\r\n\t\t\t\t\tLeadHubText: \"Lead Hub\",\r\n\t\t\t\t\tPFinDivision: false,\r\n\t\t\t\t\tPFinHub: false,\r\n\t\t\t\t\tPGRolloutDt: true,\r\n\t\t\t\t\tPGHub: true,\r\n\t\t\t\t\tPFinDel: false\r\n\t\t\t\t};\r\n\t\t\t\tpgiData.ProjectFinInfo = [];\r\n\t\t\t\tpgiData.ProjectFinInfo.push(finInfo);\r\n\t\t\t\tpgiData.Visible.FinInfoRowCount = pgiData.ProjectFinInfo.length;\r\n\t\t\t} else {\r\n\t\t\t\tvar fragmentId = this.getView().createId(\"general\");\r\n\t\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"FinItemsList\");\r\n\t\t\t\t// var rowCount = oTable._getRowCount();\r\n\t\t\t\tvar rowCount = oTable._getTotalRowCount();\t\t//upgrade\t\t\r\n\t\t\t\tif (rowCount < 6) {\r\n\t\t\t\t\tfinInfo = {\r\n\t\t\t\t\t\tRpmGuid: pgiData.Project.RpmGuid,\r\n\t\t\t\t\t\tIniGuid: pgiData.Project.IniGuid,\r\n\t\t\t\t\t\tDivisionKey: pgiData.Project.DivisionKey,\r\n\t\t\t\t\t\tDivisionDesc: pgiData.Project.DivisionDesc,\r\n\t\t\t\t\t\tHubKey: \"\",\r\n\t\t\t\t\t\tHubDesc: \"\",\r\n\t\t\t\t\t\tProjectID: pgiData.Project.ProjectID,\r\n\t\t\t\t\t\tInitiaitiveID: pgiData.Project.InitiaitiveID,\r\n\t\t\t\t\t\tRolloutDate: pgiData.ProjectFinInfo[0].RolloutDate,\r\n\t\t\t\t\t\tCurrencyKey: this.getOwnerComponent().getModel(\"P13n_Configuration\").getProperty(\"/CurrencySettings/Currency\"),\r\n\t\t\t\t\t\tCurrencyDesc: \"\",\r\n\t\t\t\t\t\t// MarketShare: 0,\r\n\t\t\t\t\t\tMargin: 0,\r\n\t\t\t\t\t\tNetSales: 0,\r\n\t\t\t\t\t\tIncremental: 0,\r\n\t\t\t\t\t\tIncrementalNetSales: 0,\r\n\t\t\t\t\t\tEstimatedSpendAP: 0,\r\n\t\t\t\t\t\tEstimatedDesign: 0,\r\n\t\t\t\t\t\tEstimatedSpendInsights: 0,\r\n\t\t\t\t\t\tEstimatedSpendGTN: 0,\r\n\t\t\t\t\t\t//+ INBHD02\r\n\t\t\t\t\t\tNetSalesEdit: [0],\r\n\t\t\t\t\t\tEstimatedSpendAPEdit: [0],\r\n\t\t\t\t\t\tEstimatedDesignEdit: [0],\r\n\t\t\t\t\t\tEstimatedSpendInsightsEdit: [0],\r\n\t\t\t\t\t\t//- INBHD02\r\n\t\t\t\t\t\trowMode: \"Add\",\r\n\t\t\t\t\t\tleadHubIndicator: 100,\r\n\t\t\t\t\t\tSerialNo: this.getNextFinInfoSerialNo(pgiData),\r\n\t\t\t\t\t\tLeadHubText: \"\",\r\n\t\t\t\t\t\tPFinDivision: false,\r\n\t\t\t\t\t\tPFinHub: false,\r\n\t\t\t\t\t\tPGRolloutDt: true,\r\n\t\t\t\t\t\tPGHub: true,\r\n\t\t\t\t\t\tPFinDel: true\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// pgiData.ProjectFinInfo = [];\r\n\t\t\t\t\tpgiData.ProjectFinInfo.push(finInfo);\r\n\t\t\t\t\tpgiData.Visible.FinInfoRowCount = pgiData.ProjectFinInfo.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_MaxNumberOfHubReached\");\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpgiData.ProjectFinCount = pgiData.ProjectFinInfo.length;\r\n\t\t\tpgiData.currentFinMode = \"Add\";\r\n\t\t\toModel.refresh(false);\r\n\r\n\t\t\t// this.configFinScreen ();\r\n\r\n\t\t\tpgiData.ProjectFin = finInfo;\r\n\t\t\toModel.refresh(false);\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"updateFinInfoRowCount\", {});\r\n\r\n\t\t},\r\n\t\tgetNextFinInfoSerialNo: function(pgiData) {\r\n\t\t\tvar maxSerialNumber = 0;\r\n\t\t\tfor (var i = 0; i < pgiData.ProjectFinInfo.length; i++) {\r\n\t\t\t\tif (parseFloat(pgiData.ProjectFinInfo[i].SerialNo) > maxSerialNumber)\r\n\t\t\t\t\tmaxSerialNumber = parseFloat(pgiData.ProjectFinInfo[i].SerialNo);\r\n\t\t\t}\r\n\t\t\tmaxSerialNumber++;\r\n\t\t\treturn maxSerialNumber + \"\";\r\n\t\t},\r\n\t\teditFinHub: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = oModel.getData();\r\n\t\t\tvar projectTable = oView.byId(\"lineItemsList\");\r\n\t\t\tvar selectedRow = projectTable.getSelectedIndex();\r\n\t\t\tif (selectedRow > -1) {\r\n\t\t\t\tvar sObjectPath = projectTable.getContextByIndex(selectedRow).sPath;\r\n\t\t\t\tvar finInfo = oModel.getProperty(sObjectPath);\r\n\t\t\t\tpgiData.ProjectFin = finInfo;\r\n\t\t\t\tfinInfo.currentMode = \"Edit\";\r\n\t\t\t\tpgiData.currentFinMode = \"Edit\";\r\n\t\t\t\toModel.refresh(false);\r\n\t\t\t\t// this.configFinScreen();\r\n\t\t\t}\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\t// Project Attachment Methods\r\n\t\tgetItemAttachments: function() {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tvar oFilters = [];\r\n\t\t\t// Todo: fix the rpmGuid to current Guid\r\n\t\t\t// var rpmGuidC = '005056A2473E1EE78DE4DA7FC048B33F';\r\n\t\t\tvar rpmGuidC = pgiData.Project.RpmGuidC;\r\n\t\t\t// Expand included in the URL Parameters  \r\n\t\t\tvar sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\" + rpmGuidC + \"\\')/ItemAttachmentsSet\";\r\n\t\t\t// sPath = \"/ItemsList(RpmGuid=binary\\'005056A2473E1EE78DE4DA7FC048B33F\\',RpmGuidC=\\'005056A2473E1EE78DE4DA7FC048B33F\\')/ItemAttachmentsSet\";\r\n\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\t// filters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setItemAttachments(that, oDataIn);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"ItemAttachmentsSet\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetItemAttachments: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tpgiData.ItemAttachmentsSet = oDataIn.results;\r\n\r\n\t\t\t// pgiData.ItemAttachmentsSet[0].__metadata.media_src\r\n\t\t\t// \"http://ngd.colgate.com:8000/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemAttachments(�cumentGuid='76A3205973021ED78EAFB96EEB5E8A78',ActFileId='IM000141')/$value\"\r\n\t\t\t// pgiData.ItemAttachments[2].children[0].__metadata.media_src\r\n\r\n\t\t\tpgiModel.refresh(false);\r\n\r\n\t\t\tthis.configProjectAttachmentData();\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t},\r\n\t\tconfigProjectAttachmentData: function() {\r\n\t\t\t// \"{\"FolderStructure\":{\"FS\":[{\"IType\":\"9109\",\"ParentKey\":\"\",\"Key\":\"01\",\"Text\":\"Marketing\"},{\"IType\":\"9109\",\"ParentKey\":\"\",\"Key\":\"02\",\"Text\":\"Legal\"},{\"IType\":\"9109\",\"ParentKey\":\"\",\"Key\":\"03\",\"Text\":\"Regulatory\"},{\"IType\":\"9109\",\"ParentKey\":\"\",\"Key\":\"04\",\"Text\":\"Design\"},{\"IType\":\"9109\",\"ParentKey\":\"\",\"Key\":\"05\",\"Text\":\"Global Tech Center\"},{\"IType\":\"9109\",\"ParentKey\":\"\",\"Key\":\"06\",\"Text\":\"Supply Chain\"}]}}\"\r\n\t\t\t//\"{\"FolderStructure\":{\"FS\":[{\"IType\":\"9109\",\"ParentKey\":\"9999\",\"Key\":\"01\",\"Text\":\"Marketing\"},{\"IType\":\"9109\",\"ParentKey\":\"9999\",\"Key\":\"02\",\"Text\":\"Legal\"},{\"IType\":\"9109\",\"ParentKey\":\"9999\",\"Key\":\"03\",\"Text\":\"Regulatory\"},{\"IType\":\"9109\",\"ParentKey\":\"9999\",\"Key\":\"04\",\"Text\":\"Design\"},{\"IType\":\"9109\",\"ParentKey\":\"9999\",\"Key\":\"05\",\"Text\":\"Global Tech Center\"},{\"IType\":\"9109\",\"ParentKey\":\"9999\",\"Key\":\"06\",\"Text\":\"Supply Chain\"}]}}\"\r\n\t\t\t// IType\r\n\t\t\t// ParentKey\r\n\t\t\t// Key\r\n\t\t\t// Text\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\t// var folderList = JSON.parse(pgiData.Project.ConfigFolderStr);\r\n\t\t\tvar folderStructure = JSON.parse(pgiData.Project.ConfigFolderStr);\r\n\t\t\tvar folderList = folderStructure.FolderStructure.FS;\r\n\t\t\tvar attachmentList = pgiData.ItemAttachmentsSet;\r\n\r\n\t\t\tfor (var i = 0; i < folderList.length; i++) {\r\n\t\t\t\tfolderList[i].nodeType = \"Folder\";\r\n\t\t\t\t// folderList[i].SubFolderName = folderList[i].Text;\r\n\t\t\t\tfolderList[i].children = this.getAttachmentsByFolder(folderList[i], attachmentList);\r\n\t\t\t\tif (folderList[i].children.length > 0) {\r\n\t\t\t\t\tfolderList[i].iconPath = \"sap-icon://folder\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfolderList[i].iconPath = \"sap-icon://folder-blank\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpgiData.ItemAttachments = folderList;\r\n\r\n\t\t\tif (pgiData.ItemAttachmentsSet) {\r\n\t\t\t\tpgiData.ProjectAttCount = pgiData.ItemAttachmentsSet.length;\r\n\t\t\t} else {\r\n\t\t\t\tpgiData.ProjectAttCount = 0;\r\n\t\t\t}\r\n\t\t\tpgiData.Visible.PAttDelete = false;\r\n\t\t\tpgiData.Visible.PAttAdd = false;\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t},\r\n\t\tgetAttachmentsByFolder: function(parentFolder, attachmentList) {\r\n\t\t\tvar attachments = [];\r\n\t\t\tfor (var i = 0; i < attachmentList.length; i++) {\r\n\t\t\t\tif (attachmentList[i].SubfolderId === parentFolder.Key) {\r\n\t\t\t\t\tattachmentList[i].nodeType = \"File\";\r\n\t\t\t\t\t// attachmentList[i].iconPath = \"sap-icon://document\";\r\n\t\t\t\t\tattachmentList[i].Text = attachmentList[i].ActFileDescription;\r\n\t\t\t\t\tattachmentList[i].SubFolderName = parentFolder.Text;\r\n\t\t\t\t\tattachmentList[i].ParentKey = parentFolder.ParentKey;\r\n\t\t\t\t\tconsole.log(\"Mime Type:\" + attachmentList[i].ActFileMimetype);\r\n\t\t\t\t\tattachmentList[i].iconPath = this.getIconByAttachmentType(attachmentList[i].ActFileMimetype, attachmentList[i].ActFileName);\r\n\t\t\t\t\tif (attachmentList[i].ActFileMimetype === \"text/html\") {\r\n\t\t\t\t\t\tattachmentList[i].ActFileURL = attachmentList[i].ActFileName;\r\n\t\t\t\t\t\t// attachmentList[i].ActFileDescription = \"\";\r\n\t\t\t\t\t\tattachmentList[i].ActFileName = \"\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \r\n\t\t\t\t\t\tattachmentList[i].ActFileURL = \"\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar temp = attachmentList[i].__metadata.media_src;\r\n\t\t\t\t\tvar mediaURL = temp.substring(temp.indexOf(\"ItemAttachments\"));\r\n\t\t\t\t\tmediaURL = temp.substring(temp.indexOf(\"/sap/opu/odata/sap\"));\r\n\r\n\t\t\t\t\tattachmentList[i].mimeType = attachmentList[i].ActFileName.substring(attachmentList[i].ActFileName.lastIndexOf(\".\"));\r\n\t\t\t\t\tattachmentList[i].fileURL = mediaURL;\r\n\r\n\t\t\t\t\tattachments.push(attachmentList[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn attachments;\r\n\t\t},\r\n\t\tgetIconByAttachmentType: function(mimeType, fileName) {\r\n\t\t\tvar sFileExtension = fileName.substring(fileName.lastIndexOf(\".\") + 1);\r\n\t\t\tvar sIconPath = \"sap-icon://document\";\r\n\t\t\tif (mimeType === \"text/html\") {\r\n\t\t\t\tsIconPath = \"sap-icon://attachment-html\";\r\n\t\t\t} else if (mimeType === \"application/pdf\" || sFileExtension === \"pdf\") {\r\n\t\t\t\tsIconPath = \"sap-icon://pdf-attachment\";\r\n\t\t\t} else if (mimeType === \"image/png\" || sFileExtension === \"png\") {\r\n\t\t\t\tsIconPath = \"sap-icon://attachment-photo\";\r\n\t\t\t} else if (mimeType === \"application/vnd.openxmlformats\") {\r\n\t\t\t\tif (sFileExtension === \"doc\" || sFileExtension === \"docx\") {\r\n\t\t\t\t\tsIconPath = \"sap-icon://doc-attachment\";\r\n\t\t\t\t} else if (sFileExtension === \"xls\" || sFileExtension === \"xlsx\") {\r\n\t\t\t\t\tsIconPath = \"sap-icon://excel-attachment\";\r\n\t\t\t\t} else if (sFileExtension === \"ppt\" || sFileExtension === \"pptx\") {\r\n\t\t\t\t\tsIconPath = \"sap-icon://ppt-attachment\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn sIconPath;\r\n\t\t},\r\n\t\tonAttachmentPress: function(oEvent) {\r\n\t\t\tvar params = oEvent.getParameters();\r\n\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar sPath = oEvent.getSource().getBindingContext(\"PGI\").getPath();\r\n\t\t\tvar oRow = pgiModel.getProperty(sPath);\r\n\r\n\t\t\tvar fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oUpload = sap.ui.core.Fragment.byId(fragmentId, \"UploadCollection\");\r\n\r\n\t\t\tvar items = oUpload.getItems();\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar oUploadItem = items[i];\r\n\t\t\t\tsPath = oUploadItem.getBindingContext(\"PGI\").getPath();\r\n\t\t\t\tvar currentRow = pgiModel.getProperty(sPath);\r\n\t\t\t\tif (oRow.DocumentGuid === currentRow.DocumentGuid) {\r\n\t\t\t\t\tconsole.log(\"Download Start\");\r\n\t\t\t\t\toUpload.downloadItem(oUploadItem, true);\r\n\t\t\t\t\tconsole.log(\"Download completed\");\r\n\t\t\t\t\ti = items.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAddAttachement: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oBaseData = oBaseModel.getData();\r\n\t\t\tvar fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oTreeTable = sap.ui.core.Fragment.byId(fragmentId, \"TreeTableAttachment\");\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar selectedIndex = oTreeTable.getSelectedIndex();\r\n\t\t\tvar sPath = \"\";\r\n\t\t\tvar selectedRow;\r\n\t\t\tif (selectedIndex >= 0) {\r\n\t\t\t\tsPath = oTreeTable.getContextByIndex(selectedIndex).getPath();\r\n\t\t\t\tif (sPath !== \"\") {\r\n\t\t\t\t\tselectedRow = pgiModel.getProperty(sPath);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedIndex < 0 || selectedRow.nodeType !== \"Folder\") {\r\n\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PAttSelectFolder\");\r\n\t\t\t\tsMessage = \"Please select a folder before adding an Attachment\";\r\n\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar addAttachment = {};\r\n\t\t\taddAttachment.RpmGuid = pgiData.Project.RpmGuid; //PK\r\n\t\t\taddAttachment.RpmGuidC = pgiData.Project.RpmGuidC; //PK\r\n\t\t\taddAttachment.ActFileId = pgiData.Project.ItemId; //PK\r\n\t\t\taddAttachment.FolderId = selectedRow.ParentKey; // ParentKey\tPK\r\n\t\t\taddAttachment.SubfolderId = selectedRow.Key; // Key\t\t\tPK\r\n\t\t\taddAttachment.FolderName = selectedRow.Text;\r\n\t\t\taddAttachment.ActFileName = \"\"; // Actual Name\r\n\t\t\taddAttachment.ActFileDescription = \"\"; // Description entered by user\r\n\t\t\taddAttachment.url = \"\"; // url entered by user\r\n\t\t\taddAttachment.ItemType = pgiData.Project.ItemtypeKey;\r\n\r\n\t\t\t// addAttachment.FolderId = selectedRow.SubFolderId;\r\n\t\t\t// addAttachment.FolderName = selectedRow.Text;\r\n\t\t\t// addAttachment.ActFileDescription = \"\";\r\n\t\t\t// addAttachment.ActFileName = \"\";\r\n\t\t\t// addAttachment.uploadUrl = \"\";\r\n\t\t\taddAttachment.fileEnabled = true;\r\n\t\t\taddAttachment.urlEnabled = false;\r\n\r\n\t\t\t// addAttachment.uploadUrl = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemCreAttachment(RpmGuid=binary\\'\" + addAttachment.RpmGuidC +  \"\\',RpmGuidC=\\'\" + addAttachment.RpmGuidC +  \r\n\t\t\t// \t\t\t\t\t\t\"\\',ActFileId=\\'\" + addAttachment.ActFileId + \"\\',FolderId=\\'\" + addAttachment.FolderId + \"\\',SubfolderId=\\'\" + addAttachment.SubfolderId + \"\\')\";\r\n\t\t\t// var sPath = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemCreAttachment\";\r\n\r\n\t\t\tvar sPath = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemsList(RpmGuid=binary\\'\" + addAttachment.RpmGuidC + \"\\',RpmGuidC=\\'\" +\r\n\t\t\t\taddAttachment.RpmGuidC +\r\n\t\t\t\t\"\\')/ItemCreAttachment\";\r\n\r\n\t\t\taddAttachment.uploadUrl = sPath;\r\n\r\n\t\t\tconsole.log(\"Upload Url:\" + addAttachment.uploadUrl);\r\n\t\t\tpgiData.AddAttachment = addAttachment;\r\n\t\t\t// oBaseData.AddAttachment = addAttachment;\r\n\r\n\t\t\tpgiData.AttachmentDialogBusy = false;\r\n\r\n\t\t\tvar dialog = new Dialog(\"NewAttachment\", {\r\n\t\t\t\ttitle: that.getModel(\"i18n\").getResourceBundle().getText(\"NewAttachment\"),\r\n\t\t\t\ttype: 'Message',\r\n\t\t\t\tbusy: \"{path: 'PGI>/AttachmentDialogBusy'}\",\r\n\t\t\t\tcontent: [\r\n\t\t\t\t\tnew sap.m.HBox({\r\n\t\t\t\t\t\tfitContainer: true,\r\n\t\t\t\t\t\talignItems: sap.m.FlexAlignItems.Center,\r\n\t\t\t\t\t\tjustifyContent: sap.m.FlexJustifyContent.SpaceBetween,\r\n\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttFolderName\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.m.Input(\"folderName\", {\r\n\t\t\t\t\t\t\t\twidth: \"200px\",\r\n\t\t\t\t\t\t\t\tmaxLength: 40,\r\n\t\t\t\t\t\t\t\tvalue: \"{path: 'PGI>/AddAttachment/FolderName'}\",\r\n\t\t\t\t\t\t\t\teditable: false\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}), new sap.m.HBox({\r\n\t\t\t\t\t\tfitContainer: true,\r\n\t\t\t\t\t\talignItems: sap.m.FlexAlignItems.Center,\r\n\t\t\t\t\t\tjustifyContent: sap.m.FlexJustifyContent.SpaceBetween,\r\n\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttFileDescr\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.m.Input(\"descr\", {\r\n\t\t\t\t\t\t\t\twidth: \"200px\",\r\n\t\t\t\t\t\t\t\tmaxLength: 40,\r\n\t\t\t\t\t\t\t\tvalue: \"{path: 'PGI>/AddAttachment/ActFileDescription'}\"\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}), new sap.m.HBox({\r\n\t\t\t\t\t\tfitContainer: true,\r\n\t\t\t\t\t\talignItems: sap.m.FlexAlignItems.Center,\r\n\t\t\t\t\t\tjustifyContent: sap.m.FlexJustifyContent.SpaceBetween,\r\n\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\tnew sap.m.RadioButtonGroup(\"group\", {\r\n\t\t\t\t\t\t\t\twidth: \"300px\",\r\n\t\t\t\t\t\t\t\tcolumns: 2,\r\n\t\t\t\t\t\t\t\tbuttons: [\r\n\t\t\t\t\t\t\t\t\tnew sap.m.RadioButton(\"button1\", {\r\n\t\t\t\t\t\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttFiletext\")\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.m.RadioButton(\"button2\", {\r\n\t\t\t\t\t\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttURLtext\")\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\tselect: function(oEvent) {\r\n\t\t\t\t\t\t\t\t\tvar index = oEvent.getParameters().selectedIndex;\r\n\t\t\t\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"PGI\").setProperty(\"/AddAttachment/fileEnabled\", true);\r\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"PGI\").setProperty(\"/AddAttachment/urlEnabled\", false);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"PGI\").setProperty(\"/AddAttachment/fileEnabled\", false);\r\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"PGI\").setProperty(\"/AddAttachment/urlEnabled\", true);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.getModel(\"PGI\").refresh(false);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}), new sap.m.HBox({\r\n\t\t\t\t\t\tfitContainer: true,\r\n\t\t\t\t\t\talignItems: sap.m.FlexAlignItems.Center,\r\n\t\t\t\t\t\tjustifyContent: sap.m.FlexJustifyContent.SpaceBetween,\r\n\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttFile\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t// new sap.m.Input(\"fileName\", {\r\n\t\t\t\t\t\t\t// \ttype: sap.m.InputType.Text\r\n\t\t\t\t\t\t\t// }),\r\n\t\t\t\t\t\t\tnew sap.ui.unified.FileUploader(\"fileUploader\", {\r\n\t\t\t\t\t\t\t\tuploadUrl: \"{path: 'PGI>/AddAttachment/uploadUrl'}\",\r\n\t\t\t\t\t\t\t\twidth: \"200px\",\r\n\t\t\t\t\t\t\t\tenabled: \"{path: 'PGI>/AddAttachment/fileEnabled'}\",\r\n\t\t\t\t\t\t\t\tuploadOnChange: false,\r\n\t\t\t\t\t\t\t\tsendXHR: true,\r\n\t\t\t\t\t\t\t\tmaximumFileSize: 25,\r\n\t\t\t\t\t\t\t\tuseMultipart: false,\r\n\t\t\t\t\t\t\t\tadditionalData: \"ItemType=9109\",\r\n\t\t\t\t\t\t\t\theaderParameters: [\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\t\t\t\tname: \"x-csrf-token\",\r\n\t\t\t\t\t\t\t\t\t\tvalue: sap.ui.getCore().getModel(\"PPM\").getHeaders()['x-csrf-token']\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\ttooltip: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttTooltip\"),\r\n\t\t\t\t\t\t\t\tuploadComplete: function(oEvent) {\r\n\t\t\t\t\t\t\t\t\tthat.handleUploadComplete(oEvent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}), new sap.m.HBox({\r\n\t\t\t\t\t\tfitContainer: true,\r\n\t\t\t\t\t\talignItems: sap.m.FlexAlignItems.Center,\r\n\t\t\t\t\t\tjustifyContent: sap.m.FlexJustifyContent.SpaceBetween,\r\n\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttURL\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.m.Input(\"urlName\", {\r\n\t\t\t\t\t\t\t\twidth: \"200px\",\r\n\t\t\t\t\t\t\t\tenabled: \"{path: 'PGI>/AddAttachment/urlEnabled'}\",\r\n\t\t\t\t\t\t\t\ttype: sap.m.InputType.Url,\r\n\t\t\t\t\t\t\t\tvalue: \"{path: 'PGI>/AddAttachment/url'}\"\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t],\r\n\t\t\t\tbeginButton: new sap.m.Button({\r\n\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttCreate\"),\r\n\t\t\t\t\tpress: function(oEvent) {\r\n\t\t\t\t\t\tconsole.log(\"begin Upload process\");\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\t\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\t\t\t\tvar pgiData = this.getModel(\"PGI\").getData();\r\n\t\t\t\t\t\tpgiData.AttachmentDialogBusy = true;\r\n\t\t\t\t\t\tpgiModel.refresh(false);\r\n\t\t\t\t\t\t// sap.ui.getCore().getOwnerComponent().getModel(\"PGI\").setProperty(\"/AttachmentDialogBusy\", true); // Stop Spinner\r\n\t\t\t\t\t\t// sap.ui.getCore().getOwnerComponent().getModel(\"PGI\").refresh(false);\r\n\r\n\t\t\t\t\t\tvar folderName = sap.ui.getCore().byId(\"folderName\").getValue();\r\n\t\t\t\t\t\tvar descr = sap.ui.getCore().byId(\"descr\").getValue();\r\n\t\t\t\t\t\tvar selectedIndex = sap.ui.getCore().byId(\"group\").getSelectedIndex();\r\n\t\t\t\t\t\tvar sUrl = \"\";\r\n\t\t\t\t\t\tvar sFileName = \"\";\r\n\t\t\t\t\t\tif (selectedIndex === 0) {\r\n\t\t\t\t\t\t\tsFileName = sap.ui.getCore().byId(\"fileUploader\").getValue();\r\n\t\t\t\t\t\t\t//+ INBHD02\r\n\t\t\t\t\t\t\tif (sFileName === \"\") {\r\n\t\t\t\t\t\t\t\tsMessage = \"\";\r\n\t\t\t\t\t\t\t\tsMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"SelectFile\");\r\n\t\t\t\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t\t\t\tthat.getModel(\"PGI\").setProperty(\"/AttachmentDialogBusy\", false); // Stop Spinner\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//- INBHD02\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsUrl = sap.ui.getCore().byId(\"urlName\").getValue();\r\n\r\n\t\t\t\t\t\t\t//+ INBHD02\r\n\t\t\t\t\t\t\tif (sUrl === \"\") {\r\n\t\t\t\t\t\t\t\tsMessage = \"\";\r\n\t\t\t\t\t\t\t\tsMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"SelectURL\");\r\n\t\t\t\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t\t\t\tthat.getModel(\"PGI\").setProperty(\"/AttachmentDialogBusy\", false); // Stop Spinner\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//- INBHD02\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// var pgiData = this.getModel(\"PGI\").getData();\r\n\t\t\t\t\t\tvar ItemCreAttachment = {};\r\n\t\t\t\t\t\tItemCreAttachment.RpmGuid = pgiData.AddAttachment.RpmGuid; //PK\r\n\t\t\t\t\t\tItemCreAttachment.RpmGuidC = pgiData.AddAttachment.RpmGuidC; //PK\r\n\t\t\t\t\t\tItemCreAttachment.ActFileId = pgiData.AddAttachment.ActFileId; //PK\r\n\t\t\t\t\t\tItemCreAttachment.FolderId = pgiData.AddAttachment.FolderId; // ParentKey\tPK\r\n\t\t\t\t\t\tItemCreAttachment.SubfolderId = pgiData.AddAttachment.SubfolderId; // Key\t\t\tPK\r\n\t\t\t\t\t\t//ItemCreAttachment.ActFileName = sFileName;\t\t\t\t\t\t\t// Actual Name\r\n\t\t\t\t\t\tItemCreAttachment.ActFileDescription = descr; // Description entered by user\r\n\t\t\t\t\t\tItemCreAttachment.Url = sUrl; // url entered by user\r\n\t\t\t\t\t\tItemCreAttachment.ItemType = pgiData.Project.ItemtypeKey;\r\n\r\n\t\t\t\t\t\t// /ItemAttachent2(RpmGUIDC='aasdjashj',DocumentGUIDC='')\r\n\r\n\t\t\t\t\t\tvar ItemCreAttachment2 = {\r\n\t\t\t\t\t\t\t\"RpmGuid-data\": pgiData.AddAttachment.RpmGuid,\r\n\t\t\t\t\t\t\t\"RpmGuidC-data\": pgiData.AddAttachment.RpmGuidC,\r\n\t\t\t\t\t\t\t\"ActFileId-data\": pgiData.AddAttachment.ActFileId,\r\n\t\t\t\t\t\t\t\"FolderId-data\": pgiData.AddAttachment.FolderId,\r\n\t\t\t\t\t\t\t\"SubfolderId-data\": pgiData.AddAttachment.SubfolderId,\r\n\t\t\t\t\t\t\t\"ActFileName-data\": sFileName,\r\n\t\t\t\t\t\t\t\"ActFileDescription-data\": descr,\r\n\t\t\t\t\t\t\t\"Url-data\": sUrl,\r\n\t\t\t\t\t\t\t\"ItemType-data\": pgiData.Project.ItemtypeKey\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tvar additionalParams = \"RpmGuid=\" + pgiData.AddAttachment.RpmGuid +\r\n\t\t\t\t\t\t\t\"&RpmGuidC=\" + pgiData.AddAttachment.RpmGuidC +\r\n\t\t\t\t\t\t\t\"&ActFileId=\" + pgiData.AddAttachment.ActFileId +\r\n\t\t\t\t\t\t\t\"&FolderId=\" + pgiData.AddAttachment.FolderId +\r\n\t\t\t\t\t\t\t\"&SubfolderId=\" + pgiData.AddAttachment.SubfolderId +\r\n\t\t\t\t\t\t\t\"&ActFileName=\" + sFileName +\r\n\t\t\t\t\t\t\t\"&ActFileDescription=\" + descr +\r\n\t\t\t\t\t\t\t\"&Url=\" + sUrl +\r\n\t\t\t\t\t\t\t\"&ItemType=\" + pgiData.AddAttachment.ItemType;\r\n\t\t\t\t\t\tadditionalParams = \"ItemType=\" + pgiData.AddAttachment.ItemType;\r\n\r\n\t\t\t\t\t\tvar oFileUploader = sap.ui.getCore().byId(\"fileUploader\");\r\n\t\t\t\t\t\t// {\"RpmGuid\":\"AFBWokc+HueQv38kjDerZw==\",\"RpmGuidC\":\"005056A2473E1EE790BF7F248C37AB67\",\"ActFileId\":\"IM000172\",\"FolderId\":\"9999\",\"SubfolderId\":\"01\",\"ActFileName\":\"t2.xlsx\",\"ActFileDescription\":\"test 1\",\"Url\":\"\"}\r\n\r\n\t\t\t\t\t\t// oFileUploader.additionalData = additionalParams;\r\n\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"RpmGuid\",\r\n\t\t\t\t\t\t\tvalue: pgiData.AddAttachment.RpmGuid\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"RpmGuidC\",\r\n\t\t\t\t\t\t\tvalue: pgiData.AddAttachment.RpmGuidC\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"ActFileId\",\r\n\t\t\t\t\t\t\tvalue: pgiData.AddAttachment.ActFileId\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"FolderId\",\r\n\t\t\t\t\t\t\tvalue: pgiData.AddAttachment.FolderId\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"SubfolderId\",\r\n\t\t\t\t\t\t\tvalue: pgiData.AddAttachment.SubfolderId\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"ActFileName\",\r\n\t\t\t\t\t\t\tvalue: sFileName\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"ActFileDescription\",\r\n\t\t\t\t\t\t\tvalue: descr\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\toFileUploader.insertParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"Url\",\r\n\t\t\t\t\t\t\tvalue: sUrl\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t// oFileUploader.insertParameter (new sap.ui.unified.FileUploaderParameter({name: \"ItemType\", value: pgiData.AddAttachment.ItemType }));\r\n\r\n\t\t\t\t\t\toFileUploader.insertHeaderParameter(new sap.ui.unified.FileUploaderParameter({\r\n\t\t\t\t\t\t\tname: \"slug\",\r\n\t\t\t\t\t\t\tvalue: oFileUploader.getValue()\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t// oFileUploader.insertHeaderParameter (new sap.ui.unified.FileUploaderParameter({name: \"RpmGuid\", value: pgiData.AddAttachment.RpmGuid }));\r\n\t\t\t\t\t\t//          \t\toFileUploader.insertHeaderParameter (new sap.ui.unified.FileUploaderParameter({name: \"RpmGuidC\", value: pgiData.AddAttachment.RpmGuidC }));\r\n\r\n\t\t\t\t\t\toFileUploader.setModel(this.getModel(\"PPM\"), \"PPM\");\r\n\t\t\t\t\t\t// oFileUploader.upload();\r\n\t\t\t\t\t\tthat.createItemAttachment(ItemCreAttachment, oFileUploader);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tendButton: new sap.m.Button({\r\n\t\t\t\t\ttext: that.getModel(\"i18n\").getResourceBundle().getText(\"PAttCancel\"),\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\t// that.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t\t\t// that.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdialog.setModel(oBaseModel, \"PPM\");\r\n\t\t\tdialog.setModel(this.getModel(\"PGI\"), \"PGI\");\r\n\t\t\tdialog.setModel(this.getModel(\"i18n\"), \"i18n\");\r\n\t\t\tthis.attachmentDialog = dialog;\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t\tdialog.open();\r\n\t\t},\r\n\t\tcreateItemAttachment: function(oItemAttachment, oFileUploader) {\r\n\t\t\t// pgiData.CurrentMode === \"Create\"\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\r\n\t\t\tconsole.log(\"data setup for createItemAttachment\");\r\n\t\t\toBaseModel.create(\"/CreUrlAttachSet\", oItemAttachment, {\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\t\t\t\t\tconsole.log(\"Success in creating ItemsList:\" + oResponse.statusCode);\r\n\t\t\t\t\tif (oItemAttachment.Url === \"\") {\r\n\t\t\t\t\t\tconsole.log(\"New created Document GUID:\" + oData.DocumentGuid);\r\n\t\t\t\t\t\t// DocumentGUID passed to backend instead of RpmGuidC to ensure unique row in ZIM_TEMP_ATTACH temp table is retrieved \r\n\t\t\t\t\t\tvar sPath = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemsList(RpmGuid=binary\\'\" + oData.RpmGuidC + \"\\',RpmGuidC=\\'\" + oData.DocumentGuid +\r\n\t\t\t\t\t\t\t\"\\')/ItemCreAttachment\";\r\n\r\n\t\t\t\t\t\t// addAttachment.uploadUrl = sPath;\r\n\t\t\t\t\t\toFileUploader.setUploadUrl(sPath);\r\n\t\t\t\t\t\toFileUploader.setModel(oBaseModel, \"PPM\");\r\n\t\t\t\t\t\toFileUploader.upload();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// that.getItemAttachments();\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t\tthat.getModel(\"PGI\").setProperty(\"/AttachmentDialogBusy\", false); // Stop Spinner\r\n\t\t\t\t\t\tthat.getModel(\"PGI\").refresh(false);\r\n\r\n\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"refreshAttachments\", {});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// var sPath  = \"/ItemCreAttachments(\"\r\n\t\t\t\t\t// addAttachment.uploadUrl = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemCreAttachment(RpmGuid=binary\\'\" + addAttachment.RpmGuidC +  \"\\',RpmGuidC=\\'\" + addAttachment.RpmGuidC +  \r\n\t\t\t\t\t// \t\t\t\t\t\t\"\\',ActFileId=\\'\" + addAttachment.ActFileId + \"\\',FolderId=\\'\" + addAttachment.FolderId + \"\\',SubfolderId=\\'\" + addAttachment.SubfolderId + \"\\')\";\r\n\r\n\t\t\t\t\t// {\"RpmGuid\":\"AFBWokc+HueQv38kjDerZw==\",\"RpmGuidC\":\"005056A2473E1EE790BF7F248C37AB67\",\"ActFileId\":\"IM000172\",\"FolderId\":\"9999\",\"SubfolderId\":\"01\",\"ActFileName\":\"t2.xlsx\",\"ActFileDescription\":\"test 1\",\"Url\":\"\"}\r\n\r\n\t\t\t\t\t// var sPath = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemsCreAttachment(RpmGuid=binary\\'\" + oItemAttachment.RpmGuidC +  \"\\',RpmGuidC=\\'\" + oItemAttachment.RpmGuidC +  \r\n\t\t\t\t\t// \t\t\t\t\"\\',DocumentGuid=\\'\" + oData.DocumentGuid + \"\\',ActFileId=\\'\" + oItemAttachment.ActFileId \r\n\t\t\t\t\t// + \"\\',FolderId=\\'\" + oItemAttachment.FolderId + \"\\',oItemAttachment=\\'\" + oItemAttachment.SubfolderId + \"\\')\";\r\n\t\t\t\t\t// var sPath = \"/sap/opu/odata/sap/ZIM_MAIN_SRV/ItemsList(RpmGuid=binary\\'\" + oItemAttachment.RpmGuidC +  \"\\',RpmGuidC=\\'\" + oItemAttachment.RpmGuidC +  \r\n\t\t\t\t\t// \t\t\t\t\"\\')/ItemCreAttachment\";\r\n\t\t\t\t\t// oFileUploader.insertHeaderParameter(new sap.ui.unified.FileUploaderParameter({name: \"slug\", \r\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: oFileUploader.getValue() }));\r\n\t\t\t\t\t//oFileUploader.uploadUrl = sPath;\r\n\t\t\t\t\t// oFileUploader.setModel(oBaseModel, \"PPM\");\r\n\t\t\t\t\t// oFileUploader.upload ();\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PGI_CreateprojectError\", [oError]);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\toError.ErrorOrigin = \"CreateItemAttachment\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\thandleUploadComplete: function(oEvent) {\r\n\t\t\tconsole.log(\"handleUploadComplete\");\r\n\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"PGI_UploadComplete\");\r\n\t\t\tMessageToast.show(sMessage);\r\n\t\t\tif (this.attachmentDialog) {\r\n\t\t\t\tthis.attachmentDialog.close();\r\n\t\t\t\tthis.attachmentDialog.destroy();\r\n\t\t\t\tthis.attachmentDialog = null;\r\n\r\n\t\t\t\tthis.getItemAttachments();\r\n\t\t\t\tthis.getModel(\"PGI\").setProperty(\"/AttachmentDialogBusy\", false); // Stop Spinner\r\n\t\t\t\tthis.getModel(\"PGI\").refresh(false);\r\n\r\n\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDeleteAttachment: function(oEvent) {\r\n\r\n\t\t\tvar params = oEvent.getParameters();\r\n\t\t\tvar oBaseModel = this.getModel(\"PPM\");\r\n\t\t\tvar fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oTreeTable = sap.ui.core.Fragment.byId(fragmentId, \"TreeTableAttachment\");\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar selectedIndex = oTreeTable.getSelectedIndex();\r\n\t\t\tvar sPath = oTreeTable.getContextByIndex(selectedIndex).getPath();\r\n\t\t\tvar selectedRow = pgiModel.getProperty(sPath);\r\n\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStartSpinner\", {});\r\n\t\t\t// var pgiModel = this.getModel(\"PGI\");\r\n\t\t\t// var sPath = oEvent.getSource().getBindingContext(\"PGI\").getPath();\r\n\t\t\t// var oRow = pgiModel.getProperty(sPath);\r\n\r\n\t\t\t// var fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oUpload = sap.ui.core.Fragment.byId(fragmentId, \"UploadCollection\");\r\n\r\n\t\t\tvar items = oUpload.getItems();\r\n\t\t\t// for (var i = 0; i < items.length; i++) {\r\n\t\t\t// \tvar oUploadItem = items[i];\r\n\t\t\t// \tvar sDeletePath = oUploadItem.getBindingContext(\"PGI\").getPath();\r\n\t\t\t// \tvar currentRow = pgiModel.getProperty(sDeletePath);\r\n\t\t\t// \tsDeletePath = currentRow.__metadata.uri.substring(currentRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t// \tconsole.log(\"row:\" + i + \":\" + sDeletePath   );\t\t\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar oUploadItem = items[i];\r\n\t\t\t\tvar sDeletePath = oUploadItem.getBindingContext(\"PGI\").getPath();\r\n\t\t\t\tvar currentRow = pgiModel.getProperty(sDeletePath);\r\n\t\t\t\tif (selectedRow.DocumentGuid === currentRow.DocumentGuid) {\r\n\t\t\t\t\tvar that = this;\r\n\t\t\t\t\tMessageBox.confirm(\r\n\t\t\t\t\t\tthis._oResourceBundle.getText(\"PAttConfirmAttachmentDeleteMessage\", [selectedRow.Text]), {\r\n\t\t\t\t\t\t\t// styleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\t\t\t// that.deleteAttachment(oEvent);\r\n\t\t\t\t\t\t\t\t\t// oUpload.downloadItem(oUploadItem, true);\r\n\t\t\t\t\t\t\t\t\toBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\t\t\t\t\t\t\tsDeletePath = currentRow.__metadata.uri.substring(currentRow.__metadata.uri.lastIndexOf(\"/\"));\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"Deleting ItemAttachment row:\" + sDeletePath);\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"Deleting ItemAttachment:\" + selectedRow.Text + \"::\" + currentRow.ActFileDescription);\r\n\r\n\t\t\t\t\t\t\t\t\toBaseModel.remove(sDeletePath, {\r\n\t\t\t\t\t\t\t\t\t\t\"success\": function(oData, response) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Success in Batch: Deleting Item Attachment:\");\r\n\t\t\t\t\t\t\t\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PAttDeleteAttachmentSuccess\", [selectedRow.Text]);\r\n\t\t\t\t\t\t\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"refreshAttachments\", {});\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\"error\": function(params) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Error in Deleting Item Attachment\");\r\n\t\t\t\t\t\t\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.app.spinner\", \"AppStopSpinner\", {});\r\n\t\t\t\t\t\t\t\t\t\t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PAttDeleteAttachmentError\", [params]);\r\n\t\t\t\t\t\t\t\t\t\t\tMessageToast.show(sMessage);\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t// oBaseModel.submitChanges({\r\n\t\t\t\t\t\t\t\t\t// \t\"success\": function(oData, response) {\r\n\t\t\t\t\t\t\t\t\t// \t\tconsole.log(\"Success in Batch: Deleting Item Attachment:\");\r\n\t\t\t\t\t\t\t\t\t// \t\tvar sMessage = that.getModel(\"i18n\").getResourceBundle().getText(\"PGI_DeleteAttachmentError\", [oItem.ItemDesc]);\r\n\t\t\t\t\t\t\t\t\t// \t\tMessageToast.show(sMessage);\r\n\t\t\t\t\t\t\t\t\t// \t\tthat._navBack();\r\n\t\t\t\t\t\t\t\t\t// \t\tsap.ui.getCore().getEventBus().publish(\"colgate.ppm.projectmgmt.projectdetail\", \"refreshAttachments\", {});\r\n\t\t\t\t\t\t\t\t\t// \t},\r\n\t\t\t\t\t\t\t\t\t// \t\"error\": function(params) {\r\n\t\t\t\t\t\t\t\t\t// \t\tconsole.log(\"Error in Deleting Item Attachment\");\r\n\t\t\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// oUpload.downloadItem(oUploadItem, true);\r\n\t\t\t\t\ti = items.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tdeleteAttachment: function(oEvent) {\r\n\t\t\t// var fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\t// var oTreeTable = sap.ui.core.Fragment.byId(fragmentId, \"TreeTableAttachment\");\r\n\t\t\t// var pgiModel = this.getModel(\"PGI\");\r\n\t\t\t// var pgiData = pgiModel.getData();\r\n\t\t\t// var selectedIndex = oTreeTable.getSelectedIndex();\r\n\t\t\t// var sPath = oTreeTable.getContextByIndex(selectedIndex).getPath();\r\n\t\t\t// var selectedRow = pgiModel.getProperty(sPath);\r\n\r\n\t\t\t// Todo: delete the row and in success execute getItemAttachments\t\t\r\n\t\t},\r\n\t\tonPAttRowSelectionChange: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oTreeTable = sap.ui.core.Fragment.byId(fragmentId, \"TreeTableAttachment\");\r\n\t\t\tvar pgiModel = this.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar selectedIndex = oTreeTable.getSelectedIndex();\r\n\t\t\tvar sPath = \"\";\r\n\t\t\tvar selectedRow;\r\n\t\t\tif (selectedIndex >= 0) {\r\n\t\t\t\tsPath = oTreeTable.getContextByIndex(selectedIndex).getPath();\r\n\t\t\t\tif (sPath !== \"\") {\r\n\t\t\t\t\tselectedRow = pgiModel.getProperty(sPath);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedIndex >= 0) {\r\n\t\t\t\tif (selectedRow && selectedRow.nodeType !== \"Folder\") {\r\n\t\t\t\t\tpgiData.Visible.PAttDelete = true;\r\n\t\t\t\t\tpgiData.Visible.PAttAdd = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpgiData.Visible.PAttDelete = false;\r\n\t\t\t\t\tpgiData.Visible.PAttAdd = true;\r\n\t\t\t\t}\r\n\t\t\t\tpgiModel.refresh(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCollapse: function() {\r\n\t\t\tvar fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oTreeTable = sap.ui.core.Fragment.byId(fragmentId, \"TreeTableAttachment\");\r\n\t\t\toTreeTable.collapseAll();\r\n\t\t\toTreeTable.expandToLevel(0);\r\n\t\t\t// this._setRowStyle();\r\n\t\t},\r\n\r\n\t\tonExpand: function() {\r\n\t\t\tvar fragmentId = this.getView().createId(\"attchmnt\");\r\n\t\t\tvar oTreeTable = sap.ui.core.Fragment.byId(fragmentId, \"TreeTableAttachment\");\r\n\t\t\toTreeTable.expandToLevel(2);\r\n\t\t\t// this._setRowStyle();\r\n\t\t},\r\n\t\t// Project Change Logs Methods\r\n\t\tconfigChangeLogsScreen: function() {\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tif (pgiData.ChangeLogTimeFrame) {\r\n\t\t\t\tpgiData.ChangeLogTimeFrame.SelectedKey = \"\";\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tpgiData.ChangeLogTimeFrame = {};\r\n\t\t\tpgiData.ChangeLogTimeFrame.All = [{\r\n\t\t\t\t\"Key\": \"Today\",\r\n\t\t\t\t\"Description\": \"Today\"\r\n\t\t\t}, {\r\n\t\t\t\t\"Key\": \"1 Week\",\r\n\t\t\t\t\"Description\": \"1 Week\"\r\n\t\t\t}, {\r\n\t\t\t\t\"Key\": \"1 Month\",\r\n\t\t\t\t\"Description\": \"1 Month\"\r\n\t\t\t}, {\r\n\t\t\t\t\"Key\": \"1 Year\",\r\n\t\t\t\t\"Description\": \"1 Year\"\r\n\t\t\t}, {\r\n\t\t\t\t\"Key\": \"Manual\",\r\n\t\t\t\t\"Description\": \"Manual\"\r\n\t\t\t}];\r\n\t\t\tpgiData.ChangeLogTimeFrame.SelectedKey = \"\";\r\n\t\t\tpgiData.ChangeLogTimeFrame.FromDt = new Date();\r\n\t\t\tpgiData.ChangeLogTimeFrame.ToDt = new Date();\r\n\t\t\tpgiData.ChangeLogTimeFrame.FromDtEditable = false;\r\n\t\t\tpgiData.ChangeLogTimeFrame.ToDtEditable = false;\r\n\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t},\r\n\t\tonPLogsTimeFrameChange: function(oEvent) {\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tvar ppmData = this.getView().getModel(\"PPMData\").getData();\r\n\t\t\tvar today = new Date();\r\n\t\t\tvar selectedKey = pgiData.ChangeLogTimeFrame.SelectedKey;\r\n\r\n\t\t\tfor (var i = 0; i < ppmData.VHDocsPeriod.length; i++) {\r\n\t\t\t\tif (ppmData.VHDocsPeriod[i].Key === selectedKey) {\r\n\t\t\t\t\tif (selectedKey !== \"KY\") {\r\n\t\t\t\t\t\t// new Date (DateUtils.getSystemAdjISODate_fromDate (oDataIn.LaunchDate))\r\n\t\t\t\t\t\tpgiData.ChangeLogTimeFrame.FromDt = new Date(DateUtils.getSystemAdjISODate_fromDate(ppmData.VHDocsPeriod[i].DateFrom));\r\n\t\t\t\t\t\tpgiData.ChangeLogTimeFrame.ToDt = new Date(DateUtils.getSystemAdjISODate_fromDate(ppmData.VHDocsPeriod[i].DateTo));\r\n\t\t\t\t\t\tpgiData.ChangeLogTimeFrame.FromDtEditable = false;\r\n\t\t\t\t\t\tpgiData.ChangeLogTimeFrame.ToDtEditable = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpgiData.ChangeLogTimeFrame.FromDtEditable = true;\r\n\t\t\t\t\t\tpgiData.ChangeLogTimeFrame.ToDtEditable = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti = ppmData.VHDocsPeriod.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// if (pgiData.ChangeLogTimeFrame.SelectedKey === \"Today\")\r\n\t\t\t// {\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDt = today\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDt = today\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDtEditable = false\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDtEditable = false\t;\r\n\t\t\t// }\r\n\t\t\t// else if (pgiData.ChangeLogTimeFrame.SelectedKey === \"1 Week\")\r\n\t\t\t// {\r\n\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDt = today\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDt = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDtEditable = false\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDtEditable = false\t;\r\n\t\t\t// }\r\n\t\t\t// else if (pgiData.ChangeLogTimeFrame.SelectedKey === \"1 Month\")\r\n\t\t\t// {\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDt = new Date ()\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDt = new Date(today.setMonth(today.getMonth() - 1));\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDtEditable = false\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDtEditable = false\t;\r\n\t\t\t// }\r\n\t\t\t// else if (pgiData.ChangeLogTimeFrame.SelectedKey === \"1 Year\")\r\n\t\t\t// {\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDt = new Date ()\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDt = new Date(today.setYear(today.getYear() - 1));\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDtEditable = false\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDtEditable = false\t;\r\n\t\t\t// }\r\n\t\t\t// else if (pgiData.ChangeLogTimeFrame.SelectedKey === \"Manual\")\r\n\t\t\t// {\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDt = new Date ()\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDt = new Date ()\t;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.FromDtEditable = true;\r\n\t\t\t// \tpgiData.ChangeLogTimeFrame.ToDtEditable = true;\r\n\t\t\t// \tpgiModel.refresh(false);\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t\tif (selectedKey !== \"KY\") {\r\n\t\t\t\tthis.getItemChangeLogs(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPLogsSearch: function(oEvent) {\r\n\t\t\tthis.getItemChangeLogs(false);\r\n\t\t},\r\n\t\tonClearPCLogsSettings: function(oEvent) {\r\n\t\t\tvar fragmentId = this.getView().createId(\"logs\");\r\n\t\t\tvar oTable = sap.ui.core.Fragment.byId(fragmentId, \"changeLogsList\");\r\n\t\t\tvar aColumns = oTable.getColumns();\r\n\r\n\t\t\tfor (var i = 0; i < aColumns.length; i++) {\r\n\t\t\t\toTable.filter(aColumns[i], null);\r\n\t\t\t}\r\n\t\t},\r\n\t\tformatDate: function(dDate) {\r\n\t\t\tif (dDate) {\r\n\t\t\t\tvar d = new Date(dDate),\r\n\t\t\t\t\tmonth = '' + (dDate.getMonth() + 1),\r\n\t\t\t\t\tday = '' + dDate.getDate(),\r\n\t\t\t\t\tyear = dDate.getFullYear();\r\n\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\r\n\t\t\t\treturn [year, month, day].join('-');\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tgetItemChangeLogs: function(bInitial) {\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\r\n\t\t\tvar oFilters = [];\r\n\t\t\t// Todo: fix the rpmGuid to current Guid\r\n\t\t\tvar rpmGuidC = pgiData.Project.RpmGuidC;\r\n\t\t\tvar additionalFilters = \"\";\r\n\t\t\tvar urlParams = [];\r\n\t\t\tvar sPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\" + rpmGuidC + \"\\')/ItemChangeLogSet\";\r\n\r\n\t\t\tif (bInitial) {\r\n\t\t\t\t// additionalFilters = \"?$top=5&$orderby=Udate%20desc\";\r\n\t\t\t\turlParams = {\r\n\t\t\t\t\t\"$top\": \"10\"\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// var sFromDt = this.formatDate(pgiData.ChangeLogTimeFrame.FromDt);\r\n\t\t\t\t// var sToDt = this.formatDate(pgiData.ChangeLogTimeFrame.ToDt);\r\n\t\t\t\t// additionalFilters = \"?$filter=Udate ge datetime'\" + sFromDt + \"' and Udate le datetime'\" + sToDt + \"'&$orderby=Udate%20desc\";\r\n\t\t\t\tvar selectedKey = pgiData.ChangeLogTimeFrame.SelectedKey;\r\n\t\t\t\tsPath = \"/ItemsList(RpmGuid=binary\\'\" + rpmGuidC + \"\\',RpmGuidC=\\'\" + rpmGuidC + \"\\')/ItemChangeLogSet\";\r\n\r\n\t\t\t\t// var fromDt = new Date (DateUtils.getSystemAdjISODate_fromDate (pgiData.ChangeLogTimeFrame.FromDt));\t\t\t\t\t\t =  \r\n\t\t\t\t// var endDt\t\t = new Date (DateUtils.getSystemAdjISODate_fromDate (pgiData.ChangeLogTimeFrame.ToDt)) ;\r\n\t\t\t\tvar fromDt = new Date(DateUtils.getSystemAdjISODate_fromDate(pgiData.ChangeLogTimeFrame.FromDt));\r\n\t\t\t\tvar toDt = new Date(DateUtils.getSystemAdjISODate_fromDate(pgiData.ChangeLogTimeFrame.ToDt));\r\n\r\n\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Udate\",\r\n\t\t\t\t\toperator: sap.ui.model.FilterOperator.BT,\r\n\t\t\t\t\t// value1: \"date'\" + sFromDt + \"'\"\r\n\t\t\t\t\tvalue1: fromDt,\r\n\t\t\t\t\tvalue2: toDt\r\n\t\t\t\t}));\r\n\t\t\t\toFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"DocsPeriodKey\",\r\n\t\t\t\t\toperator: sap.ui.model.FilterOperator.EQ,\r\n\t\t\t\t\t// value1: \"date'\" + sFromDt + \"'\"\r\n\t\t\t\t\tvalue1: pgiData.ChangeLogTimeFrame.SelectedKey\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(\"Change Logs Path:\" + sPath);\r\n\t\t\tvar that = this;\r\n\t\t\toBaseModel.read(sPath, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\turlParameters: urlParams,\r\n\t\t\t\tfilters: oFilters,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tthat.setItemChangeLogs(that, oDataIn);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"ItemAttachmentsSet\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.detail\", \"Errors\", oError);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetItemChangeLogs: function(oContext, oDataIn) {\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tvar ppmData = oModel.getData();\r\n\t\t\tvar pgiModel = this.getView().getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\tpgiData.ProjectChangeLogs = oDataIn.results;\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t},\r\n\t\tdisplayQuestionaireDialog: function(oEvent) {\r\n\r\n\t\t}\r\n\t});\r\n\r\n});",
		"colpal/ppm/projectmgmt/util/IPMUtils.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/util/DateUtils\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/Dialog\"\r\n], function(DateUtils, MessageToast, MessageBox, Dialog) {\r\n\t\"use strict\";\r\n\treturn {\r\n\t\ttestFunction: function ()\r\n\t\t{\r\n\t\t\tconsole.log(\"Test message\");\r\n\t\t},\r\n\t\tgetUserModel: function(oContext){\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPMUser\");\r\n\t\t\tif (!oBaseModel)\r\n\t\t\t{\r\n\t\t\t\tvar sServiceUrl = oContext.getModel(\"masterShared\").getProperty(\"/oServiceUrls/userService\");\r\n\t\t\t\toBaseModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl);\r\n\t\t\t\toBaseModel.setSizeLimit(5000);\r\n\t\t\t\toBaseModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);\r\n\t\t\t\tsap.ui.getCore().setModel(oBaseModel, \"PPMUser\");\r\n\t\t\t}\r\n\t\t\treturn oBaseModel;\r\n\t\t},\r\n\t\tgetCoreModel: function(oContext){\r\n\t\t\tvar oBaseModel = this.getModel(\"CorePPM\");\r\n\t\t\tif (!oBaseModel)\r\n\t\t\t{\r\n\t\t\t\tvar sServiceUrl = oContext.getModel(\"masterShared\").getProperty(\"/oServiceUrls/coreService\");\r\n\t\t\t\toBaseModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl);\r\n\t\t\t\toBaseModel.setSizeLimit(5000);\r\n\t\t\t\toBaseModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);\r\n\t\t\t\tthis.setModel(oBaseModel, \"CorePPM\");\r\n\t\t\t}\r\n\t\t\treturn oBaseModel;\r\n\t\t},\r\n\t\tgetBaseModel: function(oContext){\r\n\t\t\tvar oBaseModel = sap.ui.getCore().getModel(\"PPM\");\r\n\t\t\tif (!oBaseModel)\r\n\t\t\t{\r\n\t\t\t\tvar sServiceUrl = oContext.getModel(\"masterShared\").getProperty(\"/oServiceUrls/mainService\");\r\n\t\t\t\toBaseModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl);\r\n\t\t\t\toBaseModel.setSizeLimit(5000);\r\n\t\t\t\toBaseModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);\r\n\t\t\t\tsap.ui.getCore().setModel(oBaseModel, \"PPM\");\r\n\t\t\t}\r\n\t\t\treturn oBaseModel;\r\n\t\t},\r\n\t\t// move this to a util class\r\n\t\tgetPPMModel: function(oContext) {\r\n\t\t\t// Set up the initial selections\r\n\t\t\tvar oModel = sap.ui.getCore().getModel(\"PPMData\");\r\n\t\t\tif (!oModel) {\r\n\t\t\t\tvar oData = {};\r\n\t\t\t\toData.Initiatives = {};\r\n\t\t\t\t// create other placeholders for other data\r\n\t\t\t\tvar oModel = new sap.ui.model.json.JSONModel(oData);\r\n\t\t\t\t\r\n\t\t\t\toModel.setSizeLimit(5000);\r\n\t\t\t\tsap.ui.getCore().setModel(oModel, \"PPMData\");\r\n\t\t\t}\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\t\tgetGlobalFilter: function(){\r\n\t\t\tvar GlobalFilter = {\r\n\t\t\t\t\t\"DivisionKey\": \"\",\r\n\t\t\t\t\t\"HubKey\": \"\",\r\n\t\t\t\t\t\"CategoryKey\": \"\",\r\n\t\t\t\t\t\"SubcategoryKey\": \"\",\r\n\t\t\t\t\t\"InnovationKey\": \"\",\r\n\t\t\t\t\t\"PhaseKey\": \"\",\r\n\t\t\t\t\t\"DivisionKeyText\": \"\",\r\n\t\t\t\t\t\"HubKeyText\": \"\",\r\n\t\t\t\t\t\"CategoryKeyText\": \"\",\r\n\t\t\t\t\t\"SubcategoryKeyText\": \"\",\r\n\t\t\t\t\t\"InnovationKeyText\": \"\",\r\n\t\t\t\t\t\"PhaseKeyText\": \"\"\r\n\t\t\t};\r\n\t\t\treturn GlobalFilter;\r\n\t\t},\r\n\t\t// move to util class\r\n\t\tgetStaticData: function (oContext){\r\n\t\t\tvar oBaseModel = this.getBaseModel(oContext);\r\n\t\t\tvar sPath = \"/VHCategories\";\r\n\t\t\tvar oExclude = {};\r\n\t\t\tvar filters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHCategories\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHDivisions\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHDivisions\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHPhases\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHPhases\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHInnovTypes\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHInnovTypes\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHQuestionnaires\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHQuestionnaires\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHMarketingObjectives\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHMarketingObjectives\");\r\n\t\t\t\r\n\t\t\tsPath = \"/ScoringModels\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"ScoringModels\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHDocsPeriod\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHDocsPeriod\");\r\n\t\t\t\r\n\t\t\tsPath = \"/VHManagers\";\r\n\t\t\toExclude = {};\r\n\t\t\tfilters = [];\r\n\t\t\tthis.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHManagers\");\r\n\t\t\t\r\n\t\t\t// sPath = \"/VHISubCategories\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHISubCategories\");\r\n\t\t\t\r\n\t\t\t// sPath = \"/VHIRegions\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHIRegions\");\r\n\t\t\t\r\n\t\t\t// sPath = \"/VHICategories\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHICategories\");\r\n\t\t\t\r\n\t\t\t// Todo: once VHConsumerDiffs fixed uncomment this code\r\n\t\t\t// sPath = \"/VHConsumerDiffs\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHConsumerDiffs\");\r\n\t\t\t\r\n\t\t\t// sPath = \"/VHInnovationTypes\";\r\n\t\t\t// oExclude = {};\r\n\t\t\t// filters = [];\r\n\t\t\t// this.readStaticData(oBaseModel, sPath, oExclude, filters, \"VHInnovationTypes\");\r\n\t\t\t\t\r\n\t\t},\r\n\t\treadStaticData: function(oModel, sPath, oExclude, oFilters, entityName){\r\n\t\t\tvar that = this;\r\n\t\t\toModel.read(sPath, {\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tfilters: oFilters,\r\n\t\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\t\tconsole.log(\"Success in reading\" + entityName );\r\n\t\t\t\t\t\tthat.setData(that, oDataIn, entityName);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tconsole.error(\"Error in reading:\" + entityName + \": + oError\");\r\n\t\t\t\t\t\t//oError.ErrorOrigin = \"MasterDataLoad\";\r\n\t\t\t\t\t\t//sap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t\t\r\n\t\t},\r\n\t\tsetData: function(oContext, oDataIn, entityName){\r\n\t\t\tvar oModel = sap.ui.getCore().getModel (\"PPMData\");\r\n\t\t\tvar oData = oModel.getData();\r\n\t\t\tif (entityName === \"VHDivisions\")\r\n\t\t\t{\r\n\t\t\t\toData.VHDivisions = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHHubs\")\r\n\t\t\t{\r\n\t\t\t\tif (!oData.VHHubs)\r\n\t\t\t\t\toData.VHHubs = {};\r\n\t\t\t\t\t\r\n\t\t\t\toData.VHHubs.Current = this.filterHubData(oDataIn.results);\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHHubsGF\")\r\n\t\t\t{\r\n\t\t\t\tif (!oData.VHHubs)\r\n\t\t\t\t\toData.VHHubs = {};\r\n\t\t\t\toData.VHHubs.CurrentGF = this.filterHubData(oDataIn.results);\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHPhases\")\r\n\t\t\t{\r\n\t\t\t\toData.VHPhases = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHCategories\")\r\n\t\t\t{\r\n\t\t\t\toData.VHCategories = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHSubcategories\")\r\n\t\t\t{\r\n\t\t\t\tif (!oData.VHSubCategories)\r\n\t\t\t\t\toData.VHSubCategories = {};\r\n\t\t\t\toData.VHSubCategories.Current = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHSubcategoriesGF\")\r\n\t\t\t{\r\n\t\t\t\tif (!oData.VHSubCategories)\r\n\t\t\t\t\toData.VHSubCategories = {};\r\n\t\t\t\toData.VHSubCategories.CurrentGF = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHInnovTypes\")\r\n\t\t\t{\r\n\t\t\t\toData.VHInnovTypes = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHQuestionnaires\")\r\n\t\t\t{\r\n\t\t\t\toData.VHQuestionnaires = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHMarketingObjectives\")\r\n\t\t\t{\r\n\t\t\t\toData.VHMarketingObjectives = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"ScoringModels\")\r\n\t\t\t{\r\n\t\t\t\toData.ScoringModels = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHDocsPeriod\")\r\n\t\t\t{\r\n\t\t\t\toData.VHDocsPeriod = oDataIn.results;\r\n\t\t\t}\r\n\t\t\telse if (entityName === \"VHManagers\")\r\n\t\t\t{\r\n\t\t\t\toData.VHManagers = {};\r\n\t\t\t\toData.VHManagers.All = oDataIn.results;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toModel.refresh(false);\r\n\t\t},\r\n\t\tfilterHubData: function (hubList)\r\n\t\t{\r\n\t\t\tvar newHubList = [];\r\n\t\t\tfor (var i = 0; i < hubList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (hubList[i].HubKey !== \"994\" && hubList[i].HubKey !== \"995\"  && hubList[i].HubKey !== \"996\" && hubList[i].HubKey !== \"997\" \r\n\t\t\t\t\t\t\t&& hubList[i].HubKey !== \"998\"  && hubList[i].HubKey !== \"999\")\r\n\t\t\t\t{\r\n\t\t\t\t\tnewHubList.push(hubList[i])\t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn newHubList;\r\n\t\t}\r\n\t\t\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/MgrUtils.js": "sap.ui.define([\r\n\t'sap/m/Dialog',\r\n\t'sap/m/MessageToast'\r\n], function(Dialog, MessageToast) {\r\n\t\"use strict\";\r\n\treturn {\r\n\t\tonChange: function(oEvent) {\r\n\t\t\tconsole.log(\"MgrUtils:onChange\");\r\n\t\t\tvar oSearchField = oEvent.getSource();\r\n\t\t\tvar value = oEvent.getParameter(\"value\");\r\n\t\t\tvar filters = [];\r\n\t\t\tif (value) {\r\n\t\t\t\tfilters = [new sap.ui.model.Filter([\r\n\t\t\t\t\tnew sap.ui.model.Filter(\"Name\", function(sText) {\r\n\t\t\t\t\t\treturn (sText || \"\").toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n\t\t\t\t\t})\r\n\t\t\t\t], false)];\r\n\t\t\t}\r\n\t\t\toSearchField.getBinding(\"items\").filter(filters);\r\n\t\t},\r\n\t\tonClose: function(oEvent) {\r\n\t\t\tconsole.log(\"MgrUtils:onClose\");\r\n\t\t\tif (this._oDialog) {\r\n\t\t\t\tthis._oDialog.destroy();\r\n\t\t\t}\r\n\t\t},\r\n\t\tonConfirm: function(oEvent) {\r\n\t\t\tconsole.log(\"MgrUtils:onConfirm\");\r\n\t\t\tvar sPath = oEvent.getParameter(\"selectedItems\")[0].getBindingInfo(\"title\").binding.getContext().getPath();\r\n\t\t\tthis._oComboBox.setSelectedKey(this._oDialog.getModel().getProperty(sPath).Id);\r\n\t\t\toEvent.getSource().getBinding(\"items\").filter([]);\r\n\t\t\tif (this._oDialog) {\r\n\t\t\t\tthis._oDialog.destroy();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonMgrShow: function(oEvent, oModel, oTextModel, oComboBox) {\r\n\t\t\tconsole.log(\"MgrUtils:onMgrShow\");\r\n\t\t\t\tif (this._oDialog) { \r\n\t\t\t\t\tthis._oDialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t\tthis._oDialog = sap.ui.xmlfragment(\"colpal.ppm.projectmgmt.fragment.MgrSelection\", this);\r\n\t\t\t\tthis._oDialog.setModel(oModel);\r\n\t\t\t\tthis._oDialog.setModel(oTextModel, \"i18n\");\r\n\t\t\t\tthis._oComboBox = oComboBox;\r\n\t\t\t\t// clear the old search filter\r\n\t\t\t\tthis._oDialog.getBinding(\"items\").filter([]);\r\n\t\t\t\tthis._oDialog.open();\r\n\t\t\t}\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/PersonalizationUtils.js": "sap.ui.define([\r\n\t\"sap/m/MessageToast\"\r\n], function(MessageToast) {\r\n\t\"use strict\";\r\n\treturn {\r\n\t\tp13nSave: function(oContext, oConfig, sKey) {\r\n\t\t\tthis.p13nSave2(oContext,oConfig,sKey,oContext.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"CP_savedMess\"));\r\n\t\t},\r\n\t\tp13nSave2: function(oContext, oConfig, sKey, sMessage) {\r\n\t\t\toContext.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", true); // Start Spinner\r\n\t\t\toContext.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t\r\n\t\t\t// Store Global Filter along with rest of personalizations\r\n\t\t\tvar ppmData = oContext.getOwnerComponent().getModel(\"PPMData\").refresh(false);\r\n\t\t\toConfig.GlobalFilter = ppmData.GlobalFilter;\r\n\t\t\t\r\n\t\t\tvar oPostData = {};\r\n\t\t\toPostData.PersKey = sKey;\r\n\t\t\toPostData.PersData = JSON.stringify(oConfig);\r\n\t\t\tvar oModel = oContext.getOwnerComponent().getModel(\"User\");\r\n\t\t\tvar sPath = \"/Personalizations\";\r\n\t\t\tvar that = oContext;\r\n\t\t\tvar sShowMessage = sMessage;\r\n\t\t\t\r\n\t\t\toModel.create(sPath, oPostData, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tvar oData = {};\r\n\t\t\t\t\toData[oDataIn.PersKey] = JSON.parse(oDataIn.PersData);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"P13n_Configuration\").setData(oData, true);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t\tMessageToast.show(sShowMessage);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"SavePersonalization\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\tp13nVariantSave: function(oContext, oConfig, sKey, sGuid, sDefaultVar, sDescription, bOld) {\r\n\t\t\toContext.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", true); // Start Spinner\r\n\t\t\toContext.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\tvar oPostData = {};\r\n\t\t\tif (bOld) {\r\n\t\t\t\toPostData.Guid = sGuid;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Store Global Filter along with rest of personalizations\r\n\t\t\tvar ppmData = oContext.getModel(\"PPMData\").getData();\r\n\t\t\toConfig.GlobalFilter = ppmData.GlobalFilter;\r\n\t\t\t\r\n\t\t\toPostData.PersKey = sKey;\r\n\t\t\toPostData.DefaultVar = sDefaultVar;\r\n\t\t\toPostData.Description = sDescription;\r\n\t\t\toPostData.PersData = JSON.stringify(oConfig);\r\n\t\t\tvar oModel = oContext.getOwnerComponent().getModel(\"User\");\r\n\t\t\tvar sPath = \"/Variants\";\r\n\t\t\tvar that = oContext;\r\n\t\t\t\r\n\t\t\toModel.create(sPath, oPostData, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tvar aVariants = that.getOwnerComponent().getModel(\"P13n_Variants\").getData().Variants;\r\n\t\t\t\t\tvar fragmentId = that.getView().createId(\"general\");\r\n\t\t\t\t\tvar oVariants = sap.ui.core.Fragment.byId(fragmentId, \"Variant\");\r\n\t\t\t\t\t// var oVariants = that.byId(\"Variant\");\r\n\t\t\t\t\tvar bUpdated = false;\r\n\t\t\t\t\tvar sMessage = \"\";\r\n\t\t\t\t\tfor (var i = 0; i < aVariants.length; i++) {\r\n\t\t\t\t\t\tif (aVariants[i].Guid === oDataIn.Guid) {\r\n\t\t\t\t\t\t\t// Update the entry\r\n\t\t\t\t\t\t\taVariants[i] = oDataIn;\r\n\t\t\t\t\t\t\tsMessage = that.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"CP_variantUpdated\", [aVariants[i].Description]);\r\n\t\t\t\t\t\t\tbUpdated = true;\r\n\t\t\t\t\t\t\ti = aVariants.length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!bUpdated) {\r\n\t\t\t\t\t\t// Must be new record\r\n\t\t\t\t\t\taVariants.push(oDataIn);\r\n\t\t\t\t\t\tvar iIndex = aVariants.length - 1;\r\n\t\t\t\t\t\tvar oVariant = oVariants.getVariantItems()[iIndex];\r\n\t\t\t\t\t\tif (!oVariant) {\r\n\t\t\t\t\t\t\toVariant = new sap.ui.comp.variants.VariantItem(\"Variant\" + iIndex, {\r\n\t\t\t\t\t\t\t\tglobal: false,\r\n\t\t\t\t\t\t\t\tlabelReadOnly: false,\r\n\t\t\t\t\t\t\t\treadOnly: false,\r\n\t\t\t\t\t\t\t\ttext: aVariants[i].Description,\r\n\t\t\t\t\t\t\t\tkey: \"Variant\" + iIndex\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\toVariants.addVariantItem(oVariant);\r\n\t\t\t\t\t\t\toVariants.setSelectionKey(\"Variant\" + iIndex);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\toVariant.setGlobal(false);\r\n\t\t\t\t\t\t\toVariant.setReadOnly(false);\r\n\t\t\t\t\t\t\toVariant.setLabelReadOnly(false);\r\n\t\t\t\t\t\t\toVariant.setText(oDataIn.Description);\r\n\t\t\t\t\t\t\toVariant.setKey(\"Variant\" + iIndex);\r\n\t\t\t\t\t\t\toVariants.setSelectionKey(\"Variant\" + iIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsMessage = that.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"CP_variantCreated\", [oDataIn.Description]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"SaveVariant\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\tp13nVariantDelete: function(oContext, oConfig, sKey, sGuid, sDescription, sPath) {\r\n\t\t\toContext.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", true); // Start Spinner\r\n\t\t\toContext.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\tvar oModel = oContext.getOwnerComponent().getModel(\"User\");\r\n\t\t\tvar that = oContext;\r\n\t\t\tvar sName = sDescription;\r\n\t\t\t\r\n\t\t\toModel.remove(sPath, {\r\n\t\t\t\tsuccess: function(oDataIn, oResponse) {\r\n\t\t\t\t\tvar sMessage = \"\";\r\n\t\t\t\t\tsMessage = that.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"CP_variantDeleted\", [sName]);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toError.ErrorOrigin = \"DeleteVariant\";\r\n\t\t\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"Errors\", oError);\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").setProperty(\"/oDetailBusy/busy\", false); // Stop Spinner\r\n\t\t\t\t\tthat.getOwnerComponent().getModel(\"masterShared\").refresh(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tp13nAddSortItem: function(oItemData, aSortItems) {\r\n\t\t\tvar oItem = {};\r\n\t\t\toItem.columnKey = oItemData.getProperty(\"columnKey\");\r\n\t\t\toItem.operation = oItemData.getProperty(\"operation\");\r\n\t\t\taSortItems.push(oItem);\r\n\t\t},\r\n\t\tp13nUpdateSortItem: function(oItemData, aSortItems, iIndex) {\r\n\t\t\taSortItems[iIndex].columnKey = oItemData.getProperty(\"columnKey\");\r\n\t\t\taSortItems[iIndex].operation = oItemData.getProperty(\"operation\");\r\n\t\t},\r\n\t\tp13nRemoveSortItem: function(oItemData, aSortItems, iIndex) {\r\n\t\t\tfor (var i = iIndex; i < aSortItems.length; i++) {\r\n\t\t\t\taSortItems[i] = aSortItems[i + 1];\r\n\t\t\t}\r\n\t\t\taSortItems.pop();\r\n\t\t},\r\n\t\tp13nAddFilterItem: function(oItemData, aFilterItems) {\r\n\t\t\tvar oItem = {};\r\n\t\t\toItem.columnKey = oItemData.getProperty(\"columnKey\");\r\n\t\t\toItem.operation = oItemData.getProperty(\"operation\");\r\n\t\t\toItem.value1 = oItemData.getProperty(\"value1\");\r\n\t\t\toItem.value2 = oItemData.getProperty(\"value2\");\r\n\t\t\toItem.exclude = oItemData.getProperty(\"exclude\");\r\n\t\t\taFilterItems.push(oItem);\r\n\t\t},\r\n\t\tp13nUpdateFilterItem: function(oItemData, aFilterItems, iIndex) {\r\n\t\t\taFilterItems[iIndex].columnKey = oItemData.getProperty(\"columnKey\");\r\n\t\t\taFilterItems[iIndex].operation = oItemData.getProperty(\"operation\");\r\n\t\t\taFilterItems[iIndex].value1 = oItemData.getProperty(\"value1\");\r\n\t\t\taFilterItems[iIndex].value2 = oItemData.getProperty(\"value2\");\r\n\t\t\taFilterItems[iIndex].exclude = oItemData.getProperty(\"exclude\");\r\n\t\t},\r\n\t\tp13nRemoveFilterItem: function(oItemData, aFilterItems, iIndex) {\r\n\t\t\tfor (var i = iIndex; i < aFilterItems.length; i++) {\r\n\t\t\t\taFilterItems[i] = aFilterItems[i + 1];\r\n\t\t\t}\r\n\t\t\taFilterItems.pop();\r\n\t\t}\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/CustomCurrencyType.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn sap.ui.model.type.Currency.extend(\"colgate.asm.budgeting.base.util.CustomCurrencyType\", {\r\n\t\tformatValue: function(aInput,sType) {\r\n\t\t\t//GDH aInput[0] = parseFloat(aInput[0]) / 1000;\r\n\t\t\taInput[0] = parseFloat(aInput[0]);\r\n\t\t\tif (sap.ui.model.type.Currency.prototype.formatValue) { // check whether superclass has  method\r\n\t\t\t\tvar sReturn = sap.ui.model.type.Currency.prototype.formatValue.apply(this, arguments); // call super\r\n\t\t\t}\r\n\t\t\t//GDH if (sReturn === \"0.00\" || sReturn === \"0,00\") {\r\n\t\t\tif (sReturn === \"0\") {\r\n\t\t\t\tsReturn = \"\";\r\n\t\t\t}\r\n\t\t\treturn sReturn;\r\n\t\t},\r\n\t\tparseValue: function(sValue,sType,oOther) {\r\n\t\t\tif (sap.ui.model.type.Currency.prototype.parseValue) { // check whether superclass has  method\r\n\t\t\t\tvar aReturn = sap.ui.model.type.Currency.prototype.parseValue.apply(this, arguments); // call super\r\n\t\t\t}\r\n\t\t\t//GDH aReturn[0] = parseFloat(aReturn[0]) * 1000;\r\n\t\t\taReturn[0] = parseFloat(aReturn[0]);\r\n\t\t\treturn aReturn;\r\n\t\t},\r\n\t\tvalidateValue: function(nValue) {\r\n\t\t    if (sap.ui.model.type.Currency.prototype.validateValue) { // check whether superclass has method\r\n\t\t\t\treturn sap.ui.model.type.Currency.prototype.validateValue.apply(this, arguments); // call super\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});",
		"colpal/ppm/projectmgmt/util/QuestionnaireUtil.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/util/DateUtils\",\r\n\t\"colpal/ppm/projectmgmt/util/IPMUtils\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/Dialog\"\r\n], function(DateUtils, IPMUtils, MessageToast, MessageBox, Dialog) {\r\n\t\"use strict\";\r\n\treturn {\r\n\t\ttestFunction: function ()\r\n\t\t{\r\n\t\t\tconsole.log(\"Test message\");\r\n\t\t},\r\n\t\tdisplayQuestionnaire: function(oContext){\r\n\t\t\t// var questionnaire = this.getMockData();\r\n\t\t\tvar that = this;\r\n\t\t\tvar ppmModel = IPMUtils.getPPMModel(null);\r\n\t\t\tvar ppmData = ppmModel.getData();\r\n\t\t\tvar pgiModel = oContext.getModel(\"PGI\");\r\n\t\t\tvar pgiData = pgiModel.getData();\r\n\t\t\t\r\n\t\t\tif (! pgiData.Questionnaire || pgiData.Questionnaire === null)\r\n\t\t\t{\r\n\t\t\t\t// var questionnaire = this.conifgQuestionnaire();\r\n\t\t\t\tpgiData.Questionnaire = this.conifgQuestionnaire(oContext);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpgiData.EditQuestionnaire = JSON.parse(JSON.stringify(pgiData.Questionnaire));\r\n\t\t\t\r\n\t\t\tvar dialog = new Dialog(\"NewAttachment\", {\r\n\t\t\t\ttitle: oContext.getModel(\"i18n\").getResourceBundle().getText(\"Questionnaire\"),\r\n\t\t\t\ttype: 'Message',\r\n\t\t\t\t// busy: \"{path: 'PGI>/AttachmentDialogBusy'}\",\r\n\t\t\t\tcontent: [\r\n\t\t\t\t\tnew sap.m.VBox({\r\n\t\t\t\t\t\tfitContainer: true,\r\n\t\t\t\t\t\talignItems: sap.m.FlexAlignItems.Start,\r\n\t\t\t\t\t\tjustifyContent: sap.m.FlexJustifyContent.SpaceBetween,\r\n\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\tnew sap.m.Text({\r\n\t\t\t\t\t\t\t\ttext: oContext.getModel(\"i18n\").getResourceBundle().getText(\"Please answer the questionnaire to determine the Project Type\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t//psutram: add Table\r\n\t\t\t\t\t\t\tnew sap.m.Table(\"idQTable\",{\r\n\t\t\t\t\t\t\t\tcolumns : [ new sap.m.Column({\r\n\t\t\t\t\t\t            width : \"4em\"\r\n\t\t\t\t\t\t            // header : new sap.m.Label({text : \r\n\t\t\t\t\t\t            // \t\t\toContext.getModel(\"i18n\").getResourceBundle().getText(\"Question\")})\r\n\t\t\t\t\t\t        }), new sap.m.Column({\r\n\t\t\t\t\t\t            width : \"2em\"\r\n\t\t\t\t\t\t            // header : new sap.m.Label({text : \r\n\t\t\t\t\t\t            // \t\t\toContext.getModel(\"i18n\").getResourceBundle().getText(\"Choice\")})\r\n\t\t\t\t\t\t        })],\r\n\t\t\t\t\t\t        items: {\r\n\t\t\t\t\t\t        \tpath: \"PGI>/EditQuestionnaire\",\r\n\t\t\t\t\t\t        \ttemplate: new sap.m.ColumnListItem({\r\n\t\t\t\t\t\t\t\t        cells:[\r\n\t\t\t\t\t\t\t\t        \t   new sap.m.Text({text:\"{PGI>QuestionDesc}\", maxLength: 240}),\r\n\t\t\t\t\t\t\t\t               //new sap.m.Input({value:\"{parts:[{path:'PGI>Answer'}]\"}),\r\n\t\t\t\t\t\t\t\t               //path: '{PGI>OptionId}', descending: false \r\n\t\t\t\t\t\t\t\t               new sap.m.ComboBox({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titems: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath: \"PGI>Options\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsorter: \"path: 'PGI>Valuation', descending: false\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplateShareable: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplate: new sap.ui.core.ListItem({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: \"{PGI>Valuation}\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: \"{PGI>OptionDesc}\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditable: \"{PGI>/Editable/Innovation}\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedKey: \"{PGI>AnswerValuation}\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t               ]\r\n\t\t\t\t\t\t           })\r\n\t\t\t\t\t\t        }\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t\t],\r\n\t\t\t\t\tbeginButton: new sap.m.Button({\r\n\t\t\t\t\ttext: oContext.getModel(\"i18n\").getResourceBundle().getText(\"OK\"),\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tif (pgiData.Editable.Innovation)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < pgiData.EditQuestionnaire.length; i++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (pgiData.EditQuestionnaire[i].AnswerValuation === \"\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvar sMessage = oContext.getModel(\"i18n\").getResourceBundle().getText(\"PGI_Questionnaire_QuestionsAnswered\");\r\n\t\t\t\t\t\t\t\t\tMessageToast.show(sMessage);\r\n\t\t\t\t\t\t\t\t\t//\"Please answer all questions in the Questionnaire\"\r\n\t\t\t\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// var iAnswer = parseInt(pgiData.Questionnaire[i].AnswerValuation);\r\n\t\t\t\t\t\t\t\t// answers [pgiData.Questionnaire[i].QuestionId] = iAnswer;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t\tthat.evauateAnswers(pgiData, ppmData);\r\n\t\t\t\t\t\t\tpgiData.Questionnaire = pgiData.EditQuestionnaire;\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\tvar maxCol =0 ;\r\n\t\t\t\t\t\t\tvar maxRow = 0;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < pgiData.Questionnaire.length; i++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar iAnswer = parseInt(pgiData.Questionnaire[i].AnswerValuation);\r\n\t\t\t\t\t\t\t\tif (iAnswer === -1)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (iAnswer >= 19 && iAnswer > maxCol)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmaxCol = iAnswer;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (iAnswer < 19 && iAnswer > maxRow)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmaxRow = iAnswer;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar result = maxCol * maxRow;\r\n\t\t\t\t\t\t\t// console.log(\"MaxCol:\" + maxCol + \" MaxRow:\" + maxRow + \" Result:\" + result);\r\n\t\t\t\t\t\t\tfor (var i = 0; i < ppmData.VHInnovTypes.length; i++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar iLow = parseInt(ppmData.VHInnovTypes[i].Low);\r\n\t\t\t\t\t\t\t\tvar iHigh = parseInt(ppmData.VHInnovTypes[i].High);\r\n\t\t\t\t\t\t\t\tif (result > iLow & result < iHigh)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpgiData.Project.InnovationKey = ppmData.VHInnovTypes[i].Key;  \r\n\t\t\t\t\t\t\t\t\ti = ppmData.VHInnovTypes.length;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t// if (result < 250)\r\n\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t// \tpgiData.Project.InnovationKey = \"0001\";                         \r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// else if (result > 250 && result < 290)\r\n\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t// \tpgiData.Project.InnovationKey = \"0002\";\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// else if (result > 290 && result < 350)\r\n\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t// \tpgiData.Project.InnovationKey = \"0003\";\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// else\r\n\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t// \tpgiData.Project.InnovationKey = \"0004\";\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\tpgiModel.refresh(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tendButton: new sap.m.Button({\r\n\t\t\t\t\ttext: oContext.getModel(\"i18n\").getResourceBundle().getText(\"Cancel\"),\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdialog.setModel(pgiModel, \"PGI\");\r\n\t\t\tdialog.setModel(oContext.getModel(\"i18n\"), \"i18n\");\r\n\t\t\t// this.attachmentDialog = dialog;\r\n\t\t\tpgiModel.refresh(false);\r\n\t\t\tdialog.open();\r\n\t\t},\r\n\t\tevauateAnswers: function(pgiData, ppmData){\r\n\t\t\tvar colValue = 0 ;\r\n\t\t\tvar rowValue = 0;\r\n\t\t\tvar answers = {\r\n\t\t\t\tCQ1: 0,\r\n\t\t\t\tCQ2: 0,\r\n\t\t\t\tRQ1: 0,\r\n\t\t\t\tRQ2: 0,\r\n\t\t\t\tCQ3: 0};\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < pgiData.EditQuestionnaire.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar iAnswer = parseInt(pgiData.EditQuestionnaire[i].AnswerValuation);\r\n\t\t\t\tanswers [pgiData.EditQuestionnaire[i].QuestionId] = iAnswer;\r\n\t\t\t}\r\n\t\t\t// =IF(E2=\"yes\",3,0)\r\n\t\t\t// =IF(C2=3,3,IF(E3=\"yes\",2,1))\r\n\t\t\t// =IF(C2=3,3,IF(C3=2,2,IF(E6=\"Yes\",2,1)))\r\n\t\t\t\r\n\t\t\t// =IF(D5=3,3,IF(E4=\"yes\",2,1))\r\n\t\t\t// =IF(E5=\"yes\",3,0)\r\n\t\t\t\r\n\t\t\tcolValue = answers.CQ1;\r\n\t\t\tif (colValue !== 3)\r\n\t\t\t{\r\n\t\t\t\tcolValue = answers.CQ2\t;\t\t\t\r\n\t\t\t}\r\n\t\t\tif (colValue === 1)\r\n\t\t\t{\r\n\t\t\t\tcolValue = answers.CQ3;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trowValue = answers.RQ1;\r\n\t\t\tif (rowValue !== 3)\r\n\t\t\t{\r\n\t\t\t\trowValue = answers.RQ2;\t\r\n\t\t\t\t// next two lines is temp\r\n\t\t\t\t// if (rowValue === 0)\r\n\t\t\t\t// \trowValue = 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.log(\"evauateAnswers: ColValue:\" + colValue + \" RowValue:\" + rowValue);\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < ppmData.ScoringModels.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (colValue === parseInt(ppmData.ScoringModels[i].ImColumn) && rowValue === parseInt(ppmData.ScoringModels[i].ImRow))\r\n\t\t\t\t{\r\n\t\t\t\t\tpgiData.Project.InnovationKey = ppmData.ScoringModels[i].ZimInnovatype;\r\n\t\t\t\t\tconsole.log(\"Found Matching Innovation Key:\" + pgiData.Project.InnovationKey);\r\n\t\t\t\t\ti = ppmData.ScoringModels.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tconifgQuestionnaire: function(oContext){\r\n\t\t\tvar ppmModel = IPMUtils.getPPMModel(null);\r\n\t\t\tvar ppmData = ppmModel.getData();\r\n\t\t\tvar pgiData = oContext.getModel(\"PGI\").getData();\r\n\t\t\tvar questionnaire = [];\r\n\t\t\tvar questionList = [];\r\n\t\t\tvar rpmGuid = \"\";\r\n\t\t\tvar rpmGuidC = \"\";\r\n\t\t\t\r\n\t\t\tif (pgiData.CurrentMode === \"Create\")\r\n\t\t\t\tquestionList = ppmData.VHQuestionnaires;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tif (! ppmData.ItemQuesAnswer || ppmData.ItemQuesAnswer === null || ppmData.ItemQuesAnswer.length === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(\"Using VHQuestionnaire to display QuestionList\");\r\n\t\t\t\t\tquestionList = ppmData.VHQuestionnaires;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(\"Using ItemQuesAnswer to display QuestionList\");\r\n\t\t\t\t\tquestionList = ppmData.ItemQuesAnswer;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trpmGuid = pgiData.Project.RpmGuid;\r\n\t\t\t\trpmGuidC = pgiData.Project.RpmGuidC;\r\n\t\t\t}\t\r\n\t\t\tfor (var i = 0; i < questionList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar matchedRow = this.questionExists(questionnaire, questionList[i]);\r\n\t\t\t\tconsole.log(\"conifgQuestionnaire:Id:\" + questionList[i].QuestionId + \":\" + matchedRow);\r\n\t\t\t\tif (matchedRow === -1)\r\n\t\t\t\t{\r\n\t\t\t\t\t// add row to questionnaire\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar newQuestion = {\r\n\t\t\t\t\t\tRpmGuid: rpmGuid,\r\n\t\t\t\t\t\tRpmGuidC: rpmGuidC,\r\n\t\t\t\t\t\t// AttributeId: questionList[i].AttributeId,\r\n\t\t\t\t\t\tQnnrId: questionList[i].QnnrId,\r\n\t\t\t\t\t\tQstgrpId: questionList[i].QstgrpId,\r\n\t\t\t\t\t\tQuestionId: questionList[i].QuestionId,\r\n\t\t\t\t\t\tQuestionDesc: questionList[i].QuestionDesc,\r\n\t\t\t\t\t\tQtype: questionList[i].Qtype,\r\n\t\t\t\t\t\tQtypeDesc: questionList[i].QtypeDesc,\r\n\t\t\t\t\t\tDisplayAs: questionList[i].DisplayAs,\r\n\t\t\t\t\t\tDisplayAsDesc: questionList[i].DisplayAsDesc,\r\n\t\t\t\t\t\tWeighting: questionList[i].Weighting,\r\n\t\t\t\t\t\tOptions: [{OptionId: questionList[i].OptionId,\r\n\t\t\t\t\t\t\t\t OptionDesc: questionList[i].OptionDesc,\r\n\t\t\t\t\t\t\t\t Valuation: questionList[i].Valuation,\r\n\t\t\t\t\t\t\t\t Answered: questionList[i].Answered\r\n\t\t\t\t\t\t}],\r\n\t\t\t\t\t\tAnswerValuation: -1\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (questionList[i].Answered === \"X\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnewQuestion.AnswerValuation = questionList[i].Valuation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tquestionnaire.push(newQuestion);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// add Option to questionnaire[i]\r\n\t\t\t\t\tvar newOptions = {OptionId: questionList[i].OptionId,\r\n\t\t\t\t\t\t\t\t OptionDesc: questionList[i].OptionDesc,\r\n\t\t\t\t\t\t\t\t Valuation: questionList[i].Valuation,\r\n\t\t\t\t\t\t\t\t Answered: questionList[i].Answered\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tif (questionList[i].Answered === \"X\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestionnaire[matchedRow].AnswerValuation = questionList[i].Valuation;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tif (questionList[i].OptionDesc === \"Yes\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestionnaire[matchedRow].Options.splice(0, 0, newOptions);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestionnaire[matchedRow].Options.push(newOptions);\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn questionnaire;\r\n\t\t\t\r\n\t\t},\r\n\t\tquestionExists: function(questionnaire, question){\r\n\t\t\tvar matchedRow = -1;\r\n\t\t\tfor (var i = 0; i < questionnaire.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (questionnaire[i].QuestionId === question.QuestionId)\r\n\t\t\t\t{\r\n\t\t\t\t\tmatchedRow = i;\r\n\t\t\t\t\treturn matchedRow; \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn matchedRow;\r\n\t\t},\r\n\t\tgetMockData: function()\r\n\t\t{\r\n\t\t\tvar questionnaire = [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"questionId\": \"Q1\",\r\n\t\t\t\t\t\"Name\": \"Is the core benefit of the innovation entirely new to consumers & the market? (ie the primary benefit of toothpaste is to clean teeth & freshen teeth)\",\r\n\t\t\t\t\t\"QType\": \"DropDown\",\r\n\t\t\t\t\t\"Options\": [{\"Text\":\"Yes\", \"Key\": 29},{\"Text\":\"No\", \"Key\": 0}],\r\n\t\t\t\t\t\"Answer\": -1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"questionId\": \"Q2\",\r\n\t\t\t\t\t\"Name\": \"Is the sub-benefit of the innovation new to consumers & the market, beyond fragrances & aesthetics (ie toothpaste that still cleans teeth but also now regrows enamel)\",\r\n\t\t\t\t\t\"QType\": \"DropDown\",\r\n\t\t\t\t\t\"Options\": [{\"Text\":\"Yes\", \"Key\": 23},{\"Text\":\"No\", \"Key\": 19}],\r\n\t\t\t\t\t// \"Options\": [{\"Yes\": 23},{\"No\": 19}],\r\n\t\t\t\t\t\"Answer\": -1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"questionId\": \"Q3\",\r\n\t\t\t\t\t\"Name\": \"Does this innovation have technology that delivers the benefit in a new way that ordinary consumers will notice as being different vs what's in market? (beyond fragrance & aesthetic changes)\",\r\n\t\t\t\t\t\"QType\": \"DropDown\",\r\n\t\t\t\t\t\"Options\": [{\"Text\":\"Yes\", \"Key\": 13},{\"Text\":\"No\", \"Key\": 11}],\r\n\t\t\t\t\t// \"Options\": [{\"Yes\": 13},{\"No\": 11}],\r\n\t\t\t\t\t\"Answer\": -1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"questionId\": \"Q4\",\r\n\t\t\t\t\t\"Name\": \"Will the innovation use a new business model for CP in it�s category? (ie online sales)\",\r\n\t\t\t\t\t\"QType\": \"DropDown\",\r\n\t\t\t\t\t\"Options\": [{\"Text\":\"Yes\", \"Key\": 17},{\"Text\":\"No\", \"Key\": 0}],\r\n\t\t\t\t\t// \"Options\": [{\"Yes\": 17},{\"No\": 0}],\r\n\t\t\t\t\t\"Answer\": -1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"questionId\": \"Q5\",\r\n\t\t\t\t\t\"Name\": \"Does this innovation create or enter into a new segment where CP currently does not compete? (ie Protex for Men)\",\r\n\t\t\t\t\t\"QType\": \"DropDown\",\r\n\t\t\t\t\t\"Options\": [{\"Text\":\"Yes\", \"Key\": 23},{\"Text\":\"No\", \"Key\": 19}],\r\n\t\t\t\t\t// \"Options\": [{\"Yes\": 23},{\"No\": 19}],\r\n\t\t\t\t\t\"Answer\": -1\r\n\t\t\t\t}];\r\n\t\t\t\t\r\n\t\t\treturn questionnaire;\t\r\n\t\t}\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/ColumnCatalog.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/model/formatter\"\r\n], function(formatter) {\r\n\t\"use strict\";\r\n\treturn {\r\n\t\tgetColumnCatalog: function(oContext) {\r\n\t\t\tvar oColumns = {\r\n\t\t\t\t\"ColumnCollection\": [{\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailItemName\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ItemDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 0\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailItemId\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ItemId\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 1\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCategoryDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CategoryDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 2\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailSubcategoryDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>SubcategoryDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 3\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailDivisionDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>DivisionDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 4\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailHubDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>HubDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 5\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailLaunchDate\"),\r\n\t\t\t\t\t\"path\": \"PPMData>LaunchDate\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 6\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailInnovationTypeDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>InnovationDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 7\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailItemTypeDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ItemtypeDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 8\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailPhaseDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>PhaseDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 9\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailStatusDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>PhasestatusDesc\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 10\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailStartDate\"),\r\n\t\t\t\t\t\"path\": \"PPMData>StartDate\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 11\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCurrencyDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CurrencyDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 12\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailGrid\"),\r\n\t\t\t\t\t\"path\": \"PPMData>Grid\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 13\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailBrand\"),\r\n\t\t\t\t\t\"path\": \"PPMData>BrandDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 14\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailSubbrandDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>SubbrandDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 15\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailStarfoDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>StarfoDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 16\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailProjmanagerDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ProjmanagerDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 17\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailFinamanagerDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>FinamanagerDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 18\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCreatedbyDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CreatedbyDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 19\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCreatedDate\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CreatedDate\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 20\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailMarkobjeDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>MarkobjeDesc\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 21\r\n\t\t\t\t}],\r\n\t\t\t\t\"SortItems\": [{\r\n\t\t\t\t\t// \"columnKey\": \"PPMData>ItemId\",\r\n\t\t\t\t\t\"columnKey\": \"ItemId\",\r\n\t\t\t\t\t\"operation\": \"Descending\"\r\n\t\t\t\t}],\r\n\t\t\t\t\"FilterItems\": [{\r\n\t\t\t\t\tcolumnKey: \"PPMData>ItemtypeDesc\",\r\n\t\t\t\t\toperation: \"Contains\",\r\n\t\t\t\t\tvalue1: \"Innovation Management\",\r\n\t\t\t\t\tvalue2: \"\",\r\n\t\t\t\t\texclude: false\r\n\t\t\t\t}],\r\n\t\t\t\t\"GlobalFilter\": {},\r\n\t\t\t\t\"FixedColumnConfig\": [{\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailItemName\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ItemDesc\",\r\n\t\t\t\t\t\"width\": \"12rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 0\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailItemId\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ItemId\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 1\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCategoryDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CategoryDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 2\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailSubcategoryDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>SubcategoryDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 3\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailDivisionDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>DivisionDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 4\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailHubDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>HubDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 5\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailLaunchDate\"),\r\n\t\t\t\t\t\"path\": \"PPMData>LaunchDate\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 6\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailInnovationTypeDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>InnovationDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 7\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailItemTypeDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ItemtypeDesc\",\r\n\t\t\t\t\t\"width\": \"12rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 8\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailPhaseDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>PhaseDesc\",\r\n\t\t\t\t\t\"width\": \"11rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 9\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailStatusDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>PhasestatusDesc\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": true,\r\n\t\t\t\t\t\"columnIndex\": 10\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailStartDate\"),\r\n\t\t\t\t\t\"path\": \"PPMData>StartDate\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 11\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCurrencyDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CurrencyDesc\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 12\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailGrid\"),\r\n\t\t\t\t\t\"path\": \"PPMData>Grid\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 13\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailBrand\"),\r\n\t\t\t\t\t\"path\": \"PPMData>BrandDesc\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 14\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailSubbrandDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>SubbrandDesc\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 15\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailStarfoDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>StarfoDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 16\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailProjmanagerDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>ProjmanagerDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 17\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailFinamanagerDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>FinamanagerDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 18\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCreatedbyDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CreatedbyDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 19\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailCreatedDate\"),\r\n\t\t\t\t\t\"path\": \"PPMData>CreatedDate\",\r\n\t\t\t\t\t\"width\": \"6rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 20\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"text\": oContext.getOwnerComponent().getModel(\"i18n\").getProperty(\"detailMarkobjeDesc\"),\r\n\t\t\t\t\t\"path\": \"PPMData>MarkobjeDesc\",\r\n\t\t\t\t\t\"width\": \"8rem\",\r\n\t\t\t\t\t\"visible\": false,\r\n\t\t\t\t\t\"columnIndex\": 21\r\n\t\t\t\t}],\r\n\t\t\t\tOtherConfig: {\r\n\t\t\t\t\tMaxTableRows: 10\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn oColumns;\r\n\t\t}\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/DateUtils.js": "sap.ui.define([\r\n\t\"sap/ui/core/format/DateFormat\",\r\n\t\"sap/m/MessageToast\"\r\n], function(DateFormat, MessageToast) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t_getSystemOffset: function() {\r\n\t\t\tvar fSystemOffset = 3600000;\r\n\t\t\treturn fSystemOffset;\r\n\t\t},\r\n\t\tgetSystemAdjISODateNoZ_fromISODate: function(sISODate) {\r\n\t\t\tvar oDate = new Date(sISODate);\r\n\t\t\treturn this.getSystemAdjISODate_fromDate(oDate);\r\n\t\t},\r\n\t\tgetSystemAdjISODate_fromCurrentDate: function() {\r\n\t\t\tvar oDate = new Date();\r\n\t\t\treturn this.getSystemAdjISODate_fromDate(oDate);\r\n\t\t},\r\n\t\tgetSystemAdjISODate_fromDate: function(oDate) {\r\n\t\t\tif (oDate)\r\n\t\t\t{\r\n\t\t\t\tvar iTime = oDate.getTime() + this._getSystemOffset();\r\n\t\t\t\tvar oRDate = new Date(iTime);\r\n\t\t\t\tvar sDate = oRDate.toISOString();\r\n\t\t\t\tsDate = sDate.replace(\"Z\", \"\");\r\n\t\t\t\treturn sDate;\r\n\t\t\t}\r\n\t\t},\r\n\t\tformatDate: function(sValue) {\r\n\t\t\tif (sValue) {\r\n\t\t\t\tvar sYear = sValue.substring(0, 4);\r\n\t\t\t\tvar sMonth = sValue.substring(5, 7);\r\n\t\t\t\tvar sDay = sValue.substring(8, 10);\r\n\t\t\t\tvar oDateFormat = sap.ui.core.format.DateFormat.getInstance({\r\n\t\t\t\t\tstyle: \"short\"\r\n\t\t\t\t});\r\n\t\t\t\tsValue = oDateFormat.format(new Date(sYear, sMonth - 1, sDay));\r\n\t\t\t}\r\n\t\t\treturn sValue;\r\n\t\t},\r\n\t\tformatTimestamp: function(sValue) {\r\n\t\t\tif (sValue && sValue !== \"\") {\r\n\t\t\t\tvar sYear = sValue.substring(0, 4);\r\n\t\t\t\tvar sMonth = sValue.substring(5, 7);\r\n\t\t\t\tvar sDay = sValue.substring(8, 10);\r\n\t\t\t\tvar sHour = sValue.substring(11, 13);\r\n\t\t\t\tvar sMin = sValue.substring(14, 16);\r\n\t\t\t\tvar oDateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({\r\n\t\t\t\t\tstyle: \"short\"\r\n\t\t\t\t});\r\n\t\t\t\tsValue = oDateFormat.format(new Date(sYear, sMonth - 1, sDay, sHour, sMin));\r\n\t\t\t} else {\r\n\t\t\t\tsValue = \"\";\r\n\t\t\t}\r\n\t\t\treturn sValue;\r\n\t\t}\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/CustomCurrencyFormatter.js": "sap.ui.define([\r\n\t\"colpal/ppm/projectmgmt/util/CustomCurrencyType\"\r\n], function(CustomCurrencyType) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tformatValue: function(fAmount,sCurrency) {\r\n\t\t\tvar bNegative = false;\r\n\t\t\tvar fUseAmount = fAmount;\r\n\t\t\tif (fAmount < 0) {\r\n\t\t\t\tbNegative = true;\r\n\t\t\t\tfUseAmount = - fAmount;\r\n\t\t\t}\r\n\t\t\tvar sFormattedAmount = CustomCurrencyType.prototype.formatValue.apply(new CustomCurrencyType({\r\n\t\t\t\tshowMeasure: false,\r\n\t\t\t\tminFractionDigits: 0,\r\n\t\t\t\tmaxFractionDigits: 0\r\n\t\t\t}), [\r\n\t\t\t\t[fUseAmount, sCurrency], \"string\"\r\n\t\t\t]);\r\n\t\t\tif (bNegative) {\r\n\t\t\t\tsFormattedAmount = \"(\" + sFormattedAmount + \")\";\r\n\t\t\t}\r\n\t\t\treturn sFormattedAmount;\r\n\t\t}\r\n\t};\r\n});",
		"colpal/ppm/projectmgmt/util/CustomCurrencyTypeFull.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn sap.ui.model.type.Currency.extend(\"colpal.ppm.projectmgmt.util.CustomCurrencyTypeFull\", {\r\n\t\tformatValue: function(aInput,sType) {\r\n\t\t\t//GDH aInput[0] = parseFloat(aInput[0]) / 1000;\r\n\t\t\t// aInput[0] = parseFloat(aInput[0]);\r\n\t\t\t// if (sap.ui.model.type.Currency.prototype.formatValue) { // check whether superclass has  method\r\n\t\t\t// \tvar sReturn = sap.ui.model.type.Currency.prototype.formatValue.apply(this, arguments); // call super\r\n\t\t\t// }\r\n\t\t\t// //GDH if (sReturn === \"0.00\" || sReturn === \"0,00\") {\r\n\t\t\t// if (sReturn === \"0\") {\r\n\t\t\t// \tsReturn = \"\";\r\n\t\t\t// }\r\n\t\t\tvar sReturn = \"\";\r\n\t\t\tsReturn = aInput.replace(/^0+/, '');\r\n\t\t\t\r\n\t\t\tsReturn = Number(aInput).toString();\r\n\t\t\treturn sReturn;\r\n\t\t},\r\n\t\tparseValue: function(sValue,sType,oOther) {\r\n\t\t\tif (sap.ui.model.type.Currency.prototype.parseValue) { // check whether superclass has  method\r\n\t\t\t\tvar aReturn = sap.ui.model.type.Currency.prototype.parseValue.apply(this, arguments); // call super\r\n\t\t\t}\r\n\t\t\t//GDH aReturn[0] = parseFloat(aReturn[0]) * 1000;\r\n\t\t\taReturn[0] = parseFloat(aReturn[0]);\r\n\t\t\treturn aReturn;\r\n\t\t},\r\n\t\tvalidateValue: function(nValue) {\r\n\t\t    if (sap.ui.model.type.Currency.prototype.validateValue) { // check whether superclass has method\r\n\t\t\t\treturn sap.ui.model.type.Currency.prototype.validateValue.apply(this, arguments); // call super\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});",
		"colpal/ppm/projectmgmt/model/formatter.js": "sap.ui.define([\r\n\t\"sap/ui/core/format/DateFormat\"\r\n], function(DateFormat) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tfolderText: function(sValue) {\r\n\t\t\t// if (! sValue) {\r\n\t\t\t// \treturn \"\";\r\n\t\t\t// }\t\r\n\t\t\treturn \"&nbsp;&nbsp;&nbsp;\" + sValue;\r\n\t\t} ,\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t},\r\n\t\tformatGrid: function(sValue) {\r\n\t\t\t// console.log(\"formatter:formatGrid:\" + sValue);\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tif (sValue === \"1\")\r\n\t\t\t{\r\n\t\t\t\treturn \"Yes\";\r\n\t\t\t}\r\n\t\t\telse if (sValue === \"0\")\r\n\t\t\t{\r\n\t\t\t\treturn \"No\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tformatDate: function(sValue) {\r\n\t\t\t// console.log(\"Formatter formatDate:\" + sValue);\r\n\t\t\t// if (sValue) {\r\n\t\t\t\t\r\n\t\t\t// \tvar sYear = sValue.substring(0, 4);\r\n\t\t\t// \t// Begin of Changes - Khrystyne Williams - Oct\r\n\t\t\t// \tvar sMonth = {};\r\n\t\t\t// \tvar sDay = {};\r\n\t\t\t// \tif (sValue.substring(4, 5) === \"-\") {\r\n\t\t\t// \t\tsMonth = sValue.substring(5, 7);\r\n\t\t\t// \t\tsDay = sValue.substring(8, 10);\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\tsMonth = sValue.substring(4, 6);\r\n\t\t\t// \t\tsDay = sValue.substring(6, 8);\r\n\t\t\t// \t}\r\n\t\t\t// \t// End of Changes - Khrystyne Williams - Oct\r\n\t\t\t// \t// New Values Updated\r\n\t\t\t// \t//var oDateFormat = sap.ui.core.format.DateFormat.getDateInstance({style: \"medium\"});\r\n\t\t\t// \tvar oDateFormat = sap.ui.core.format.DateFormat.getDateInstance({\r\n\t\t\t// \t\tpattern: \"MMM yyyy\"\r\n\t\t\t// \t});\r\n\t\t\t// \t//sValue = sMonth + \"/\" + sDay + \"/\" + sYear;\r\n\t\t\t// \tsValue = oDateFormat.format(new Date(sYear, sMonth - 1, sDay));\r\n\t\t\t// \t//var aValues = sValue.split(\" \");\r\n\t\t\t// \t//sValue = aValues[0] + \" \" + aValues[2];\r\n\t\t\t// }\r\n\t\t\tif (sValue){\r\n\t\t\t\t// var d =  Date.parse(sValue);\r\n\t\t\t\tvar d = new Date (sValue);\r\n\t\t\t\tvar oDateFormat = sap.ui.core.format.DateFormat.getDateInstance({pattern: \"MMM dd, yyyy\"});\r\n\t\t\t\tsValue = oDateFormat.format(d);\t\r\n\t\t\t}\r\n\t\t\treturn sValue + \"\";\r\n\t\t},\r\n\t\tformatDateShort: function(oDate){\r\n\t\t\t\tvar oDate = (oDate instanceof Date) ? oDate : new Date(oDate);\r\n\t\t\t\tvar dateFormat = sap.ui.core.format.DateFormat.getDateInstance({pattern : \"MMM dd, yyyy\" });\r\n\t\t\t\tvar sValue = dateFormat.format(oDate); \r\n\t\t\t\t return dateFormat.format(oDate);\r\n\t\t},\r\n\t\tformatTimestamp: function(sValue) {\r\n\t\t\tif (sValue && sValue !== \"\") {\r\n\t\t\t\tvar sYear = sValue.substring(0, 4);\r\n\t\t\t\tvar sMonth = sValue.substring(5, 7);\r\n\t\t\t\tvar sDay = sValue.substring(8, 10);\r\n\t\t\t\tvar sHour = sValue.substring(11, 13);\r\n\t\t\t\tvar sMin = sValue.substring(14, 16);\r\n\t\t\t\tvar oDateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({\r\n\t\t\t\t\tstyle: \"short\"\r\n\t\t\t\t});\r\n\t\t\t\t// sValue = sMonth + \"/\" + sDay + \"/\" + sYear + \" \" + sHour + \":\" + sMin;\r\n\t\t\t\tsValue = oDateFormat.format(new Date(sYear, sMonth - 1, sDay, sHour, sMin));\r\n\t\t\t} else {\r\n\t\t\t\tsValue = \"\";\r\n\t\t\t}\r\n\t\t\treturn sValue;\r\n\t\t},\r\n\t\tformatDateAndTime: function(sDate, sTime) {\r\n\t\t\t// console.log(\"Formatter: sDate:\" + sDate );\r\n\t\t\treturn sDate + \" \" + sTime;\t\r\n\t\t},\r\n\t\tcolumnHeader: function(sType, sMonth) {\r\n\t\t\tvar sHeader = sType + \" \" + sMonth;\r\n\t\t\treturn sHeader;\r\n\t\t},\r\n\t\taddRowStyle: function(sValue) {\r\n\t\t\tsap.ui.getCore().getEventBus().publish(\"colgate.asm.planning.project\", \"ApplyStyles\", {});\r\n\t\t\treturn sValue;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"colpal/ppm/projectmgmt/model/formatter-1.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t}\r\n\t};\r\n\r\n});",
		"colpal/ppm/projectmgmt/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"colpal/ppm/projectmgmt/model/GroupSortState.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/ui/model/Sorter\"\r\n], function(BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"colpal.ppm.projectmgmt.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias colpal.ppm.projectmgmt.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function(oViewModel) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\t// , fnGroupFunction\r\n\t\t\t// this._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by InitiativeName, or by \r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function(sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by , or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function(sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"InitiativeName\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"colpal/ppm/projectmgmt/view/ProjectGeneralInfo.view.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\r\n\txmlns:uc=\"sap.ui.unified.calendar\">\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<f:Form class=\"editableForm\" editable=\"true\" id=\"ProjectGeneralForm\" ariaLabelledBy=\"Title1\">\r\n\t\t\t<f:toolbar>\r\n\t\t\t\t<Toolbar id=\"Toolbar\">\r\n\t\t\t\t\t<Title id=\"Titlea\" text=\"{PGInfo>/Labels/Title1}\" level=\"H4\" titleStyle=\"H4\" visible=\"{PGInfo>/Visible/Title1}\"/>\r\n\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t<Button id=\"Save2\" text=\"{PGInfo>/Labels/Save2}\" press=\"onSaveAndAdd\" type=\"Emphasized\" visible=\"{PGInfo>/Visible/Save2}\"/>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</f:toolbar>\r\n\t\t\t<f:layout>\r\n\t\t\t\t<f:ResponsiveGridLayout/>\r\n\t\t\t</f:layout>\r\n\t\t\t<f:formContainers>\r\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\r\n\t\t\t\t\t<f:formElements>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PName\" label=\"{PGInfo>/Labels/PName}\" visible=\"{PGInfo>/Visible/ProjectName}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/ProjectName}\" id=\"ProjectName\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/ProjectName}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/ProjectName}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PID\" label=\"{PGInfo>/Labels/PID}\" visible=\"{PGInfo>/Visible/PID}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/PID}\" id=\"ProjectID\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/PID}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PID}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__IName\" label=\"{PGInfo>/Labels/IName}\" visible=\"{PGInfo>/Visible/IName}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/IName}\" id=\"InitiativeName\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/IName}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/IName}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement id=\"__IID\" label=\"{PGInfo>/Labels/IID}\" visible=\"{PGInfo>/Visible/IID}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/IID}\" id=\"InitiativeID\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/IID}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/IID}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement id=\"__Idea\" label=\"{PGInfo>/Labels/Idea}\" visible=\"{PGInfo>/Visible/Idea}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/Idea}\" id=\"Idea\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/Idea}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Idea}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement id=\"__PType\" label=\"{PGInfo>/Labels/PType}\" visible=\"{PGInfo>/Visible/PType}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/PType}\" id=\"PType\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/PType}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PType}\"/>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"PType\" items=\"{path:'masterShared>/ProjectTypes'}\" placeholder=\"{i18n>PGI_ProjectTypes}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/PType}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PType}\" enabled=\"{PGInfo>/Editable/PType}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t</f:formElements>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\r\n\t\t\t\t\t<f:formElements>\r\n\t\t\t\t\t\t<f:FormElement id=\"FEParent\" label=\"{AddActivity>/Labels/Parent}\" visible=\"{AddActivity>/Visible/Parent}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"false\" id=\"GlAccount\" value=\"{AddActivity>/Display/GlAccount}\" visible=\"{AddActivity>/Visible/GlAccount}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t</f:formElements>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t</f:formContainers>\r\n\t\t</f:Form>\r\n\t</VBox>\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/view/Master.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\" xmlns:semantic=\"sap.m.semantic\"\n\tcontrollerName=\"colpal.ppm.projectmgmt.controller.Master\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\">\n\t\t<semantic:subHeader>\n\t\t\t<!--<Bar id=\"headerBar\">-->\n\t\t\t<!--\t<contentMiddle>-->\n\t\t\t<!--\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" search=\"onSearch\"/>-->\n\t\t\t<!--\t</contentMiddle>-->\n\t\t\t<!--</Bar>-->\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"GeoFilterForm\" labelSpanL=\"2\"\n\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\">\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label text=\"{i18n>Master_Div}\"/>\n\t\t\t\t\t<ComboBox id=\"Division\" items=\"{path:'PPMData>/VHDivisions'}\" placeholder=\"{i18n>GlobalFilter_Placeholder_Divisions}\"\n\t\t\t\t\t\tselectedKey=\"{PPMData>/GlobalFilter/DivisionKey}\" selectionChange=\"onFilterChange\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>GeoKey}\" text=\"{PPMData>Desc}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label text=\"{i18n>Master_Hub}\"/>\n\t\t\t\t\t<ComboBox id=\"Hub\" items=\"{path:'PPMData>/VHHubs/CurrentGF', templateShareable: false}\" placeholder=\"{i18n>GlobalFilter_Placeholder_Hubs}\"\n\t\t\t\t\t\tselectedKey=\"{PPMData>/GlobalFilter/HubKey}\" selectionChange=\"onFilterChange\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>HubKey}\" text=\"{PPMData>Desc}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label text=\"{i18n>Master_Category}\"/>\n\t\t\t\t\t<ComboBox id=\"Category\" items=\"{path:'PPMData>/VHCategories'}\" placeholder=\"{i18n>GlobalFilter_Placeholder_Category}\"\n\t\t\t\t\t\tselectedKey=\"{PPMData>/GlobalFilter/CategoryKey}\" selectionChange=\"onFilterChange\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label text=\"{i18n>Master_SubCategory}\"/>\n\t\t\t\t\t<ComboBox id=\"SubCategory\" items=\"{path:'PPMData>/VHSubCategories/CurrentGF'}\" placeholder=\"{i18n>GlobalFilter_Placeholder_ProdCategory}\"\n\t\t\t\t\t\tselectedKey=\"{PPMData>/GlobalFilter/SubcategoryKey}\" selectionChange=\"onFilterChange\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label text=\"{i18n>Master_ProjectType}\"/>\n\t\t\t\t\t<ComboBox id=\"ProjectType\" items=\"{path:'PPMData>/VHInnovTypes'}\" placeholder=\"{i18n>GlobalFilter_Placeholder_Innovation}\"\n\t\t\t\t\t\tselectedKey=\"{PPMData>/GlobalFilter/InnovationKey}\" selectionChange=\"onFilterChange\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Value}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<Label text=\"{i18n>Master_Phase}\"/>\n\t\t\t\t\t<ComboBox id=\"Phase\" items=\"{path:'PPMData>/VHPhases'}\" placeholder=\"{i18n>PGI_Placeholder_Phases}\"\n\t\t\t\t\t\tselectedKey=\"{PPMData>/GlobalFilter/PhaseKey}\" selectionChange=\"onFilterChange\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t\t<!--<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>-->\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<!--<List id=\"list\" items=\"{ path: 'PPMData>/Initiatives', sorter: { path: 'Name', descending: false }, groupHeaderFactory: '.createGroupHeader' }\" -->\n\t\t\t<!--\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\" -->\n\t\t\t<!--\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" -->\n\t\t\t<!--\t\tgrowingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">-->\n\t\t\t<!--\t<infoToolbar>-->\n\t\t\t<!--\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">-->\n\t\t\t<!--\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>-->\n\t\t\t<!--\t\t</Toolbar>-->\n\t\t\t<!--\t</infoToolbar>-->\n\t\t\t<!--\t<items>-->\n\t\t\t<!--<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{InitiativeName}\">-->\n\t\t\t<!--\t<attributes>-->\n\t\t\t<!--\t\t\t<ObjectAttribute id=\"InitiativeAttribute\" text=\"{ProjectCategory}\" active=\"false\"/>-->\n\t\t\t<!--\t</attributes>-->\n\t\t\t<!--\t<firstStatus>-->\n\t\t\t<!--\t\t<ObjectStatus id=\"IntitativeStatus\" title=\"\" text=\"{path: 'ApprovalDate', type: 'sap.ui.model.type.Date'}\" state=\"None\"/>-->\n\t\t\t<!--\t</firstStatus>-->\n\t\t\t<!--\t<secondStatus>-->\n\t\t\t<!--\t\t<ObjectStatus id=\"InitiaitiveStatus2\" text=\"{Division}\" state=\"None\"/>-->\n\t\t\t<!--\t</secondStatus>-->\n\t\t\t<!--</ObjectListItem>-->\n\t\t\t<!--\t\t<ObjectListItem id=\"initiativeId\" showMarkers=\"false\" intro=\"{PPMData>Id}\"-->\n\t\t\t<!--\t\t\ttitle=\"{PPMData>Name}\" number=\"\" numberUnit=\"\" numberState=\"None\" -->\n\t\t\t<!--\t\t\ttype=\"Active\" selected=\"true\">-->\n\t\t\t<!--\t\t\t<attributes>-->\n\t\t\t<!--\t\t\t\t<ObjectAttribute id=\"InitiativeAttribute\"-->\n\t\t\t<!--\t\t\t\t\ttext=\"{PPMData>CategoryDesc}\" active=\"false\"/>-->\n\t\t\t<!--\t\t\t</attributes>-->\n\t\t\t<!--\t\t\t<firstStatus>-->\n\t\t\t<!--\t\t\t\t<ObjectStatus id=\"IntitativeStatus\" title=\"\"-->\n\t\t\t<!--\t\t\t\t\ttext=\"{path: 'PPMData>PlannedStart', type: 'sap.ui.model.type.Date'}\" state=\"None\"/>-->\n\t\t\t<!--\t\t\t</firstStatus>-->\n\t\t\t<!--\t\t\t<secondStatus>-->\n\t\t\t<!--\t\t\t\t<ObjectStatus id=\"InitiaitiveStatus2\"-->\n\t\t\t<!--\t\t\t\t\ttext=\"{PPMData>RegionDesc}\" state=\"None\"/>-->\n\t\t\t<!--\t\t\t</secondStatus>-->\n\t\t\t<!--\t\t</ObjectListItem>-->\n\t\t\t<!--\t</items>-->\n\t\t\t<!--</List>-->\n\t\t</semantic:content>\n\t\t<!--<semantic:addAction>-->\n\t\t<!--\t<semantic:AddAction id=\"addButton\" enabled=\"{appView>/addEnabled}\" press=\"onAdd\"/>-->\n\t\t<!--</semantic:addAction>-->\n\t\t<!--<semantic:mainAction>-->\n\t\t<!--    <semantic:MainAction text=\"All\" id=\"__action0\" press=\"onListAll\"/>-->\n\t\t<!--</semantic:mainAction>-->\n\t\t<!--<semantic:sort>-->\n\t\t<!--\t<semantic:SortSelect id=\"sort\" selectedKey=\"{appView>/masterSortBy}\" change=\"onSort\">-->\n\t\t<!--\t\t<core:Item id=\"masterSort1\" key=\"Name\" text=\"{i18n>masterSortInitiativeName}\"/>-->\n\t\t<!--\t\t<core:Item id=\"masterSort2\" key=\"PlannedStartDt\" text=\"{i18n>masterSortPlannedStartDt}\"/>-->\n\t\t<!--\t\t<core:Item id=\"masterSort3\" key=\"RegionDesc\" text=\"{i18n>masterSortDivision}\"/>-->\n\t\t<!--\t\t<core:Item id=\"masterSort4\" key=\"CategoryDesc\" text=\"{i18n>masterSortType}\"/>-->\n\t\t<!--\t</semantic:SortSelect>-->\n\t\t<!--</semantic:sort>-->\n\t\t<!--<semantic:filter>-->\n\t\t<!--    <semantic:FilterAction tooltip=\"Filter\" id=\"__action2\" press=\"onOpenViewSettings\"/>-->\n\t\t<!--</semantic:filter>-->\n\t</semantic:MasterPage>\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/CopyOfCreateEntity.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.CreateEntity\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\r\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\r\n\txmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\">\r\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"{viewModel>/viewTitle}\" busy=\"{viewModel>/busy}\">\r\n\t\t<semantic:content>\r\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"newEntitySimpleForm\"\r\n\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\"\r\n\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit'? 'Edit 54b24abcca8c76920cb8a7fe.initiatives': 'New 54b24abcca8c76920cb8a7fe.initiatives'}\">\r\n\t\t\t\t<f:content>\r\n\t\t\t\t\t<Label text=\"ID\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"ID\" id=\"ID_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'ID', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"InitiativeName\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"InitiativeName\" id=\"InitiativeName_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\"\r\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'InitiativeName', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"Status\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"Status\" id=\"Status_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'Status', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"ApprovalDate\" required=\"false\"/>\r\n\t\t\t\t\t<DatePicker name=\"ApprovalDate\" value=\"{ path: 'ApprovalDate', type: 'sap.ui.model.type.DateTime'}\" id=\"ApprovalDate_id\" type=\"DateTime\"\r\n\t\t\t\t\t\tenabled=\"true\" visible=\"true\"/>\r\n\t\t\t\t\t<Label text=\"LaunchDate\" required=\"false\"/>\r\n\t\t\t\t\t<DatePicker name=\"LaunchDate\" value=\"{ path: 'LaunchDate', type: 'sap.ui.model.type.DateTime'}\" id=\"LaunchDate_id\" type=\"DateTime\"\r\n\t\t\t\t\t\tenabled=\"true\" visible=\"true\"/>\r\n\t\t\t\t\t<Label text=\"Category\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"Category\" id=\"Category_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'Category', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"ProjectCategory\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"ProjectCategory\" id=\"ProjectCategory_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\"\r\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'ProjectCategory', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"Division\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"Division\" id=\"Division_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'Division', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"ProjectType\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"ProjectType\" id=\"ProjectType_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'ProjectType', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"ProjectScale\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"ProjectScale\" id=\"ProjectScale_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'ProjectScale', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"BriefIntiator\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"BriefIntiator\" id=\"BriefIntiator_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'BriefIntiator', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"Battlefield\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"Battlefield\" id=\"Battlefield_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\" visible=\"true\"\r\n\t\t\t\t\t\tvalue=\"{ path: 'Battlefield', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t\t<Label text=\"BriefInformation\" required=\"false\"/>\r\n\t\t\t\t\t<Input name=\"BriefInformation\" id=\"BriefInformation_id\" valueLiveUpdate=\"true\" liveChange=\"_validateSaveEnablement\" enabled=\"true\"\r\n\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'BriefInformation', type: 'sap.ui.model.odata.type.String' }\"/>\r\n\t\t\t\t</f:content>\r\n\t\t\t</f:SimpleForm>\r\n\t\t</semantic:content>\r\n\t\t<semantic:saveAction>\r\n\t\t\t<semantic:SaveAction id=\"save\" enabled=\"{viewModel>/enableCreate}\" press=\"onSave\"/>\r\n\t\t</semantic:saveAction>\r\n\t\t<semantic:cancelAction>\r\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"></semantic:CancelAction>\r\n\t\t</semantic:cancelAction>\r\n\t</semantic:DetailPage>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/App.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.App\" \r\n\t\t\txmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{masterShared>/busy}\"\r\n\tbusyIndicatorDelay=\"{masterShared>/delay}\" xmlns=\"sap.m\">\r\n\t<SplitApp id=\"idAppControl\" mode=\"HideMode\"/>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/ProjectsList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"colpal.ppm.projectmgmt.controller.ProjectsList\"\r\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\r\n\t<App>\r\n\t\t<pages>\r\n\t\t\t<Page title=\"Title\">\r\n\t\t\t\t<content>\r\n\t\t\t\t\t<core:Fragment id=\"general\" fragmentName=\"colpal.ppm.projectmgmt.fragment.ProjectList\" type=\"XML\" />\r\n\t\t\t\t</content>\r\n\t\t\t</Page>\r\n\t\t</pages>\r\n\t</App>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/NotFound.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/InitiativeList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:t=\"sap.ui.table\"\r\n\tcontrollerName=\"colpal.ppm.projectmgmt.controller.InitiativeList\" \r\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\r\n\t<App>\r\n\t\t<pages>\r\n\t\t\t<Page title=\"Title\">\r\n\t\t\t\t<content>\r\n\t\t\t<!--\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{/Initiatives}\" updateFinished=\"onListUpdateFinished\"-->\r\n\t\t\t<!--\tnoDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\">-->\r\n\t\t\t<!--\t<headerToolbar>-->\r\n\t\t\t<!--\t\t<Toolbar id=\"lineItemsToolbar\">-->\r\n\t\t\t<!--\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\"/>-->\r\n\t\t\t<!--\t\t</Toolbar>-->\r\n\t\t\t<!--\t</headerToolbar>-->\r\n\t\t\t\r\n\t\t<t:Table id=\"InListTable\" rows=\"{ path: 'PPMData>/Initiatives'}\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" \r\n\t\t\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\"\r\n\t\t\t\t\tselectionMode=\"Single\" selectionBehavior=\"RowOnly\">\r\n\t\t<t:toolbar>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Title id=\"title\" text=\"{i18n>INListTitle}\"></Title>\r\n\t\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ticon=\"sap-icon://sorting-ranking\"\r\n\t\t\t\t\t\t\ttooltip=\"{i18n>INListSortTooltip}\"\r\n\t\t\t\t\t\t\tpress=\"sortCategoriesAndName\"/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ticon=\"sap-icon://sort\"\r\n\t\t\t\t\t\t\ttooltip=\"{i18n>INListSortTooltip}\"\r\n\t\t\t\t\t\t\tpress=\"sortCategories\"/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ticon=\"sap-icon://decline\"\r\n\t\t\t\t\t\t\ttooltip=\"{i18n>INListClearSort}\"\r\n\t\t\t\t\t\t\tpress=\"clearAllSortings\"/>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</t:toolbar>\r\n\t\t\t\t<t:columns>\r\n\t\t\t\t\t<!--Initiative Name\tInitiative ID\tCategory\tProduct Category\t-->\r\n\t\t\t\t\t<!--Area (name it as division)\tPlanned Start\t-->\r\n\t\t\t\t\t<!--Planned Finish (name it as Launch date)\tNo. of projects linked-->\r\n\t\t\t\t\t<t:Column id=\"_inId\" width=\"11rem\" sortProperty=\"Id\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListItemId}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>Id}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inName\" width=\"11rem\" sortProperty=\"Name\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListItemName}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>Name}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inStatus\" width=\"11rem\" sortProperty=\"StatusDesc\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListStatus}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>StatusDesc}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inStartDt\" width=\"11rem\" sortProperty=\"StartDt\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListStartDt}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>StartDt}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inEndDt\" width=\"11rem\" sortProperty=\"EndDt\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListEndDt}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>EndDt}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inType\" width=\"11rem\" sortProperty=\"TypeDesc\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListTypeDesc}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>TypeDesc}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inDiv\" width=\"11rem\" sortProperty=\"RegionDesc\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListRegionDesc}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>RegionDesc}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inScale\" width=\"11rem\" sortProperty=\"ItemscaleDesc\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListScale}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>ItemscaleDesc}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t<t:Column id=\"_inGroup\" width=\"11rem\" sortProperty=\"GroupDesc\">\r\n\t\t\t\t\t\t<Label text=\"{i18n>INListGroupDesc}\" />\r\n\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t<Text text=\"{PPMData>GroupDesc}\"/>\r\n\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t</t:Column>\r\n\t\t\t\t</t:columns>\r\n\t\t\t\t\t\r\n\r\n      </t:Table>\r\n\t\t\t\t\t\r\n\t\t\t\t</content>\r\n\t\t\t</Page>\r\n\t\t</pages>\r\n\t</App>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\">\r\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\r\n\t\t<!--<filterItems>-->\r\n\t\t<!--\t<ViewSettingsFilterItem id=\"filterPCategory\" text=\"{i18n>masterFilterProdCategory}\" key=\"Price\" multiSelect=\"false\">-->\r\n\t\t<!--\t\t<items >-->\r\n\t\t<!--\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>-->\r\n\t\t<!--\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>-->\r\n\t\t<!--\t\t</items>-->\r\n\t\t<!--\t</ViewSettingsFilterItem>-->\r\n\r\n\t\t<!--</filterItems>-->\r\n\t\t<customTabs>\r\n\t\t\t<ViewSettingsCustomTab id=\"app-settings\" icon=\"sap-icon://action-settings\" title=\"{i18n>masterFilterTitle}\" tooltip=\"{i18n>masterFilterTooltip}\">\r\n\t\t\t\t<content>\r\n\t\t\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"masterFilterForm\" labelSpanL=\"3\"\r\n\t\t\t\tlabelSpanM=\"3\" labelSpanS=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\">\r\n\t\t\t\r\n\t\t\t\t\t<Label text=\"{i18n>masterFilterDiv}\"/>\r\n\t\t\t\t\t<ComboBox id=\"Division\" items=\"{path:'PPMData>/VHDivisions'}\" placeholder=\"{i18n>AC_P_division}\" selectedKey=\"{PPMData>/MasterFilter/Division}\" >\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>GeoKey}\" text=\"{PPMData>Desc}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t<Label text=\"{i18n>masterFilterPType}\"/>\r\n\t\t\t\t\t<ComboBox id=\"ProjectType\" items=\"{path:'PPMData>/ProjectType'}\" placeholder=\"{i18n>AC_P_division}\" selectedKey=\"{PPMData>/MasterFilter/ProjectType}\" >\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>GeoKey}\" text=\"{PPMData>Desc}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Label text=\"{i18n>masterFilterCategory}\"/>\r\n\t\t\t\t\t<ComboBox id=\"Category\" items=\"{path:'PPMData>/VHCategories'}\" placeholder=\"{i18n>AC_P_category}\" selectedKey=\"{PPMData>/MasterFilter/Category}\"\r\n\t\t\t\t\t\tselectionChange=\"onMasterFilterChange\">\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t<Label text=\"{i18n>masterFilterProdCategory}\"/>\r\n\t\t\t\t\t<ComboBox id=\"ProdCategory\" items=\"{path:'GeoFilter>/Subcategory/Current'}\" placeholder=\"{GeoFilter>/Placeholders/Subcategory}\"\r\n\t\t\t\t\t\tselectedKey=\"{PPMData>/MasterFilter/Subcategory}\" >\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<core:Item key=\"{GeoFilter>Key}\" text=\"{GeoFilter>Description}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t</f:SimpleForm>\r\n\t\t\t\t</content>\r\n\t\t\t</ViewSettingsCustomTab>\r\n\t\t</customTabs>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/view/Detail.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.Detail\" xmlns=\"sap.m\" \r\n\t\t\txmlns:t=\"sap.ui.table\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\"\r\n\t\t\txmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\">\r\n\t\t<!--<VBox class=\"sapUiResponsiveMargin\"></VBox>-->\r\n\r\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" \r\n\t\t\ttitle=\"{i18n>detailTitle}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\" class=\"noScrollSection\" >\r\n\r\n\t\t<semantic:content>\r\n\t\t\t<core:Fragment id=\"general\" fragmentName=\"colpal.ppm.projectmgmt.fragment.ProjectList\" type=\"XML\" />\r\n\t\t</semantic:content>\r\n\t\t<semantic:mainAction>\r\n\t    <!--<semantic:MainAction text=\"All\" id=\"__action0\" press=\"onListAll\"/>-->\r\n\t</semantic:mainAction>\r\n\t<!--<semantic:addAction>-->\r\n\t<!--\t\t<semantic:AddAction id=\"add\" press=\"onAdd\"/>-->\r\n\t<!--\t</semantic:addAction>-->\r\n\t</semantic:DetailPage>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/ProjectDetails.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.ProjectDetails\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\r\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\r\n\txmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\">\r\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"{PGI>/viewTitle}\" busy=\"{viewModel>/busy}\">\r\n\t\t<semantic:content>\r\n\t\t\t<IconTabBar selectedKey=\"__filter0\" id=\"__bar0\" select=\"onTabSelect\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<IconTabFilter text=\"{i18n>PE_Gen}\" id=\"__filter0\" icon=\"sap-icon://message-information\" iconColor=\"{PGI>/Project/ProjectGenInfoColor}\">\r\n\t\t\t\t\t\t<core:Fragment id=\"general\" fragmentName=\"colpal.ppm.projectmgmt.fragment.ProjectGeneralInfo\" type=\"XML\"/>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t\t<IconTabFilter text=\"{i18n>PE_Fin}\" count=\"{PGI>/ProjectFinCount}\" icon=\"sap-icon://customer-financial-fact-sheet\" iconColor=\"{PGI>/Project/ProjectFinInfoColor}\"\r\n\t\t\t\t\t\tid=\"_fin\" enabled=\"{PGI>/Editable/FinTab}\">\r\n\t\t\t\t\t\t<core:Fragment id=\"fin\" fragmentName=\"colpal.ppm.projectmgmt.fragment.ProjectFinInfo\" type=\"XML\"/>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t\t<IconTabFilter text=\"{i18n>PE_Attachment}\" count=\"{PGI>/ProjectAttCount}\" icon=\"sap-icon://attachment\" iconColor=\"{PGI>/Project/ProjectAttColor}\" id=\"_attachment\"\r\n\t\t\t\t\t\tenabled=\"{PGI>/Editable/AttTab}\">\r\n\t\t\t\t\t\t<core:Fragment id=\"attchmnt\" fragmentName=\"colpal.ppm.projectmgmt.fragment.ProjectAttachment\" type=\"XML\"/>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t\t<!--<ToolbarSpacer/>-->\r\n\t\t\t\t\t<IconTabFilter text=\"{i18n>PCLogTitle}\" icon=\"sap-icon://sap-box\" id=\"_logs\" enabled=\"{PGI>/Editable/LogTab}\" iconColor=\"{PGI>/Project/ProjectChangeLogsColor}\">\r\n\t\t\t\t\t\t<core:Fragment id=\"logs\" fragmentName=\"colpal.ppm.projectmgmt.fragment.ProjectChangeLogs\" type=\"XML\"/>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t</items>\r\n\t\t\t</IconTabBar>\r\n\t\t</semantic:content>\r\n\t\t<!--<semantic:flagAction>-->\r\n\t\t<!--\t<semantic:FlagAction id=\"copy\" text=\"Copy\" enabled=\"{PGI>/Editable/enableUpdate}\" press=\"onCopy\"/>-->\r\n\t\t<!--</semantic:flagAction>-->\r\n\t\t<!--<semantic:customFooterContent>-->\r\n\t\t<!--\t<Button id=\"copy\" visible=\"false\" text=\"Copy\" enabled=\"true\" press=\"onCopy\"/>-->\r\n\t\t<!--</semantic:customFooterContent>-->\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<!--<Button id=\"saveClose\" visible=\"true\" text=\"Save & Close\" enabled=\"true\" press=\"onSave\"/>-->\r\n\t\t\t<Button id=\"saveClose\" visible=\"{PGI>/Visible/enableSaveClose}\" text=\"{i18n>SaveClose}\" enabled=\"true\" press=\"onSave\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<Button id=\"save\" visible=\"{PGI>/Visible/enableUpdate}\" text=\"Save\" enabled=\"true\" press=\"onSave\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<Button id=\"edit\" visible=\"{PGI>/Visible/EditButton}\" text=\"Edit\" enabled=\"true\" press=\"onPressEdit\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<Button id=\"cancel\" visible=\"true\" text=\"Cancel\" enabled=\"true\"  press=\"onCancel\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t\t\r\n\t\t<!--<semantic:saveAction>-->\r\n\t\t<!--\t<semantic:SaveAction id=\"save\" enabled=\"{PGI>/Editable/enableUpdate}\" visible=\"{PGI>/Visible/enableUpdate}\" press=\"onSave\"/>-->\r\n\t\t<!--</semantic:saveAction>-->\r\n\t\t<!--<semantic:editAction>-->\r\n\t\t<!--\t<semantic:EditAction id=\"edit\" enabled=\"{PGI>/Editable/EditButton}\" visible=\"{PGI>/Visible/EditButton}\" press=\"onPressEdit\"/>-->\r\n\t\t<!--</semantic:editAction>-->\r\n\t\t<!--<semantic:cancelAction>-->\r\n\t\t<!--\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"></semantic:CancelAction>-->\r\n\t\t<!--</semantic:cancelAction>-->\r\n\t</semantic:DetailPage>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"colpal.ppm.projectmgmt.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"colpal/ppm/projectmgmt/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"colpal/ppm/projectmgmt/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"initiativesSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"colpal/ppm/projectmgmt/fragment/MgrSelection.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<SelectDialog noDataText=\"{i18n>MgrLookup_noDataText}\" title=\"{i18n>MgrLookup_Title}\" liveChange=\"onChange\" search=\"onChange\" \r\n\t\tconfirm=\"onConfirm\" close=\"onClose\"\r\n\t\titems=\"{path:'/VHManagers/All'}\">\r\n\t\t<!--close=\"onClose\"-->\r\n\t\t<StandardListItem title=\"{Name}\"/>\r\n\t</SelectDialog>\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/ProjectFinInfo.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\n\txmlns:uc=\"sap.ui.unified.calendar\" xmlns:t=\"sap.ui.table\">\n\t<VBox class=\"sapUiSmallMargin\">\n\t\t<t:Table id=\"lineItemsList\" rows=\"{PGI>/ProjectFinInfo}\" noDataText=\"{i18n>detailLineItemTableNoDataText}\"\n\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" visibleRowCount=\"{PGI>/Visible/FinInfoRowCount}\" fixedColumnCount=\"1\"\n\t\t\tselectionMode=\"Single\" sortOrder=\"PGI>leadHubIndicator\" selectionBehavior=\"RowOnly\" class=\"sapUiResponsiveMargin\">\n\t\t\t<t:toolbar>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Title id=\"title\" text=\"{i18n>PFIFinAtt}\"/>\n\t\t\t\t\t<Title id=\"divTitle\" text=\"{i18n>PFIDivision}:\"/>\n\t\t\t\t\t<ComboBox id=\"PFinDivisionTitle\" items=\"{path:'PPMData>/VHDivisions', templateShareable: true}\" selectedKey=\"{PGI>/Project/DivisionKey}\"\n\t\t\t\t\t\tvisible=\"{PGI>/Visible/PFinDivision}\" editable=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>GeoKey}\" text=\"{PPMData>Desc}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</ComboBox>\n\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t</Toolbar>\n\t\t\t</t:toolbar>\n\t\t\t<t:columns>\n\t\t\t\t<t:Column id=\"_hub\" width=\"8rem\">\n\t\t\t\t\t<Label text=\"{i18n>PFIHub}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<ComboBox id=\"PFinHub\" items=\"{path:'PPMData>/VHHubs/Current', templateShareable: true}\" placeholder=\"{i18n>PFin_Placeholder_Hubs}\"\n\t\t\t\t\t\t\tselectedKey=\"{PGI>HubKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/PFinHub}\" editable=\"{PGI>PFinHub}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>HubKey}\" text=\"{PPMData>Desc}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_rolloutdt\" width=\"7rem\">\n\t\t\t\t\t<Label text=\"{i18n>PFIRolloutDt}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<DatePicker id=\"PFinRolloutDt\" dateValue=\"{PGI>RolloutDate}\" placeholder=\"{i18n>PFI_Placeholder_RolloutDt}\" required=\"true\"\n\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/PFIRolloutDt}\" editable=\"false\" valueState=\"{PGI>ValueState_RolloutDate}\"\n\t\t\t\t\t\t\tvalueStateText=\"{PGI>ValueStateText_RolloutDate}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_currency\" width=\"6rem\">\n\t\t\t\t\t<Label text=\"{i18n>PFICurrency}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<ComboBox id=\"PFinCurrency\" items=\"{path:'PPMData>/VHCurrency', templateShareable: true}\" placeholder=\"{i18n>PFin_Placeholder_Currency}\"\n\t\t\t\t\t\t\tselectedKey=\"{PGI>CurrencyKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/PFinCurrency}\"\n\t\t\t\t\t\t\teditable=\"{PGI>/Editable/PFinCurrency}\" valueState=\"{PGI>ValueState_CurrencyKey}\" valueStateText=\"{PGI>ValueStateText_CurrencyKey}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Waers}\" text=\"{PPMData>Ktext}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_PFINetSales\" width=\"9rem\">\n\t\t\t\t\t<Label text=\"{i18n>PFINetSales}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Input id=\"PFinNetSales\" textAlign=\"Right\" editable=\"{PGI>/Editable/PFinNetSales}\" required=\"true\" liveChange=\"onHeaderChange\"\n\t\t\t\t\t\t\tsubmit=\"onFinInfoEnter\" visible=\"{PGI>/Visible/PFinNetSales}\" valueState=\"{PGI>ValueState_NetSales}\"\n\t\t\t\t\t\t\tvalueStateText=\"{PGI>ValueStateTest_NetSales}\" placeholder=\"{i18n>PFin_Placeholder_NetSales}\" tooltip=\"{i18n>PFin_tooltip_NetSales}\"\n\t\t\t\t\t\t\tvalue=\"{path: 'PGI>NetSalesEdit', type: 'sap.ui.model.type.Currency', formatOptions: {minFractionDigits: 0, maxFractionDigits: 0}, constraints: {minimum: 0}}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_IncrementalNetSales\" width=\"12rem\">\n\t\t\t\t\t<Label text=\"{i18n>PFIIncrementalNetSales}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Input id=\"PFinIncrementalNetSales\" placeholder=\"{i18n>PFin_Placeholder_IncrementalNetSales}\" textAlign=\"Right\" type=\"Number\"\n\t\t\t\t\t\t\tvalue=\"{path: 'PGI>IncrementalNetSales', type: 'sap.ui.model.type.Float', constraints : {minimum: 0,maximum: 100, maxFractionDigits: 1}}\"\n\t\t\t\t\t\t\teditable=\"{PGI>/Editable/PFinIncrementalNetSales}\" required=\"true\" visible=\"{PGI>/Visible/PFinIncrementalNetSales}\"\n\t\t\t\t\t\t\tvalueState=\"{PGI>ValueState_IncrementalNetSales}\" valueStateText=\"{PGI>ValueStateTest_IncrementalNetSales}\"\n\t\t\t\t\t\t\ttooltip=\"{i18n>PFin_tooltip_IncrementalNetSales}\" submit=\"onFinInfoEnter\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_Margin\" width=\"7rem\">\n\t\t\t\t\t<Label text=\"{i18n>PFIMargin}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Input id=\"PFinMargin\" placeholder=\"{i18n>PFin_Placeholder_Margin}\" textAlign=\"Right\" type=\"Number\"\n\t\t\t\t\t\t\tvalue=\"{path: 'PGI>Margin', type: 'sap.ui.model.type.Float', constraints : {minimum: 0,maximum: 100, maxFractionDigits: 1}}\"\n\t\t\t\t\t\t\teditable=\"{PGI>/Editable/PFinMargin}\" required=\"true\" visible=\"{PGI>/Visible/PFinMargin}\" valueState=\"{PGI>ValueState_Margin}\"\n\t\t\t\t\t\t\tvalueStateText=\"{PGI>ValueStateTest_Margin}\" tooltip=\"{i18n>PFin_tooltip_Margin}\" submit=\"onFinInfoEnter\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_EstimatedSpendAP\" width=\"8rem\" visible=\"false\">\n\t\t\t\t\t<Label text=\"{i18n>PFIEstimatedSpendAP}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Input id=\"PFinEstSpend\" placeholder=\"{i18n>PFin_Placeholder_EstSpend}\" textAlign=\"Right\"\n\t\t\t\t\t\t\tvalue=\"{path: 'PGI>EstimatedSpendAPEdit', type: 'sap.ui.model.type.Currency', formatOptions: {minFractionDigits: 0, maxFractionDigits: 0}, constraints: {minimum: 0}}\"\n\t\t\t\t\t\t\teditable=\"{PGI>/Editable/PFinEstSpend}\" required=\"true\" visible=\"{PGI>/Visible/PFinEstSpend}\" valueState=\"{PGI>ValueState_EstimatedSpendAP}\"\n\t\t\t\t\t\t\tvalueStateText=\"{PGI>ValueStateTest_EstimatedSpendAP}\" tooltip=\"{i18n>PFin_tooltip_EstSpend}\" liveChange=\"onHeaderChange\"\n\t\t\t\t\t\t\tsubmit=\"onFinInfoEnter\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_EstimatedSpendInsights\" width=\"11rem\" visible=\"false\">\n\t\t\t\t\t<Label text=\"{i18n>PFIEstimatedSpendInsights}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Input id=\"PFinEstSpendInsight\" placeholder=\"{i18n>PFin_Placeholder_EstSpendInsight}\" textAlign=\"Right\"\n\t\t\t\t\t\t\tvalue=\"{path: 'PGI>EstimatedSpendInsightsEdit', type: 'sap.ui.model.type.Currency', formatOptions: {minFractionDigits: 0, maxFractionDigits: 0}, constraints: {minimum: 0}}\"\n\t\t\t\t\t\t\teditable=\"{PGI>/Editable/PFinEstSpendInsight}\" required=\"true\" visible=\"{PGI>/Visible/PFinEstSpendInsight}\"\n\t\t\t\t\t\t\tvalueState=\"{PGI>ValueState_EstimatedSpendInsights}\" valueStateText=\"{PGI>ValueStateTest_EstimatedSpendInsights}\"\n\t\t\t\t\t\t\ttooltip=\"{i18n>PFin_tooltip_EstSpendInsight}\" liveChange=\"onHeaderChange\" submit=\"onFinInfoEnter\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_EstimatedDesign\" width=\"11rem\" visible=\"false\">\n\t\t\t\t\t<Label text=\"{i18n>PFIEstimatedDesign}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Input id=\"PFinEstSpendGDP\" placeholder=\"{i18n>PFin_Placeholder_EstSpendGDP}\" textAlign=\"Right\"\n\t\t\t\t\t\t\tvalue=\"{path: 'PGI>EstimatedDesignEdit', type: 'sap.ui.model.type.Currency', formatOptions: {minFractionDigits: 0, maxFractionDigits: 0}, constraints: {minimum: 0}}\"\n\t\t\t\t\t\t\teditable=\"{PGI>/Editable/PFinEstSpendGDP}\" required=\"true\" visible=\"{PGI>/Visible/PFinEstSpendGDP}\"\n\t\t\t\t\t\t\tvalueState=\"{PGI>ValueState_EstimatedDesign}\" valueStateText=\"{PGI>FC_ValueStateTest_EstimatedDesign}\"\n\t\t\t\t\t\t\ttooltip=\"{i18n>PFin_tooltip_EstSpendGDP}\" liveChange=\"onHeaderChange\" submit=\"onFinInfoEnter\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t</t:columns>\n\t\t</t:Table>\n\t</VBox>\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/ProjectChangeLogs.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\r\n\txmlns:uc=\"sap.ui.unified.calendar\" xmlns:t=\"sap.ui.table\">\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<t:Table id=\"changeLogsList\" rows=\"{PGI>/ProjectChangeLogs}\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" selectionMode=\"Single\"\r\n\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" selectionBehavior=\"RowOnly\" visibleRowCount=\"10\" sortOrder=\"PGI>leadHubIndicator\" class=\"sapUiResponsiveMargin\">\r\n\t\t\t<t:toolbar>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<!--<Title id=\"title\" text=\"{i18n>PCLogTitle}\" width=\"120px\" ></Title>-->\r\n\t\t\t\t\t<!--<ToolbarSpacer/>-->\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogs_TimeFrame}\" width=\"80px\" textAlign=\"Right\"  visible=\"true\"/>\r\n\t\t\t\t\t<ComboBox id=\"timeFrame\" items=\"{path:'PPMData>/VHDocsPeriod'}\" placeholder=\"{i18n>PCLogs_Placeholder_Timeframe}\"\r\n\t\t\t\t\t\tselectedKey=\"{PGI>/ChangeLogTimeFrame/SelectedKey}\" selectionChange=\"onPLogsTimeFrameChange\" width=\"120px\" visible=\"true\">\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t<!--<Text text=\"\" width=\"5px\"/>-->\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!--<ToolbarSpacer/>-->\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogs_FromDt}\" width=\"80px\" textAlign=\"Right\" visible=\"true\"/>\r\n\t\t\t\t\t<DatePicker id=\"fromDt\" dateValue=\"{path: 'PGI>/ChangeLogTimeFrame/FromDt'}\" placeholder=\"{i18n>PCLogs_Placeholder_FromDt}\" \r\n\t\t\t\t\t\t editable=\"{PGI>/ChangeLogTimeFrame/FromDtEditable}\"  width=\"120px\" visible=\"true\"/>\r\n\t\t\t\t\t<!--<ToolbarSpacer/>-->\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogs_ToDt}\" width=\"80px\" textAlign=\"Right\" visible=\"true\"/>\r\n\t\t\t\t\t<DatePicker id=\"toDt\" dateValue=\"{path: 'PGI>/ChangeLogTimeFrame/ToDt'}\" placeholder=\"{i18n>PCLogs_Placeholder_ToDt}\" \r\n\t\t\t\t\t\t editable=\"{PGI>/ChangeLogTimeFrame/ToDtEditable}\"  width=\"120px\" visible=\"true\"/>\r\n\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t<Button icon=\"sap-icon://search\" tooltip=\"{i18n>PCLogsSearch}\" press=\"onPLogsSearch\"/>\r\n\t\t\t\t\t<Button icon=\"sap-icon://decline\" tooltip=\"{i18n>PCLogsClearSettings}\" press=\"onClearPCLogsSettings\"/>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</t:toolbar>\r\n\t\t\t<t:columns>\r\n\t\t\t\t<t:Column id=\"_fieldName\" width=\"10rem\" sortProperty=\"FnameDesc\" filterProperty=\"FnameDesc\">\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogsFieldName}\"/>\r\n\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t<Input editable=\"false\" id=\"fieldName\" value=\"{PGI>FnameDesc}\"/>\r\n\t\t\t\t\t</t:template>\r\n\t\t\t\t</t:Column>\r\n\t\t\t\t<t:Column id=\"_oldValue\" width=\"10rem\" sortProperty=\"ValueOldDesc\" filterProperty=\"ValueOldDesc\">\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogsOldValue}\"/>\r\n\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t<Input editable=\"false\" id=\"oldValue\" value=\"{PGI>ValueOldDesc}\"/>\r\n\t\t\t\t\t</t:template>\r\n\t\t\t\t</t:Column>\r\n\t\t\t\t<t:Column id=\"_newValue\" width=\"10rem\" sortProperty=\"ValueNewDesc\" filterProperty=\"ValueNewDesc\">\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogsNewValue}\"/>\r\n\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t<Input editable=\"false\" id=\"newValue\" value=\"{PGI>ValueNewDesc}\"/>\r\n\t\t\t\t\t</t:template>\r\n\t\t\t\t</t:Column>\r\n\t\t\t\t<t:Column id=\"_updatedBy\" width=\"10rem\" sortProperty=\"Username\" filterProperty=\"Username\">\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogsUpdatedBy}\"/>\r\n\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t<Input editable=\"false\" id=\"updateBy\" value=\"{PGI>Username}\"/>\r\n\t\t\t\t\t</t:template>\r\n\t\t\t\t</t:Column>\r\n\t\t\t\t<t:Column id=\"_updatedDate\" width=\"10rem\" sortProperty=\"Udate\" filterProperty=\"uDate\">\r\n\t\t\t\t\t<Label text=\"{i18n>PCLogsUpdatedDate}\"/>\r\n\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t<!--<Input editable=\"false\" id=\"updatedDate\" value=\"{PGI>UDate}\"/>\r\n            {parts: [{path: 'PGI>Udate', type: 'sap.ui.model.type.DateTime', formatOptions: {style: 'medium'}},\r\n\t\t\t\t\t\t\t\t\t\t\t{path: 'PGI>Utime'}]}\r\n\t\t\t\t\t\t-->\r\n\t\t\t\t\t\t<Text text=\"{path: 'PGI>Udate', type: 'sap.ui.model.type.Date', formatOptions: {style: 'medium'}}\"/>\r\n\t\t\t\t\t</t:template>\r\n\t\t\t\t</t:Column>\r\n\t\t\t</t:columns>\r\n\t\t</t:Table>\r\n\t</VBox>\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/ProjectGeneralInfo.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\r\n\txmlns:uc=\"sap.ui.unified.calendar\" xmlns:t=\"sap.ui.table\">\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<f:Form class=\"editableForm\" editable=\"true\" id=\"ProjectGeneralForm\" ariaLabelledBy=\"Title1\" width=\"100%\">\r\n\t\t\t<f:layout>\r\n\t\t\t\t<f:ResponsiveGridLayout labelSpanL=\"4\" labelSpanM=\"4\" emptySpanL=\"0\" emptySpanM=\"0\" columnsL=\"2\" columnsM=\"2\"/>\r\n\t\t\t</f:layout>\r\n\t\t\t<f:formContainers >\r\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\r\n\t\t\t\t\t<f:formElements>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProjectAtt\" text=\"{i18n>PGIProjAtt}\" level=\"H4\" titleStyle=\"H4\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PName\" label=\"{i18n>PGIName}\" visible=\"{PGI>/Visible/ProjectName}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGI>/Editable/ProjectName}\" id=\"ProjectName\"  maxLength=\"40\"  liveChange=\"onDataChange\" placeholder=\"{i18n>PGI_Placeholder_ProjectName}\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"{PGI>/Project/ItemDesc}\" required=\"true\" visible=\"{PGI>/Visible/ProjectName}\" valueState=\"{PGI>/Project/ValueState_ItemDesc}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_ItemDesc}\" tooltip=\"{i18n>PNameTooltip}\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PID\" label=\"{i18n>PGIId}\" visible=\"{PGI>/Visible/PID}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGI>/Editable/PID}\" id=\"ProjectID\" value=\"{PGI>/Project/ItemId}\" visible=\"{PGI>/Visible/PID}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Phase\" label=\"{i18n>PGIPhase}\" visible=\"{PGI>/Visible/Phase}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Phase\" items=\"{path:'PPMData>/VHPhases'}\" placeholder=\"{i18n>PGI_Placeholder_Phases}\" selectedKey=\"{PGI>/Project/PhaseKey}\"\r\n\t\t\t\t\t\t\t\t\tselectionChange=\"onChange\" visible=\"{PGI>/Visible/Phase}\" editable=\"{PGI>/Editable/Phase}\" valueState=\"{PGI>/Project/ValueState_PhaseKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_PhaseKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Status\" label=\"{i18n>PGIStatus}\" visible=\"{PGI>/Visible/Status}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Status\" items=\"{path:'PPMData>/VHStatus/CurrentOptions'}\" placeholder=\"{i18n>PGI_Placeholder_Status}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/PhasestatusKey}\" selectionChange=\"onChange\" visible=\"{PGI>/Visible/Status}\" editable=\"{PGI>/Editable/Status}\"\r\n\t\t\t\t\t\t\t\t\tvalueState=\"{PGI>/Project/ValueState_PhasestatusKey}\" valueStateText=\"{PGI>/Project/ValueStateText_PhasestatusKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Grid\" label=\"{i18n>PGIGrid}\" visible=\"{PGI>/Visible/Grid}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<CheckBox enabled=\"{PGI>/Editable/Grid}\" selected=\"{PGI>/Project/Grid}\" visible=\"{PGI>/Visible/Grid}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Innovation\" label=\"{i18n>PGIInnovation}\" visible=\"{PGI>/Visible/Innovation}\" >\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Innovation\" items=\"{path:'PPMData>/VHInnovTypes'}\" placeholder=\"{i18n>PGI_Placeholder_Innovation}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/InnovationKey}\" selectionChange=\"onChange\" visible=\"{PGI>/Visible/Innovation}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"false\" valueState=\"{PGI>/Project/ValueState_InnovationKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_InnovationKey}\"\t>\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Value}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://activity-2\" class=\"size1\" \tvisible=\"true\" press=\"onProjectTypeQuestionnaire\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"{PGI>/Editable/InnovationKeyIconColor}\" tooltip=\"{PGI>/Editable/InnovationKeyIconTooltip}\" >\r\n\t\t\t\t\t\t\t\t</core:Icon>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PType\" label=\"{i18n>PGIPType}\" visible=\"{PGI>/Visible/PType}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"PType\" items=\"{path:'PPMData>/VHProjectTypes'}\" placeholder=\"{i18n>PGI_Placeholder_ProjectTypes}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/ProjecttypeKey}\" selectionChange=\"onChange\" visible=\"{PGI>/Visible/PType}\" editable=\"{PGI>/Editable/PType}\"\r\n\t\t\t\t\t\t\t\t\tvalueState=\"{PGI>/Project/ValueState_ProjecttypeKey}\" valueStateText=\"{PGI>/Project/ValueStateText_ProjecttypeKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Strategic\" label=\"{i18n>PGIStrategic}\" visible=\"{PGI>/Visible/Strategic}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Strategic\" items=\"{path:'PPMData>/VHStrategicFocus'}\" placeholder=\"{i18n>PGI_Placeholder_Strategic}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/StarfoKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/Strategic}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{PGI>/Editable/Strategic}\" valueState=\"{PGI>/Project/ValueState_StarfoKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_StarfoKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Marketing\" label=\"{i18n>PGIMarketing}\" visible=\"{PGI>/Visible/Marketing}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Marketing\" items=\"{path:'PPMData>/VHMarketingObjectives'}\" placeholder=\"{i18n>PGI_Placeholder_Marketing}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/MarkobjeKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/Marketing}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{PGI>/Editable/Marketing}\" valueState=\"{PGI>/Project/ValueState_MarkobjeKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_MarkobjeKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>ZimMarkobje}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\" \" width=\"8rem\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProdHierarchy\" text=\"{i18n>PGIProdHierarchy}\" level=\"H4\" titleStyle=\"H4\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__category\" label=\"{i18n>PGICategory}\" visible=\"{PGI>/Visible/Category}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Category\" items=\"{path:'PPMData>/VHCategories'}\" placeholder=\"{i18n>PGI_Placeholder_Category}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/CategoryKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/Category}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{PGI>/Editable/Category}\" valueState=\"{PGI>/Project/ValueState_CategoryKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_CategoryKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Subcategory\" label=\"{i18n>PGIProdCategory}\" visible=\"{PGI>/Visible/ProdCategory}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"SubCategory\" items=\"{path:'PPMData>/VHSubCategories/Current'}\" placeholder=\"{i18n>PGI_Placeholder_ProdCategory}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/SubcategoryKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/ProdCategory}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{PGI>/Editable/ProdCategory}\" valueState=\"{PGI>/Project/ValueState_SubcategoryKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_SubcategoryKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Brand\" label=\"{i18n>PGIBrand}\" visible=\"{PGI>/Visible/Brand}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Brand\" items=\"{path:'PPMData>/VHBrands/Current'}\" placeholder=\"{i18n>PGI_Placeholder_Brand}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/BrandKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/Brand}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{PGI>/Editable/Brand}\" valueState=\"{PGI>/Project/ValueState_BrandKey}\" valueStateText=\"{PGI>/Project/ValueStateText_BrandKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__SubBrand\" label=\"{i18n>PGISubBrand}\" visible=\"{PGI>/Visible/SubBrand}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"SubBrand\" items=\"{path:'PPMData>/VHSubBrands/Current'}\" placeholder=\"{i18n>PGI_Placeholder_SubBrand}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/SubbrandKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/SubBrand}\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{PGI>/Editable/SubBrand}\" valueState=\"{PGI>/Project/ValueState_SubbrandKey}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_SubbrandKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Key}\" text=\"{PPMData>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t</f:formElements>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\r\n\t\t\t\t\t<f:formElements>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProjectDts\" text=\"{i18n>PGIProjDates}\" level=\"H4\" titleStyle=\"H4\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__StartDt\" label=\"{i18n>PGIStartDt}\" visible=\"{PGI>/Visible/StartDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"StartDt\" dateValue=\"{path: 'PGI>/Project/StartDate'}\" placeholder=\"{i18n>PGI_Placeholder_StartDt}\" required=\"true\"\r\n\t\t\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/StartDt}\" editable=\"{PGI>/Editable/StartDt}\" valueState=\"{PGI>/Project/ValueState_StartDate}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_StartDate}\" change=\"handleDateChange\" tooltip=\"{i18n>INGridStartDate}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__FinishDt\" label=\"{i18n>PGIFinishDt}\" visible=\"{PGI>/Visible/FinishDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"ActualfinishDt\" dateValue=\"{PGI>/Project/PlannedFinish}\" placeholder=\"{i18n>PGI_Placeholder_FinishDt}\"\r\n\t\t\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/StartDt}\" editable=\"{PGI>/Editable/FinishDt}\" valueState=\"{PGI>/Project/ValueState_PlannedFinish}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_PlannedFinish}\"  change=\"handleDateChange\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__LaunchDt\" label=\"{i18n>PGILaunchDt}\" visible=\"{PGI>/Visible/StartDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"LaunchDt\" dateValue=\"{PGI>/Project/LaunchDate}\" placeholder=\"{i18n>PGI_Placeholder_LaunchDt}\"\r\n\t\t\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/StartDt}\" editable=\"{PGI>/Editable/StartDt}\" valueState=\"{PGI>/Project/ValueState_LaunchDate}\"\r\n\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_LaunchDate}\" change=\"handleDateChange\" tooltip=\"{i18n>INGridLaunchDate}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__CreateDt\" label=\"{i18n>PGICreateDt}\" visible=\"{PGI>/Visible/CreateDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"CreateDt\" dateValue=\"{PGI>/Project/CreatedDate}\" placeholder=\"{i18n>PGI_Placeholder_LaunchDt}\"\r\n\t\t\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/CreateDt}\" editable=\"false\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__UpdateDt\" label=\"{i18n>PGIUpdateDt}\" visible=\"{PGI>/Visible/UpdateDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"UpdateDt\" dateValue=\"{PGI>/Project/LastupdateDate}\" placeholder=\"{i18n>PGI_Placeholder_LaunchDt}\"\r\n\t\t\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/UpdateDt}\" editable=\"false\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\" \" width=\"8rem\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProjectMgrs\" text=\"{i18n>PGIResponsibleMgrs}\" level=\"H4\" titleStyle=\"H4\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PM\" label=\"{i18n>PGIPMgr}\" visible=\"{PGI>/Visible/PMgr}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"PMgr\" items=\"{PPMData>/VHManagers/All}\" placeholder=\"{i18n>PGI_Placeholder_PMgr}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/ProjmanagerKey}\"  \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PMgr}\" editable=\"false\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalueState=\"{PGI>/Project/ValueState_ProjmanagerKey}\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_ProjmanagerKey}\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Id}\" text=\"{PPMData>Name}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://employee\" class=\"size1\" visible=\"{PGI>/Editable/PMgr}\"  press=\"onPMgrSearch\" id=\"PMgrSearch\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"{PGI>/Editable/ProjmanagerKeyIconColor}\" tooltip=\"{PGI>/Editable/ProjmanagerKeyIconTooltip}\" >\r\n\t\t\t\t\t\t\t\t</core:Icon>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__FM\" label=\"{i18n>PGIFMgr}\" visible=\"{PGI>/Visible/FMgr}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"FMgr\" items=\"{PPMData>/VHManagers/All}\" placeholder=\"{i18n>PGI_Placeholder_FMgr}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/FinamanagerKey}\"  \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/FMgr}\" editable=\"false\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalueState=\"{PGI>/Project/ValueState_FinamanagerKey}\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>/Project/ValueStateText_FinamanagerKey}\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>Id}\" text=\"{PPMData>Name}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://employee\" class=\"size1\" visible=\"{PGI>/Editable/FMgr}\"  press=\"onPMgrSearch\" id=\"FMgrSearch\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"{PGI>/Editable/FinamanagerKeyIconColor}\" tooltip=\"{PGI>/Editable/FinamanagerKeyIconTooltip}\" >\r\n\t\t\t\t\t\t\t\t</core:Icon>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__CreatedBy\" label=\"{i18n>PGICreatedBy}\" visible=\"{PGI>/Visible/CreateDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"false\" id=\"CreatedBy\" \r\n\t\t\t\t\t\t\t\t\tvalue=\"{PGI>/Project/CreatedbyDesc}\" visible=\"{PGI>/Visible/CreateDt}\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\" \" width=\"8rem\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"Geo\" text=\"Geography\" level=\"H4\" titleStyle=\"H4\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PGIDivision1\" label=\"{i18n>PGIDivision}\" visible=\"{PGI>/Visible/Division}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"PGIDivision\" items=\"{path:'PPMData>/VHDivisions'}\" placeholder=\"{i18n>PGI_Placeholder_Divisions}\"\r\n\t\t\t\t\t\t\t\t\tselectedKey=\"{PGI>/Project/DivisionKey}\" selectionChange=\"onChange\" visible=\"{PGI>/Visible/Division}\" editable=\"{PGI>/Editable/Division}\"\r\n\t\t\t\t\t\t\t\t\tvalueState=\"{PGI>/Project/ValueState_DivisionKey}\" valueStateText=\"{PGI>/Project/ValueStateText_DivisionKey}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>GeoKey}\" text=\"{PPMData>Desc}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PGIHubs\" visible=\"{PGI>/Visible/Division}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<t:Table id=\"FinItemsList\" rows=\"{path: 'PGI>/ProjectFinInfo', \tfilters: [{path : 'rowMode', operator : 'NE', value1 : 'Delete'}] }\" noDataText=\"{i18n>detailLineItemTableNoDataText}\"\r\n\t\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" visibleRowCount=\"{PGI>/Visible/FinInfoRowCount}\" selectionMode=\"Single\" sortOrder=\"PGI>leadHubIndicator\"\r\n\t\t\t\t\t\t\t\t\tselectionBehavior=\"RowOnly\" class=\"sapUiResponsiveMargin\" width=\"80%\">\r\n\t\t\t\t\t\t\t\t\t<t:toolbar>\r\n\t\t\t\t\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://add\" tooltip=\"{i18n>PGI_Add_Hub}\" press=\"addFinHub\" visible=\"{PGI>/Visible/PFinAdd}\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t\t\t\t\t</t:toolbar>\r\n\t\t\t\t\t\t\t\t\t<t:columns>\r\n\t\t\t\t\t\t\t\t\t\t<t:Column id=\"_division1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<l:HorizontalLayout>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<l:content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{PGI>LeadHubText}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://delete\" tooltip=\"Delete\" press=\"deleteFinInfoRow\" visible=\"{PGI>PFinDel}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</l:content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</l:HorizontalLayout>\r\n\t\t\t\t\t\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t\t\t\t\t\t<t:Column id=\"_hub\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>PFIHub}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{PGInfo>HubDesc}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"PFinHub\" items=\"{path:'PPMData>/VHHubs/Current', templateShareable: false}\" placeholder=\"{i18n>PFin_Placeholder_Hubs}\" selectedKey=\"{PGI>HubKey}\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onChangeFinHub\" required=\"true\" visible=\"{PGI>/Visible/PFinHub}\" editable=\"{PGI>PGHub}\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalueState=\"{PGI>ValueState_HubKey}\" valueStateText=\"{PGI>ValueStateText_HubKey}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{PPMData>HubKey}\" text=\"{PPMData>Desc}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t\t\t\t\t\t<t:Column id=\"_rolloutdt\" width=\"10rem\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>PFIRolloutDt}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<t:template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<l:HorizontalLayout>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<l:content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker id=\"PFinRolloutDt\" dateValue=\"{PGI>RolloutDate}\" placeholder=\"{i18n>PFI_Placeholder_RolloutDt}\" required=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGI>/Visible/PFIRolloutDt}\" editable=\"{PGI>PGRolloutDtEnabled}\" valueState=\"{PGI>ValueState_RolloutDate}\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueStateText=\"{PGI>ValueStateText_RolloutDate}\" change=\"handleDateChange\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</l:content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</l:HorizontalLayout>\r\n\t\t\t\t\t\t\t\t\t\t\t</t:template>\r\n\t\t\t\t\t\t\t\t\t\t</t:Column>\r\n\t\t\t\t\t\t\t\t\t</t:columns>\r\n\t\t\t\t\t\t\t\t</t:Table>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t</f:formElements>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t</f:formContainers>\r\n\t\t</f:Form>\r\n\t</VBox>\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/CopyOfProjectGeneralInfo.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\r\n\txmlns:uc=\"sap.ui.unified.calendar\" >\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<f:Form class=\"editableForm\" editable=\"true\" id=\"ProjectGeneralForm\" ariaLabelledBy=\"Title1\"\r\n\t\twidth=\"100%\"\r\n\t\t\t\t>\r\n\t\t\t<!--<f:toolbar>-->\r\n\t\t\t<!--\t<Toolbar id=\"Toolbar\">-->\r\n\t\t\t\t\t<!--<Title id=\"Titlea\" text=\"{PGInfo>/Labels/Title1}\" level=\"H4\" titleStyle=\"H4\" visible=\"{PGInfo>/Visible/Title1}\"/>-->\r\n\t\t\t\t\t<!--<ToolbarSpacer/>-->\r\n\t\t\t\t\t<!--<Button id=\"Save2\" text=\"{PGInfo>/Labels/Save2}\" press=\"onSaveAndAdd\" type=\"Emphasized\" visible=\"{PGInfo>/Visible/Save2}\"/>-->\r\n\t\t\t<!--\t</Toolbar>-->\r\n\t\t\t<!--</f:toolbar>-->\r\n\t\t\t<f:layout>\r\n\t\t\t\t<f:ResponsiveGridLayout labelSpanL=\"4\" labelSpanM=\"4\" emptySpanL=\"0\" emptySpanM=\"0\" columnsL=\"2\" columnsM=\"2\" />\r\n\t\t\t</f:layout>\r\n\t\t\t<f:formContainers >\r\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\r\n\t\t\t\t\t<f:formElements>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProjectAtt\" text=\"{i18n>PGIProjAtt}\" level=\"H5\" titleStyle=\"H5\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PName\" label=\"{i18n>PGIName}\" visible=\"{PGInfo>/Visible/ProjectName}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/ProjectName}\" id=\"ProjectName\" \r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"ProjectName\"\tvalue=\"{ItemDesc}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/ProjectName}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PID\" label=\"{i18n>PGIId}\" visible=\"{PGInfo>/Visible/PID}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/PID}\" id=\"ProjectID\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PPMData>/Project/Input/ItemId}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PID}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__IName\" label=\"{i18n>PGIIName}\" visible=\"{PGInfo>/Visible/IName}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/IName}\" id=\"InitiativeName\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/IName}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/IName}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement id=\"__IID\" label=\"{i18n>PGIIId}\" visible=\"{PGInfo>/Visible/IID}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/IID}\" id=\"InitiativeID\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/IID}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/IID}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement id=\"__Idea\" label=\"{i18n>PGIIdea}\" visible=\"{PGInfo>/Visible/Idea}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Input editable=\"{PGInfo>/Editable/Idea}\" id=\"Idea\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"{PGInfo>/Display/Idea}\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Idea}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t<!--\t\t\t</f:formElements>-->\r\n\t\t\t<!--\t</f:FormContainer>-->\r\n\t\t\t<!--</f:formContainers>-->\r\n\t\t\t<!--\t\t\t<f:layout>-->\r\n\t\t\t<!--\t<f:ResponsiveGridLayout labelSpanL=\"4\" labelSpanM=\"4\" emptySpanL=\"0\" emptySpanM=\"0\" columnsL=\"2\" columnsM=\"2\" />-->\r\n\t\t\t<!--</f:layout>-->\r\n\t\t\t<!--<f:formContainers >-->\r\n\t\t\t<!--\t<f:FormContainer ariaLabelledBy=\"Title2\">-->\r\n\t\t\t<!--\t<f:formElements>-->\r\n\t\t\t\t\t\t<f:FormElement id=\"__PType\" label=\"{i18n>PGIPType}\" visible=\"{PGInfo>/Visible/PType}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"PType\" items=\"{path:'masterShared>/ProjectTypes'}\" placeholder=\"{i18n>PGI_ProjectTypes}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/PType}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PType}\" enabled=\"{PGInfo>/Editable/PType}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Phase\" label=\"{i18n>PGIPhase}\" visible=\"{PGInfo>/Visible/Phase}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Phase\" items=\"{path:'masterShared>/Phases'}\" placeholder=\"{i18n>PGI_Phases}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/Phases}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Phase}\" enabled=\"{PGInfo>/Editable/Phase}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Status\" label=\"{i18n>PGIStatus}\" visible=\"{PGInfo>/Visible/Status}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Status\" items=\"{path:'masterShared>/Status'}\" placeholder=\"{i18n>PGI_Status}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/Status}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Status}\" enabled=\"{PGInfo>/Editable/Status}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Grid\" label=\"{i18n>PGIGrid}\" visible=\"{PGInfo>/Visible/Grid}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<!--valueState=\"Error\"-->\r\n\t\t\t\t\t\t\t\t<CheckBox  enabled=\"{PGInfo>/Editable/Info}\" selected=\"{PGInfo>/Display/Grid}\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__PM\" label=\"{i18n>PGIPMgr}\" visible=\"{PGInfo>/Visible/PMgr}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"PMgr\" items=\"{path:'masterShared>/PMgr'}\" placeholder=\"{i18n>PGI_PMgr}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/PMgr}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/PMgr}\" enabled=\"{PGInfo>/Editable/PMgr}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__FM\" label=\"{i18n>PGIFMgr}\" visible=\"{PGInfo>/Visible/FMgr}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"FMgr\" items=\"{path:'masterShared>/FMgr'}\" placeholder=\"{i18n>PGI_FMgr}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/FMgr}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/FMgr}\" enabled=\"{PGInfo>/Editable/FMgr}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Innovation\" label=\"{i18n>PGIInnovation}\" visible=\"{PGInfo>/Visible/Innovation}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Innovation\" items=\"{path:'masterShared>/Innovation'}\" placeholder=\"{i18n>PGI_Innovation}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/Innovation}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Innovation}\" enabled=\"{PGInfo>/Editable/Innovation}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__BFld\" label=\"{i18n>PGIBFld}\" visible=\"{PGInfo>/Visible/BFld}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"BFld\" items=\"{path:'masterShared>/BattleField'}\" placeholder=\"{i18n>PGI_BFld}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/BattlefieldDesc}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/BFld}\" enabled=\"{PGInfo>/Editable/BFld}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Sgmnt\" label=\"{i18n>PGISegment}\" visible=\"{PGInfo>/Visible/Segment}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Sgmnt\" items=\"{path:'masterShared>/Segment'}\" placeholder=\"{i18n>PGI_Segment}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/SegmentDesc}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Segment}\" enabled=\"{PGInfo>/Editable/Segment}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t</f:formElements>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\r\n\t\t\t\t\t<f:formElements>\r\n\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProdHierarchy\" text=\"{i18n>PGIProdHierarchy}\" level=\"H5\" titleStyle=\"H5\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__category\" label=\"{i18n>PGICategory}\" visible=\"{PGInfo>/Visible/Category}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Category\" items=\"{path:'masterShared>/Category'}\" placeholder=\"{i18n>PGI_Category}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/CategoryDesc}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Category}\" enabled=\"{PGInfo>/Editable/Category}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Prodcategory\" label=\"{i18n>PGIProdCategory}\" visible=\"{PGInfo>/Visible/ProdCategory}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"ProdCategory\" items=\"{path:'masterShared>/ProdCategory'}\" placeholder=\"{i18n>PGI_ProdCategory}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/ProdCategoryDesc}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/ProdCategory}\" enabled=\"{PGInfo>/Editable/ProdCategory}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__Brand\" label=\"{i18n>PGIBrand}\" visible=\"{PGInfo>/Visible/Brand}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"Brand\" items=\"{path:'masterShared>/Brand'}\" placeholder=\"{i18n>PGI_Brand}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/BrandDesc}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/Brand}\" enabled=\"{PGInfo>/Editable/Brand}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__SubBrand\" label=\"{i18n>PGISubBrand}\" visible=\"{PGInfo>/Visible/SubBrand}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<ComboBox id=\"SubBrand\" items=\"{path:'masterShared>/SubBrand'}\" placeholder=\"{i18n>PGI_SubBrand}\"\r\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{PGInfo>/Display/SubBrandDesc}\" selectionChange=\"onChange\" \r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/SubBrand}\" enabled=\"{PGInfo>/Editable/SubBrand}\">\r\n\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{masterShared>Key}\" text=\"{masterShared>Description}\"/>\r\n\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</ComboBox>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement>\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Title id=\"ProjectDts\" text=\"{i18n>PGIProjDates}\" level=\"H5\" titleStyle=\"H5\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__StartDt\" label=\"{i18n>PGIStartDt}\" visible=\"{PGInfo>/Visible/StartDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"StartDt\" dateValue=\"{PGInfo>/Display/StartDt}\" placeholder=\"{i18n>PGI_StartDt}\"\r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/StartDt}\" enabled=\"{PGInfo>/Editable/StartDt}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__LaunchDt\" label=\"{i18n>PGILaunchDt}\" visible=\"{PGInfo>/Visible/StartDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<DatePicker id=\"LaunchDt\" dateValue=\"{PGInfo>/Display/LaunchDt}\" placeholder=\"{i18n>PGI_StartDt}\"\r\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{PGInfo>/Visible/StartDt}\" enabled=\"{PGInfo>/Editable/StartDt}\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__CreateDt\" label=\"{i18n>PGICreateDt}\" visible=\"{PGInfo>/Visible/CreateDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{path: '{PGInfo>/Display/StartDt}', type: 'sap.ui.model.type.DateTime', formatOptions: {style: 'medium'}}\" />\t\t\t\t\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement id=\"__UpdateDt\" label=\"{i18n>PGIUpdateDt}\" visible=\"{PGInfo>/Visible/UpdateDt}\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{path: '{PGInfo>/Display/UpdateDt}', type: 'sap.ui.model.type.DateTime', formatOptions: {style: 'medium'}}\" />\t\t\t\t\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\r\n\t\t\t\t\t</f:formElements>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t</f:formContainers>\r\n\t\t</f:Form>\r\n\t</VBox>\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/ProjectAttachment.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\r\n\txmlns:uc=\"sap.ui.unified.calendar\" xmlns:t=\"sap.ui.table\">\r\n\t<VBox class=\"sapUiSmallMargin\"></VBox>\r\n\t<t:TreeTable id=\"TreeTableAttachment\" rows=\"{path:'PGI>/ItemAttachments', parameters: {arrayNames:['children']}}\"\r\n\t\tselectionMode=\"Single\" selectionBehavior=\"RowOnly\" rowSelectionChange=\"onPAttRowSelectionChange\" enableSelectAll=\"false\" ariaLabelledBy=\"title\" toggleOpenState=\"onToggle\">\r\n\t\t<t:toolbar>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<!--title=\"{= ${viewModel>/mode} === 'edit'? 'Edit /IWBEP/GWSAMPLE_BASIC.SalesOrder': 'New /IWBEP/GWSAMPLE_BASIC.SalesOrder'}\">-->\r\n\t\t\t\t\t<Button text=\"{i18n>PAttAddAttachment}\" press=\"onAddAttachement\" tooltip=\"{i18n>PAttAddAttachment}\" visible=\"{PGI>/Visible/PAttAdd}\" type=\"Emphasized\"/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t<Button tooltip=\"{i18n>PAttdelete}\" icon=\"sap-icon://delete\" visible=\"{PGI>/Visible/PAttDelete}\" press=\"onDeleteAttachment\"/>\r\n\t\t\t\t\t<Button tooltip=\"{i18n>PAttcollapse}\" icon=\"sap-icon://collapse\" press=\"onCollapse\"/>\r\n\t\t\t\t\t<Button tooltip=\"{i18n>PAttexpand}\" icon=\"sap-icon://expand\" press=\"onExpand\"/>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</t:toolbar>\r\n\t\t\t<t:columns>\r\n\t\t\t<t:Column width=\"15rem\">\r\n\t\t\t\t<Label text=\"{i18n>PAttFolderName}\"/>\r\n\t\t\t\t<t:template>\r\n\t\t\t\t\t<FlexBox alignItems=\"Center\" direction=\"Row\">\r\n\t\t\t\t\t<core:Icon src=\"{PGI>iconPath}\" color=\"#031E48\" />\r\n\t\t\t\t\t<Text text=\"\" width=\"5px\"/>\r\n\t\t\t\t\t<Text text=\"{PGI>Text}\"/>\r\n\t\t\t\t\t</FlexBox>\r\n\t\t\t\t</t:template>\r\n\t\t\t</t:Column>\r\n\t\t\t<t:Column width=\"12rem\">\r\n\t\t\t\t<Label text=\"{i18n>PAttFile}\"/>\r\n\t\t\t\t<t:template>\r\n\t\t\t\t\t<!--<Text text=\"{PGI>ActFileDescription}\" />-->\r\n\t\t\t\t\t<Link text=\"{PGI>ActFileName} \" press=\"onAttachmentPress\"  />\r\n\t\t\t\t</t:template>\r\n\t\t\t</t:Column>\r\n\t\t\t<t:Column width=\"12rem\">\r\n\t\t\t\t<Label text=\"{i18n>PAttURL}\"/>\r\n\t\t\t\t<t:template>\r\n\t\t\t\t\t\t<Link text=\"{PGI>ActFileURL}\" target=\"_blank\" href=\"{PGI>ActFileURL}\"  />\r\n\t\t\t\t\t\t<!--<Link text=\"{PGI>ActFileDescription}\" press=\"onAttachmentPress\"  />-->\r\n\t\t\t\t\t\t<!--<Text text=\"{PGI>ActFileDescription1}\" />-->\r\n\t\t\t\t</t:template>\r\n\t\t\t</t:Column>\r\n\t\t\t<t:Column width=\"8rem\">\r\n\t\t\t\t<Label text=\"{i18n>PAttUploadedDt}\"/>\r\n\t\t\t\t<t:template>\r\n\t\t\t\t\t<Text text=\"{path: 'PGI>DocumentCreatedOnDate', type: 'sap.ui.model.type.Date', formatOptions: {style: 'medium'}}\"/>\r\n\t\t\t\t</t:template>\r\n\t\t\t</t:Column>\r\n\t\t\t<t:Column width=\"8rem\">\r\n\t\t\t\t<Label text=\"{i18n>PAttUploadedBy}\"/>\r\n\t\t\t\t<t:template>\r\n\t\t\t\t\t<Text text=\"{PGI>DocumentCreatedByName}\" />\r\n\t\t\t\t</t:template>\r\n\t\t\t</t:Column>\r\n\t\t</t:columns>\r\n\t</t:TreeTable>\r\n\t<UploadCollection\r\n\t\t\t\tid=\"UploadCollection\"\r\n\t\t\t\tmaximumFilenameLength=\"55\"\r\n\t\t\t\tmaximumFileSize=\"25\"\r\n\t\t\t\tmultiple=\"false\"\r\n\t\t\t\tshowSeparators=\"All\"\r\n\t\t\t\tchange=\"onChange\"\r\n\t\t\t\tfileSizeExceed=\"onFileSizeExceed\"\r\n\t\t\t\tselectionChange=\"onSelectionChange\"\r\n\t\t\t\ttypeMissmatch=\"onTypeMissmatch\"\r\n\t\t\t\tuploadComplete=\"onUploadComplete\"\r\n\t\t\t\tbeforeUploadStarts=\"onBeforeUploadStarts\"\r\n\t\t\t\tuploadTerminated=\"onUploadTerminated\"\r\n\t\t\t\titems=\"{path : 'PGI>/ItemAttachmentsSet', templateShareable : 'true'}\"\r\n\t\t\t\tmode=\"SingleSelect\"\r\n\t\t\t\tvisible=\"false\">\r\n\t\t\t\t<toolbar>\r\n\t\t\t\t\t<OverflowToolbar id=\"myId\" >\r\n\t\t\t\t\t\t<Title id=\"attachmentTitle\"/>\r\n\t\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t\t<Button id=\"downloadButton\" text=\"Download\" press=\"onDownloadItem\" enabled=\"false\" type=\"Transparent\"></Button>\r\n\t\t\t\t\t\t<!--<Button id=\"versionButton\" text=\"Upload a new version\" press=\"onVersion\" enabled=\"false\" type=\"Transparent\"></Button>-->\r\n\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\r\n\t\t\t\t\t</OverflowToolbar>\r\n\t\t\t\t</toolbar>\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<UploadCollectionItem\r\n\t\t\t\t\t\tdocumentId=\"{fileId}\"\r\n\t\t\t\t\t\tfileName=\"{PGI>Text}\"\r\n\t\t\t\t\t\tmimeType=\"{PGI>ActFileMimetype}\"\r\n\t\t\t\t\t\turl=\"{PGI>fileURL}\"\r\n\t\t\t\t\t\tenableEdit=\"false\"\r\n\t\t\t\t\t\tenableDelete=\"false\"\r\n\t\t\t\t\t\tvisibleDelete=\"false\"\r\n\t\t\t\t\t\tvisibleEdit=\"false\"\r\n\t\t\t\t\t\tattributes=\"{path : 'attributes', templateShareable : 'true'}\"\r\n\t\t\t\t\t\tstatuses=\"{path : 'statuses', templateShareable : 'true'}\"\r\n\t\t\t\t\t\tselected=\"{selected}\">\r\n\t\t\t\t\t\t<attributes>\r\n\t\t\t\t\t\t\t<ObjectAttribute\r\n\t\t\t\t\t\t\t\ttitle=\"{PGI>fileURL}\"\r\n\t\t\t\t\t\t\t\ttext=\"{PGI>Text}\"\r\n\t\t\t\t\t\t\t\tactive=\"{active}\"/>\r\n\t\t\t\t\t\t</attributes>\r\n\t\t\t\t\t\t<statuses>\r\n\t\t\t\t\t\t\t<ObjectStatus\r\n\t\t\t\t\t\t\t\ttitle=\"{PGI>Text}\"\r\n\t\t\t\t\t\t\t\ttext=\"{PGI>mimeType}\"\r\n\t\t\t\t\t\t\t\tstate=\"{PGI>Text}\"\r\n\t\t\t\t\t\t\t\ticon=\"{PGI>icon}\"\r\n\t\t\t\t\t\t\t\ticonDensityAware=\"{iconDensityAware}\"\r\n\t\t\t\t\t\t\t\ttextDirection=\"{textDirection}\"/>\r\n\t\t\t\t\t\t</statuses>\r\n\t\t\t\t\t</UploadCollectionItem>\r\n\t\t\t\t</items>\r\n\t\t\t</UploadCollection>\r\n\t\t\t\r\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/ProjectList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\" xmlns=\"sap.m\"\n\txmlns:uc=\"sap.ui.unified.calendar\" xmlns:t=\"sap.ui.table\" xmlns:c=\"sap.ui.commons\" xmlns:v=\"sap.ui.comp.variants\">\n\t<!--<VBox class=\"sapUiNoMarginBegin sapUiNoMarginEnd\"></VBox>-->\n\t<VBox class=\"noScrollSection\">\n\t\t<t:Table id=\"lineItemsList\" rows=\"{ path: 'PPMData>/Items/Current'}\" noDataText=\"{i18n>detailLineItemTableNoDataText}\"\n\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" selectionMode=\"Single\" selectionBehavior=\"RowOnly\" class=\"SapUiResponsiveMargin\"\n\t\t\trowSelectionChange=\"onRowSelectionChange\" fixedColumnCount=\"1\" rowHeight=\"40\" columnMove=\"onColumnMove\" filter=\"onColumnFilter\"\n\t\t\tsort=\"onColumnSort\" tooltip=\"PPMData>/Items/Length\" minAutoRowCount=\"11\" visibleRowCount=\"11\" threshold=\"5000\" visibleRowCountMode=\"Auto\">\n\t\t\t<!--fixedColumnCount=\"1\"-->\n\t\t\t<t:toolbar>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<!--title=\"{= ${viewModel>/mode} === 'edit'? 'Edit /IWBEP/GWSAMPLE_BASIC.SalesOrder': 'New /IWBEP/GWSAMPLE_BASIC.SalesOrder'}\">-->\n\t\t\t\t\t<Button text=\"{i18n>detailNewProject}\" press=\"onAdd\" tooltip=\"{i18n&gt;detailNewProject}\" type=\"Emphasized\"\n\t\t\t\t\t\tvisible=\"{detailView>/createProjectVisible}\"/>\n\t\t\t\t\t<Title id=\"title\" text=\"{= ${viewModel>/mode} === 'ProjectsByInitiative'? 'Project List for Initiative': 'All Projects'}\"></Title>\n\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t<!--<Button icon=\"sap-icon://sorting-ranking\" tooltip=\"Sort ascending across Categories and Name\" press=\"sortCategoriesAndName\"/>-->\n\t\t\t\t\t<!--<Title text=\"{i18n>A_view}\" visible=\"{projectView>/oTableControl/bVariantVisible}\" level=\"H3\"/>-->\n\t\t\t\t\t<v:VariantManagement id=\"Variant\" enabled=\"true\" manage=\"onVariantManage\" save=\"onP13nSave\" select=\"onVariantSelect\"\n\t\t\t\t\t\tshowExecuteOnSelection=\"false\" showShare=\"false\" visible=\"{projectView>/oTableControl/bVariantVisible}\" standardItemText=\"Custom Views\"></v:VariantManagement>\n\t\t\t\t\t<Button icon=\"sap-icon://personnel-view\" tooltip=\"{i18n>detailPersonalizeSettings}\" press=\"onPersonalizeSettings\"/>\n\t\t\t\t\t<Button icon=\"sap-icon://download\" tooltip=\"{i18n>Export to Excel}\" press=\"onExport\"/>\n\t\t\t\t\t<Button icon=\"sap-icon://decline\" tooltip=\"{i18n>detailClearSettings}\" press=\"onClearAllSettings\"/>\n\t\t\t\t\t<Button icon=\"sap-icon://refresh\" tooltip=\"{i18n>detailRefresh}\" press=\"onPressRefresh\"\n\t\t\t\t\t\tenabled=\"{projectView>/oTableControl/refreshEnabled}\" visible=\"{projectView>/oTableControl/bRefreshVisible}\"/>\n\t\t\t\t</Toolbar>\n\t\t\t</t:toolbar>\n\t\t\t<t:columns >\n\t\t\t\t<t:Column id=\"_ItemDesc\" visible=\"{P13n>/FixedColumnConfig/0/visible}\" width=\"{P13n>/FixedColumnConfig/0/width}\" sortProperty=\"ItemDesc\"\n\t\t\t\t\tfilterProperty=\"ItemDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailItemName}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>ItemDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_itemId\" visible=\"{P13n>/FixedColumnConfig/1/visible}\" width=\"{P13n>/FixedColumnConfig/1/width}\" sortProperty=\"ItemId\"\n\t\t\t\t\tfilterProperty=\"ItemId\">\n\t\t\t\t\t<Label text=\"{i18n>detailItemId}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>ItemId}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_CategoryDesc\" visible=\"{P13n>/FixedColumnConfig/2/visible}\" width=\"{P13n>/FixedColumnConfig/2/width}\"\n\t\t\t\t\tsortProperty=\"CategoryDesc\" filterProperty=\"CategoryDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailCategoryDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>CategoryDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_SubcategoryDesc\" visible=\"{P13n>/FixedColumnConfig/3/visible}\" width=\"{P13n>/FixedColumnConfig/3/width}\"\n\t\t\t\t\tsortProperty=\"SubcategoryDesc\" filterProperty=\"SubcategoryDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailSubcategoryDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>SubcategoryDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_DivisionDesc\" visible=\"{P13n>/FixedColumnConfig/4/visible}\" width=\"{P13n>/FixedColumnConfig/4/width}\"\n\t\t\t\t\tsortProperty=\"DivisionDesc\" filterProperty=\"DivisionDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailDivisionDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>DivisionDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_LeadHubDesc\" visible=\"{P13n>/FixedColumnConfig/5/visible}\" width=\"{P13n>/FixedColumnConfig/5/width}\" sortProperty=\"HubDesc\"\n\t\t\t\t\tfilterProperty=\"HubDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailHubDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>HubDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_LaunchDt\" visible=\"{P13n>/FixedColumnConfig/6/visible}\" width=\"{P13n>/FixedColumnConfig/6/width}\" sortProperty=\"LaunchDate\">\n\t\t\t\t\t<Label text=\"{i18n>detailLaunchDate}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{path: 'PPMData>LaunchDate', formatter: '.formatter.formatDateShort'}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_InnovationTypeDesc\" visible=\"{P13n>/FixedColumnConfig/7/visible}\" width=\"{P13n>/FixedColumnConfig/7/width}\"\n\t\t\t\t\tsortProperty=\"InnovationDesc\" filterProperty=\"InnovationDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailInnovationTypeDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>InnovationDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_ItemTypeDesc\" visible=\"{P13n>/FixedColumnConfig/8/visible}\" width=\"{P13n>/FixedColumnConfig/8/width}\"\n\t\t\t\t\tsortProperty=\"ItemtypeDesc\" filterProperty=\"ItemtypeDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailItemTypeDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>ItemtypeDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_PhaseDesc\" visible=\"{P13n>/FixedColumnConfig/9/visible}\" width=\"{P13n>/FixedColumnConfig/9/width}\" sortProperty=\"PhaseDesc\"\n\t\t\t\t\tfilterProperty=\"PhaseDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailPhaseDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>PhaseDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_StatusDesc\" visible=\"{P13n>/FixedColumnConfig/10/visible}\" width=\"{P13n>/FixedColumnConfig/10/width}\"\n\t\t\t\t\tsortProperty=\"PhasestatusDesc\" filterProperty=\"PhasestatusDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailStatusDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>PhasestatusDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_StartDt\" visible=\"{P13n>/FixedColumnConfig/11/visible}\" width=\"{P13n>/FixedColumnConfig/11/width}\" sortProperty=\"StartDate\"\n\t\t\t\t\tfilterProperty=\"StartDate\">\n\t\t\t\t\t<Label text=\"{i18n>detailStartDate}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{path: 'PPMData>StartDate', type: 'sap.ui.model.type.Date', formatOptions: {style: 'medium'}}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_currencyDesc\" visible=\"{P13n>/FixedColumnConfig/12/visible}\" width=\"{P13n>/FixedColumnConfig/12/width}\"\n\t\t\t\t\tsortProperty=\"CurrencyDesc\" filterProperty=\"CurrencyDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailCurrencyDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>CurrencyDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_grid\" visible=\"{P13n>/FixedColumnConfig/13/visible}\" width=\"{P13n>/FixedColumnConfig/13/width}\" sortProperty=\"Grid\"\n\t\t\t\t\tfilterProperty=\"Grid\">\n\t\t\t\t\t<Label text=\"{i18n>detailGrid}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{path: 'PPMData>ZimGrid', formatter: '.formatter.formatGrid'}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_BrandDesc\" visible=\"{P13n>/FixedColumnConfig/14/visible}\" width=\"{P13n>/FixedColumnConfig/14/width}\" sortProperty=\"BrandDesc\"\n\t\t\t\t\tfilterProperty=\"BrandDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailBrandDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>BrandDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_SubbrandDesc\" visible=\"{P13n>/FixedColumnConfig/15/visible}\" width=\"{P13n>/FixedColumnConfig/15/width}\"\n\t\t\t\t\tsortProperty=\"SubbrandDesc\" filterProperty=\"SubbrandDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailSubbrandDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>SubbrandDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_StarfoDesc\" visible=\"{P13n>/FixedColumnConfig/16/visible}\" width=\"{P13n>/FixedColumnConfig/16/width}\"\n\t\t\t\t\tsortProperty=\"StarfoDesc\" filterProperty=\"StarfoDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailStarfoDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>StarfoDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_ProjmanagerDesc\" visible=\"{P13n>/FixedColumnConfig/17/visible}\" width=\"{P13n>/FixedColumnConfig/17/width}\"\n\t\t\t\t\tsortProperty=\"ProjmanagerDesc\" filterProperty=\"ProjmanagerDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailProjmanagerDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>ProjmanagerDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_FinamanagerDesc\" visible=\"{P13n>/FixedColumnConfig/18/visible}\" width=\"{P13n>/FixedColumnConfig/18/width}\"\n\t\t\t\t\tsortProperty=\"FinamanagerDesc\" filterProperty=\"FinamanagerDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailFinamanagerDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>FinamanagerDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_CreatedbyDesc\" visible=\"{P13n>/FixedColumnConfig/19/visible}\" width=\"{P13n>/FixedColumnConfig/19/width}\"\n\t\t\t\t\tsortProperty=\"CreatedbyDesc\" filterProperty=\"CreatedbyDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailCreatedbyDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>CreatedbyDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_CreatedDate\" visible=\"{P13n>/FixedColumnConfig/20/visible}\" width=\"{P13n>/FixedColumnConfig/20/width}\"\n\t\t\t\t\tsortProperty=\"CreatedDate\" filterProperty=\"CreatedDate\">\n\t\t\t\t\t<Label text=\"{i18n>detailCreatedDate}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>CreatedDate}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t\t<t:Column id=\"_MarketingDesc\" visible=\"{P13n>/FixedColumnConfig/21/visible}\" width=\"{P13n>/FixedColumnConfig/21/width}\"\n\t\t\t\t\tsortProperty=\"MarkobjeDesc\" filterProperty=\"MarkobjeDesc\">\n\t\t\t\t\t<Label text=\"{i18n>detailMarkobjeDesc}\"/>\n\t\t\t\t\t<t:template>\n\t\t\t\t\t\t<Text text=\"{PPMData>MarkobjeDesc}\"/>\n\t\t\t\t\t</t:template>\n\t\t\t\t</t:Column>\n\t\t\t</t:columns>\n\t\t\t<t:footer>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Label text=\"{PPMData>/ProjectListFooterText}\"/>\n\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t<Label text=\"{PPMData>/ProjectListFooterText2}\"/>\n\t\t\t\t</Toolbar>\n\t\t\t</t:footer>\n\t\t</t:Table>\n\t</VBox>\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/fragment/ProjectListPersonalization.fragment.xml": "<core:FragmentDefinition xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\" xmlns:core=\"sap.ui.core\"\n\txmlns:custom=\"colgate.asm.planning.base.util\" xmlns:f=\"sap.ui.layout.form\" xmlns=\"sap.m\">\n\t<P13nDialog cancel=\"onP13nHandleCancel\" initialVisiblePanelType=\"columns\" ok=\"onP13nHandleClose\" reset=\"onP13nHandleReset\" showReset=\"true\">\n\t\t<!--busy=\"{masterShared>/oDetailBusy/busy}\" busyIndicatorDelay=\"{masterShared>/oDetailBusy/delay}\"-->\n\t\t<panels>\n\t\t\t<P13nColumnsPanel addColumnsItem=\"onP13nAddColumnsItem\" changeColumnsItems=\"onP13nChangeColumnsItem\"\n\t\t\t\titems=\"{path:'P13n>/ColumnCollection'}\" title=\"Columns\" type=\"columns\" visible=\"true\" >\n\t\t\t\t<items>\n\t\t\t\t\t<P13nItem columnKey=\"{P13n>path}\" text=\"{P13n>text}\" visible=\"{P13n>visible}\"/>\n\t\t\t\t</items>\n\t\t\t</P13nColumnsPanel>\n\t\t\t<P13nSortPanel addSortItem=\"onP13nAddSortItem\" containerQuery=\"true\" id=\"oP13nProjectSortPanel\" items=\"{ path: 'P13n>/ColumnCollection' }\"\n\t\t\t\tlayoutMode=\"Desktop\" removeSortItem=\"onP13nRemoveSortItem\" sortItems=\"{ path: 'P13n>/SortItems' }\" title=\"Sort\" type=\"sort\"\n\t\t\t\tupdateSortItem=\"onP13nUpdateSortItem\" visible=\"false\">\n\t\t\t\t<P13nItem columnKey=\"{P13n>path}\" text=\"{P13n>text}\"/>\n\t\t\t\t<sortItems>\n\t\t\t\t\t<P13nSortItem columnKey=\"{P13n>columnKey}\" operation=\"{P13n>operation}\"/>\n\t\t\t\t</sortItems>\n\t\t\t</P13nSortPanel>\n\t\t\t<P13nFilterPanel addFilterItem=\"onP13nAddFilterItem\" containerQuery=\"true\" filterItems=\"{ path: 'P13n>/FilterItems' }\"\n\t\t\t\tid=\"oP13nProjectFilterPanel\" items=\"{ path: 'P13n>/ColumnCollection' }\" layoutMode=\"Desktop\" removeFilterItem=\"onP13nRemoveFilterItem\"\n\t\t\t\ttitle=\"Filter\" type=\"filter\" updateFilterItem=\"onP13nUpdateFilterItem\" visible=\"true\">\n\t\t\t\t<P13nItem columnKey=\"{P13n>path}\" text=\"{P13n>text}\"/>\n\t\t\t\t<filterItems>\n\t\t\t\t\t<P13nFilterItem columnKey=\"{P13n>columnKey}\" operation=\"{P13n>operation}\" value1=\"{P13n>value1}\" exclude=\"{P13n>exclude}\"/>\n\t\t\t\t</filterItems>\n\t\t\t</P13nFilterPanel>\n\t\t\t<!--<custom:CustomPersonalizationPanel title=\"{i18n>CP_tabtitle}\" type=\"custom1\" visible=\"true\">-->\n\t\t\t<!--\t<custom:content>-->\n\t\t\t<!--\t\t<FlexBox alignItems=\"Left\" direction=\"Column\" width=\"100%\">-->\n\t\t\t<!--\t\t\t<items>-->\n\t\t\t<!--\t\t\t\t<FlexBox alignItems=\"Center\" direction=\"Row\" justifyContent=\"spaceAround\" width=\"100%\">-->\n\t\t\t<!--\t\t\t\t\t<items>-->\n\t\t\t<!--\t\t\t\t\t\t<Panel>-->\n\t\t\t<!--\t\t\t\t\t\t\t<headerToolbar>-->\n\t\t\t<!--\t\t\t\t\t\t\t\t<Toolbar height=\"3rem\">-->\n\t\t\t<!--\t\t\t\t\t\t\t\t\t<Title text=\"{i18n>CP_header}\"/>-->\n\t\t\t<!--\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>-->\n\t\t\t<!--\t\t\t\t\t\t\t\t</Toolbar>-->\n\t\t\t<!--\t\t\t\t\t\t\t</headerToolbar>-->\n\t\t\t<!--\t\t\t\t\t\t\t<content>-->\n\t\t\t<!--\t\t\t\t\t\t\t\t<Text text=\"{i18n>CP_instructions}\"/>-->\n\t\t\t<!--\t\t\t\t\t\t\t\t<FlexBox alignItems=\"Start\" direction=\"Column\">-->\n\t\t\t<!--\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://display-more\" press=\"onP13nHandleReload\" text=\"{i18n>CP_fetch}\"/>-->\n\t\t\t<!--\t\t\t\t\t\t\t\t</FlexBox>-->\n\t\t\t<!--\t\t\t\t\t\t\t</content>-->\n\t\t\t<!--\t\t\t\t\t\t</Panel>-->\n\t\t\t<!--\t\t\t\t\t</items>-->\n\t\t\t<!--\t\t\t\t</FlexBox>-->\n\t\t\t<!--\t<FlexBox alignItems=\"Left\" direction=\"Column\">-->\n\t\t\t<!--\t\t<items>-->\n\t\t\t<!--\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"AddActivityForm\"-->\n\t\t\t<!--\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\" title=\"{i18n>CP_Other}\">-->\n\t\t\t<!--\t\t\t\t<f:content>-->\n\t\t\t<!--\t\t\t\t\t<Label required=\"true\" text=\"{i18n>CP_rows}\"/>-->\n\t\t\t<!--<Input id=\"Rows\" type=\"Number\" value=\"{P13n_ActivitiesConfig>/MaxTableRows}\"/>-->\n\t\t\t<!--\t\t\t\t\t<ComboBox id=\"PFinCurrency\" items=\"{path:'PPMData>/VHCurrency'}\" placeholder=\"{i18n>PFin_Placeholder_Currency}\"-->\n\t\t\t<!--\tselectedKey=\"{PGI>CurrencyKey}\" selectionChange=\"onChange\" required=\"true\" visible=\"{PGI>/Visible/PFinCurrency}\"-->\n\t\t\t<!--\teditable=\"{PGI>/Editable/PFinCurrency}\" valueState=\"{PGI>ValueState_CurrencyKey}\" valueStateText=\"{PGI>ValueStateText_CurrencyKey}\">-->\n\t\t\t<!--\t<items>-->\n\t\t\t<!--<core:Item key=\"{PPMData>CurrencyKey}\" text=\"{PPMData>Desc}\"/>-->\n\t\t\t<!--\t\t<core:Item key=\"{PPMData>Waers}\" text=\"{PPMData>Ktext}\"/>-->\n\t\t\t<!--\t</items>-->\n\t\t\t<!--</ComboBox>-->\n\t\t\t<!--\t\t\t\t</f:content>-->\n\t\t\t<!--\t\t\t</f:SimpleForm>-->\n\t\t\t<!--\t\t</items>-->\n\t\t\t<!--\t</FlexBox>-->\n\t\t\t<!--\t\t\t</items>-->\n\t\t\t<!--\t\t</FlexBox>-->\n\t\t\t<!--\t</custom:content>-->\n\t\t\t<!--</custom:CustomPersonalizationPanel>-->\n\t\t</panels>\n\t</P13nDialog>\n</core:FragmentDefinition>",
		"colpal/ppm/projectmgmt/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"colpal/ppm/projectmgmt/model/models\",\r\n\t\"colpal/ppm/projectmgmt/controller/ListSelector\",\r\n\t\"colpal/ppm/projectmgmt/controller/ErrorHandler\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"colpal.ppm.projectmgmt.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// call the base component's init function and create the App view\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});"
	}
});